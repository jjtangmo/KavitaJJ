{"version":3,"sources":["src/app/cards/entity-title/entity-title.component.ts","src/app/cards/entity-title/entity-title.component.html","src/app/cards/entity-info-cards/entity-info-cards.component.ts","src/app/cards/entity-info-cards/entity-info-cards.component.html","src/app/cards/chapter-metadata-detail/chapter-metadata-detail.component.ts","src/app/cards/chapter-metadata-detail/chapter-metadata-detail.component.html","src/app/cards/edit-chapter-progress/edit-chapter-progress.component.ts","src/app/cards/edit-chapter-progress/edit-chapter-progress.component.html","src/app/cards/card-detail-drawer/card-detail-drawer.component.ts","src/app/cards/card-detail-drawer/card-detail-drawer.component.html","src/app/_single-module/review-series-modal/review-series-modal.component.ts","src/app/_single-module/review-series-modal/review-series-modal.component.html","src/app/cards/external-list-item/external-list-item.component.ts","src/app/cards/external-list-item/external-list-item.component.html","src/app/cards/external-series-card/external-series-card.component.ts","src/app/cards/external-series-card/external-series-card.component.html","src/app/cards/list-item/list-item.component.ts","src/app/cards/list-item/list-item.component.html","src/app/_single-module/spoiler/spoiler.component.ts","src/app/_single-module/spoiler/spoiler.component.html","src/app/_single-module/review-card-modal/review-card-modal.component.ts","src/app/_single-module/review-card-modal/review-card-modal.component.html","src/app/_single-module/review-card/review-card.component.ts","src/app/_single-module/review-card/review-card.component.html","node_modules/ngx-stars/fesm2020/ngx-stars.mjs","src/app/series-detail/_components/external-rating/external-rating.component.ts","src/app/series-detail/_components/external-rating/external-rating.component.html","src/app/_pipes/language-name.pipe.ts","src/app/cards/series-info-cards/series-info-cards.component.ts","src/app/cards/series-info-cards/series-info-cards.component.html","src/app/series-detail/_components/series-metadata-detail/series-metadata-detail.component.ts","src/app/series-detail/_components/series-metadata-detail/series-metadata-detail.component.html","src/app/cards/next-expected-card/next-expected-card.component.ts","src/app/cards/next-expected-card/next-expected-card.component.html","src/app/series-detail/_components/series-detail/series-detail.component.ts","src/app/series-detail/_components/series-detail/series-detail.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { UtilityService } from 'src/app/shared/_services/utility.service';\nimport { Chapter, LooseLeafOrDefaultNumber } from 'src/app/_models/chapter';\nimport { LibraryType } from 'src/app/_models/library/library';\nimport { Volume } from 'src/app/_models/volume';\nimport {CommonModule, NgSwitch} from \"@angular/common\";\nimport {TranslocoModule} from \"@ngneat/transloco\";\n\n/**\n * This is primarily used for list item\n */\n@Component({\n  selector: 'app-entity-title',\n  standalone: true,\n  imports: [\n    CommonModule,\n    NgSwitch,\n    TranslocoModule\n  ],\n  templateUrl: './entity-title.component.html',\n  styleUrls: ['./entity-title.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntityTitleComponent implements OnInit {\n\n  protected readonly LooseLeafOrSpecialNumber = LooseLeafOrDefaultNumber;\n  protected readonly LooseLeafOrSpecial = LooseLeafOrDefaultNumber + \"\";\n  protected readonly LibraryType = LibraryType;\n\n  /**\n   * Library type for which the entity belongs\n   */\n  @Input() libraryType: LibraryType = LibraryType.Manga;\n  @Input() seriesName: string = '';\n  @Input({required: true}) entity!: Volume | Chapter;\n  /**\n   * When generating the title, should this prepend 'Volume number' before the Chapter wording\n   */\n  @Input() includeVolume: boolean = false;\n  /**\n   * When a titleName (aka a title) is available on the entity, show it over Volume X Chapter Y\n   */\n  @Input() prioritizeTitleName: boolean = true;\n\n  isChapter = false;\n  titleName: string = '';\n  volumeTitle: string = '';\n\n  get Number() {\n    if (this.isChapter) return (this.entity as Chapter).range;\n    return (this.entity as Volume).name;\n  }\n\n\n  constructor(private utilityService: UtilityService, private readonly cdRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.isChapter = this.utilityService.isChapter(this.entity);\n\n\n\n    if (this.isChapter) {\n      const c = (this.entity as Chapter);\n      this.volumeTitle = c.volumeTitle || '';\n      this.titleName = c.titleName || '';\n    } else {\n      const v = this.utilityService.asVolume(this.entity);\n      this.volumeTitle = v.name || '';\n      this.titleName = v.name || '';\n      if (v.chapters[0].titleName) {\n        this.titleName += ' - ' + v.chapters[0].titleName;\n      }\n    }\n    this.cdRef.markForCheck();\n  }\n}\n","<ng-container *transloco=\"let t; read: 'entity-title'\">\n  <ng-container [ngSwitch]=\"libraryType\">\n    <ng-container *ngSwitchCase=\"LibraryType.Comic\">\n      <ng-container *ngIf=\"titleName !== '' && prioritizeTitleName; else fullComicTitle\">\n        {{titleName}}\n      </ng-container>\n      <ng-template #fullComicTitle>\n        {{seriesName.length > 0 ? seriesName + ' - ' : ''}}\n        <ng-container *ngIf=\"includeVolume && volumeTitle !== ''\">\n          {{Number !== LooseLeafOrSpecial ? (isChapter && includeVolume ? volumeTitle : '') : ''}}\n        </ng-container>\n        {{Number !== LooseLeafOrSpecial ? (isChapter ? t('issue-num') + Number : volumeTitle) : t('special')}}\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"LibraryType.ComicVine\">\n      <ng-container *ngIf=\"titleName !== '' && prioritizeTitleName; else fullComicTitle\">\n        {{titleName}}\n      </ng-container>\n      <ng-template #fullComicTitle>\n        {{seriesName.length > 0 ? seriesName + ' - ' : ''}}\n        <ng-container *ngIf=\"includeVolume && volumeTitle !== ''\">\n          {{Number !== LooseLeafOrSpecial ? (isChapter && includeVolume ? volumeTitle : '') : ''}}\n        </ng-container>\n        {{Number !== LooseLeafOrSpecial ? (isChapter ? t('issue-num') + Number : volumeTitle) : t('special')}}\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"LibraryType.Manga\">\n      <ng-container *ngIf=\"titleName !== '' && prioritizeTitleName; else fullMangaTitle\">\n        {{titleName}}\n      </ng-container>\n      <ng-template #fullMangaTitle>\n        {{seriesName.length > 0 ? seriesName + ' - ' : ''}}\n        <ng-container *ngIf=\"includeVolume && volumeTitle !== ''\">\n          {{Number !== LooseLeafOrSpecial ? (isChapter && includeVolume ? volumeTitle : '') : ''}}\n        </ng-container>\n        {{Number !== LooseLeafOrSpecial ? (isChapter ? (t('chapter') + ' ')  + Number : volumeTitle) : t('special')}}\n      </ng-template>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"LibraryType.Book\">\n      {{volumeTitle}}\n    </ng-container>\n    <ng-container *ngSwitchCase=\"LibraryType.LightNovel\">\n      {{volumeTitle}}\n    </ng-container>\n    <ng-container *ngSwitchCase=\"LibraryType.Images\">\n      {{Number !== LooseLeafOrSpecial ? (isChapter ? (t('chapter') + ' ')  + Number : volumeTitle) : t('special')}}\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n  inject,\n} from '@angular/core';\nimport { UtilityService } from 'src/app/shared/_services/utility.service';\nimport { Chapter } from 'src/app/_models/chapter';\nimport { ChapterMetadata } from 'src/app/_models/metadata/chapter-metadata';\nimport { HourEstimateRange } from 'src/app/_models/series-detail/hour-estimate-range';\nimport { MangaFormat } from 'src/app/_models/manga-format';\nimport { AgeRating } from 'src/app/_models/metadata/age-rating';\nimport { Volume } from 'src/app/_models/volume';\nimport { SeriesService } from 'src/app/_services/series.service';\nimport { ImageService } from 'src/app/_services/image.service';\nimport {CommonModule} from \"@angular/common\";\nimport {IconAndTitleComponent} from \"../../shared/icon-and-title/icon-and-title.component\";\nimport {SafeHtmlPipe} from \"../../_pipes/safe-html.pipe\";\nimport {DefaultDatePipe} from \"../../_pipes/default-date.pipe\";\nimport {BytesPipe} from \"../../_pipes/bytes.pipe\";\nimport {CompactNumberPipe} from \"../../_pipes/compact-number.pipe\";\nimport {AgeRatingPipe} from \"../../_pipes/age-rating.pipe\";\nimport {NgbTooltip} from \"@ng-bootstrap/ng-bootstrap\";\nimport {MetadataDetailComponent} from \"../../series-detail/_components/metadata-detail/metadata-detail.component\";\nimport {TranslocoModule} from \"@ngneat/transloco\";\nimport {TranslocoLocaleModule} from \"@ngneat/transloco-locale\";\nimport {FilterField} from \"../../_models/metadata/v2/filter-field\";\nimport {UtcToLocalTimePipe} from \"../../_pipes/utc-to-local-time.pipe\";\nimport {ImageComponent} from \"../../shared/image/image.component\";\n\n@Component({\n  selector: 'app-entity-info-cards',\n  standalone: true,\n  imports: [CommonModule, IconAndTitleComponent, SafeHtmlPipe, DefaultDatePipe, BytesPipe, CompactNumberPipe,\n    AgeRatingPipe, NgbTooltip, MetadataDetailComponent, TranslocoModule, CompactNumberPipe, TranslocoLocaleModule,\n    UtcToLocalTimePipe, ImageComponent],\n  templateUrl: './entity-info-cards.component.html',\n  styleUrls: ['./entity-info-cards.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntityInfoCardsComponent implements OnInit {\n\n  protected readonly AgeRating = AgeRating;\n  protected readonly MangaFormat = MangaFormat;\n  protected readonly FilterField = FilterField;\n\n  public readonly imageService = inject(ImageService);\n\n\n  @Input({required: true}) entity!: Volume | Chapter;\n  @Input({required: true}) libraryId!: number;\n  /**\n   * This will pull extra information\n   */\n  @Input() includeMetadata: boolean = false;\n\n  /**\n   * Hide more system based fields, like id or Date Added\n   */\n  @Input() showExtendedProperties: boolean = true;\n\n  isChapter = false;\n  chapter!: Chapter;\n\n  chapterMetadata!: ChapterMetadata;\n  ageRating!: string;\n  totalPages: number = 0;\n  totalWordCount: number = 0;\n  readingTime: HourEstimateRange = {maxHours: 1, minHours: 1, avgHours: 1};\n  size: number = 0;\n\n  get WebLinks() {\n    if (this.chapter.webLinks === '') return [];\n    return this.chapter.webLinks.split(',');\n  }\n\n  constructor(private utilityService: UtilityService, private seriesService: SeriesService, private readonly cdRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.isChapter = this.utilityService.isChapter(this.entity);\n\n    this.chapter = this.utilityService.isChapter(this.entity) ? (this.entity as Chapter) : (this.entity as Volume).chapters[0];\n\n\n    if (this.isChapter) {\n      this.size = this.utilityService.asChapter(this.entity).files.reduce((sum, v) => sum + v.bytes, 0);\n    } else {\n      this.size = this.utilityService.asVolume(this.entity).chapters.reduce((sum1, chapter) => {\n        return sum1 + chapter.files.reduce((sum2, file) => {\n          return sum2 + file.bytes;\n        }, 0);\n      }, 0);\n    }\n\n    if (this.includeMetadata) {\n      this.seriesService.getChapterMetadata(this.chapter.id).subscribe(metadata => {\n        this.chapterMetadata = metadata;\n        this.cdRef.markForCheck();\n      });\n    }\n\n    this.totalPages = this.chapter.pages;\n    if (!this.isChapter) {\n      this.totalPages = this.utilityService.asVolume(this.entity).pages;\n    }\n\n    this.totalWordCount = this.chapter.wordCount;\n    if (!this.isChapter) {\n      this.totalWordCount = this.utilityService.asVolume(this.entity).chapters.map(c => c.wordCount).reduce((sum, d) => sum + d);\n    }\n\n\n\n    if (this.isChapter) {\n      this.readingTime.minHours = this.chapter.minHoursToRead;\n      this.readingTime.maxHours = this.chapter.maxHoursToRead;\n      this.readingTime.avgHours = this.chapter.avgHoursToRead;\n    } else {\n      const vol = this.utilityService.asVolume(this.entity);\n      this.readingTime.minHours = vol.minHoursToRead;\n      this.readingTime.maxHours = vol.maxHoursToRead;\n      this.readingTime.avgHours = vol.avgHoursToRead;\n    }\n    this.cdRef.markForCheck();\n  }\n}\n","<ng-container *transloco=\"let t; read: 'entity-info-cards'\">\n\n  <div class=\"mt-3 mb-3\">\n    <div class=\"row g-0\" *ngIf=\"chapterMetadata \">\n      <!-- Tags and Characters are used a lot of Hentai and Doujinshi type content, so showing in list item has value add on first glance -->\n      <app-metadata-detail [tags]=\"chapterMetadata.tags\" [libraryId]=\"libraryId\" [queryParam]=\"FilterField.Tags\" heading=\"Tags\">\n        <ng-template #titleTemplate let-item>{{item.title}}</ng-template>\n      </app-metadata-detail>\n\n      <app-metadata-detail [tags]=\"chapterMetadata.characters\" [libraryId]=\"libraryId\" [queryParam]=\"FilterField.Characters\" heading=\"Characters\">\n        <ng-template #titleTemplate let-item>{{item.name}}</ng-template>\n      </app-metadata-detail>\n    </div>\n\n    <div class=\"row g-0\">\n      <ng-container *ngIf=\"chapter !== undefined && chapter.releaseDate && (chapter.releaseDate | date: 'shortDate') !== '1/1/01'\">\n        <div class=\"col-auto mb-2\">\n          <app-icon-and-title [label]=\"t('release-date-tooltip')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-calendar\" [title]=\"t('release-date-title')\">\n            {{chapter.releaseDate | date:'shortDate' | defaultDate}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"chapter.ageRating !== AgeRating.Unknown\">\n        <div class=\"col-auto mb-2\">\n          <app-icon-and-title [label]=\"t('age-rating-title')\" [clickable]=\"false\" fontClasses=\"fas fa-eye\" [title]=\"t('age-rating-title')\">\n            {{chapter.ageRating | ageRating}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"totalPages > 0\">\n        <div class=\"col-auto mb-2\">\n          <app-icon-and-title [label]=\"t('length-title')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-file-lines\">\n            {{t('pages-count', {num: totalPages | compactNumber})}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"chapter.files[0].format === MangaFormat.EPUB && totalWordCount > 0\">\n        <div class=\"col-auto mb-2\">\n          <app-icon-and-title [label]=\"t('length-title')\" [clickable]=\"false\" fontClasses=\"fa-solid fa-book-open\">\n            {{t('words-count', {num: totalWordCount | compactNumber})}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"chapter.files[0].format === MangaFormat.EPUB && totalWordCount > 0 || chapter.files[0].format !== MangaFormat.EPUB\">\n        <div class=\"col-auto mb-2\">\n          <app-icon-and-title [label]=\"t('read-time-title')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-clock\">\n            <ng-container *ngIf=\"readingTime.maxHours === 0 || readingTime.minHours === 0; else normalReadTime\">{{t('less-than-hour')}}</ng-container>\n            <ng-template #normalReadTime>\n              {{readingTime.minHours}}{{readingTime.maxHours !== readingTime.minHours ? ('-' + readingTime.maxHours) : ''}} {{readingTime.minHours > 1 ? t('hours') : t('hour')}}\n            </ng-template>\n          </app-icon-and-title>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"showExtendedProperties && chapter.createdUtc && chapter.createdUtc !== '' && (chapter.createdUtc | date: 'shortDate') !== '1/1/01'\">\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n        <div class=\"col-auto\">\n          <app-icon-and-title [label]=\"t('date-added-title')\" [clickable]=\"false\" fontClasses=\"fa-solid fa-file-import\" [title]=\"t('date-added-title')\">\n            {{chapter.createdUtc | utcToLocalTime | translocoDate: {dateStyle: 'short', timeStyle: 'short' } | defaultDate}}\n          </app-icon-and-title>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"showExtendedProperties && size > 0\">\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n        <div class=\"col-auto\">\n          <app-icon-and-title [label]=\"t('size-title')\" [clickable]=\"false\" fontClasses=\"fa-solid fa-scale-unbalanced\" [title]=\"t('size-title')\">\n            {{size | bytes}}\n          </app-icon-and-title>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"showExtendedProperties\">\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n        <div class=\"col-auto\">\n          <app-icon-and-title [label]=\"t('id-title')\" [clickable]=\"false\" fontClasses=\"fa-solid fa-fingerprint\" [title]=\"t('id-title')\">\n            {{entity.id}}\n          </app-icon-and-title>\n        </div>\n        <ng-container *ngIf=\"WebLinks.length > 0\">\n          <div class=\"vr d-none d-lg-block m-2\"></div>\n          <div class=\"col-auto\">\n            <app-icon-and-title [label]=\"t('links-title')\" [clickable]=\"false\" fontClasses=\"fa-solid fa-link\" [title]=\"t('links-title')\">\n              <a class=\"me-1\" [href]=\"link | safeHtml\" *ngFor=\"let link of WebLinks\" target=\"_blank\" rel=\"noopener noreferrer\" [title]=\"link\">\n                <app-image height=\"24px\" width=\"24px\" aria-hidden=\"true\" [imageUrl]=\"imageService.getWebLinkImage(link)\"\n                           [errorImage]=\"imageService.errorWebLinkImage\"></app-image>\n              </a>\n            </app-icon-and-title>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"chapter.isbn.length > 0\">\n          <div class=\"vr d-none d-lg-block m-2\"></div>\n          <div class=\"col-auto\">\n            <app-icon-and-title [label]=\"t('isbn-title')\" [clickable]=\"false\" fontClasses=\"fa-solid fa-barcode\" [title]=\"t('isbn-title')\">\n              {{chapter.isbn}}\n            </app-icon-and-title>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"(chapter.lastReadingProgress | date: 'shortDate') !== '1/1/01'\">\n          <div class=\"vr d-none d-lg-block m-2\"></div>\n          <div class=\"col-auto\">\n            <app-icon-and-title [label]=\"t('last-read-title')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-clock\" [ngbTooltip]=\"chapter.lastReadingProgress | date: 'medium'\">\n              {{chapter.lastReadingProgress | date: 'shortDate'}}\n            </app-icon-and-title>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"isChapter\">\n          <div class=\"vr d-none d-lg-block m-2\"></div>\n          <div class=\"col-auto\">\n            <app-icon-and-title [label]=\"t('sort-order-title')\" [clickable]=\"false\" fontClasses=\"fa-solid fa-arrow-down-1-9\" [title]=\"t('sort-order-title')\">\n              {{chapter.sortOrder}}\n            </app-icon-and-title>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ChapterMetadata } from 'src/app/_models/metadata/chapter-metadata';\nimport {CommonModule} from \"@angular/common\";\nimport {BadgeExpanderComponent} from \"../../shared/badge-expander/badge-expander.component\";\nimport {PersonBadgeComponent} from \"../../shared/person-badge/person-badge.component\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\n\n@Component({\n  selector: 'app-chapter-metadata-detail',\n  standalone: true,\n  imports: [CommonModule, BadgeExpanderComponent, PersonBadgeComponent, TranslocoDirective],\n  templateUrl: './chapter-metadata-detail.component.html',\n  styleUrls: ['./chapter-metadata-detail.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChapterMetadataDetailComponent {\n  @Input() chapter: ChapterMetadata | undefined;\n}\n","<ng-container *transloco=\"let t; read: 'chapter-metadata-detail'\">\n  <ng-container *ngIf=\"chapter !== undefined\">\n        <span *ngIf=\"chapter.writers.length === 0 && chapter.coverArtists.length === 0\n        && chapter.pencillers.length === 0 && chapter.inkers.length === 0\n        && chapter.colorists.length === 0 && chapter.letterers.length === 0\n        && chapter.editors.length === 0 && chapter.publishers.length === 0\n        && chapter.characters.length === 0 && chapter.translators.length === 0\n        && chapter.imprints.length === 0 && chapter.locations.length === 0\n        && chapter.teams.length === 0\">\n            {{t('no-data')}}\n        </span>\n      <div class=\"container-flex row row-cols-auto row-cols-lg-5 g-2 g-lg-3 me-0 mt-2\">\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.writers && chapter.writers.length > 0\">\n          <h6>{{t('writers-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.writers\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.coverArtists && chapter.coverArtists.length > 0\">\n          <h6>{{t('cover-artists-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.coverArtists\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.pencillers && chapter.pencillers.length > 0\">\n          <h6>{{t('pencillers-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.pencillers\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.inkers && chapter.inkers.length > 0\">\n          <h6>{{t('inkers-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.inkers\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.colorists && chapter.colorists.length > 0\">\n          <h6>{{t('colorists-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.colorists\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.letterers && chapter.letterers.length > 0\">\n          <h6>{{t('letterers-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.letterers\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.editors && chapter.editors.length > 0\">\n          <h6>{{t('editors-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.editors\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.publishers && chapter.publishers.length > 0\">\n          <h6>{{t('publishers-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.publishers\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.imprints && chapter.imprints.length > 0\">\n          <h6>{{t('imprints-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.imprints\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.characters && chapter.characters.length > 0\">\n          <h6>{{t('characters-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.characters\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.teams && chapter.teams.length > 0\">\n          <h6>{{t('teams-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.teams\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.locations && chapter.locations.length > 0\">\n          <h6>{{t('locations-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.locations\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n\n        <div class=\"col-auto mt-2\" *ngIf=\"chapter.translators && chapter.translators.length > 0\">\n          <h6>{{t('translators-title')}}</h6>\n          <app-badge-expander [items]=\"chapter.translators\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge [person]=\"item\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n      </div>\n  </ng-container>\n</ng-container>\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, Input, OnInit} from '@angular/core';\nimport {Chapter} from \"../../_models/chapter\";\nimport {AsyncPipe, NgForOf, TitleCasePipe} from \"@angular/common\";\nimport {DefaultValuePipe} from \"../../_pipes/default-value.pipe\";\nimport {UtcToLocalTimePipe} from \"../../_pipes/utc-to-local-time.pipe\";\nimport {FullProgress} from \"../../_models/readers/full-progress\";\nimport {ReaderService} from \"../../_services/reader.service\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {FormArray, FormBuilder, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {SentenceCasePipe} from \"../../_pipes/sentence-case.pipe\";\n\n@Component({\n  selector: 'app-edit-chapter-progress',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    DefaultValuePipe,\n    NgForOf,\n    TitleCasePipe,\n    UtcToLocalTimePipe,\n    TranslocoDirective,\n    ReactiveFormsModule,\n    SentenceCasePipe\n  ],\n  templateUrl: './edit-chapter-progress.component.html',\n  styleUrl: './edit-chapter-progress.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditChapterProgressComponent implements OnInit {\n\n  private readonly readerService = inject(ReaderService);\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly fb = inject(FormBuilder);\n\n  @Input({required: true}) chapter!: Chapter;\n\n  progressEvents: Array<FullProgress> = [];\n  editMode: {[key: number]: boolean} = {};\n  formGroup = this.fb.group({\n    items: this.fb.array([])\n  });\n\n  get items() {\n    return this.formGroup.get('items') as FormArray;\n  }\n\n\n  ngOnInit() {\n    this.readerService.getAllProgressForChapter(this.chapter!.id).subscribe(res => {\n      this.progressEvents = res;\n      this.progressEvents.forEach((v, i) => {\n        this.editMode[i] = false;\n        this.items.push(this.createRowForm(v));\n      });\n      this.cdRef.markForCheck();\n    });\n  }\n\n  createRowForm(progress: FullProgress): FormGroup {\n    return this.fb.group({\n      pagesRead: [progress.pagesRead, [Validators.required, Validators.min(0), Validators.max(this.chapter!.pages)]],\n      created: [progress.createdUtc, [Validators.required]],\n      lastModified: [progress.lastModifiedUtc, [Validators.required]],\n    });\n  }\n\n  edit(progress: FullProgress, idx: number) {\n    this.editMode[idx] = !this.editMode[idx];\n    this.cdRef.markForCheck();\n  }\n\n  save(progress: FullProgress, idx: number) {\n    // todo\n    this.editMode[idx] = !this.editMode[idx];\n    // this.formGroup[idx + ''].patchValue({\n    //   pagesRead: progress.pagesRead,\n    //   // Patch other form values as needed\n    // });\n    this.cdRef.markForCheck();\n  }\n\n}\n","<ng-container *transloco=\"let t; read: 'edit-chapter-progress'\">\n  <table class=\"table table-striped\" [formGroup]=\"formGroup\">\n    <thead>\n    <tr>\n      <th scope=\"col\">{{t('user-header')}}</th>\n      <th scope=\"col\">{{t('page-read-header')}}</th>\n      <th scope=\"col\">{{t('date-created-header')}}</th>\n      <th scope=\"col\">{{t('date-updated-header')}}</th>\n<!--      <th scope=\"col\">{{t('action-header')}}</th>-->\n    </tr>\n    </thead>\n    <tbody>\n      @for(rowForm of items.controls; track rowForm; let idx = $index) {\n        <tr >\n          <td id=\"progress-event--{{idx}}\">\n            {{progressEvents[idx].userName | sentenceCase}}\n          </td>\n          <td>\n            @if(editMode[idx]) {\n              <input type=\"number\" formControlName=\"pagesRead\" class=\"form-control\"/>\n            } @else {\n              {{progressEvents[idx].pagesRead}}\n            }\n          </td>\n          <td>\n            {{progressEvents[idx].createdUtc}}\n          </td>\n          <td>\n            {{progressEvents[idx].lastModifiedUtc}}\n          </td>\n<!--          <td>-->\n<!--            @if(editMode[idx]) {-->\n<!--              <button class=\"btn btn-primary\" (click)=\"save(progressEvents[idx], idx)\" attr.aria-labelledby=\"progress-event&#45;&#45;{{idx}}\">-->\n<!--                <i class=\"fa-solid fa-floppy-disk\" aria-hidden=\"true\"></i>-->\n<!--                <span class=\"visually-hidden\">{{t('save-alt')}}</span>-->\n<!--              </button>-->\n<!--            } @else {-->\n<!--              <button class=\"btn btn-primary\" (click)=\"edit(progressEvents[idx], idx)\" attr.aria-labelledby=\"progress-event&#45;&#45;{{idx}}\">-->\n<!--                <i class=\"fa-solid fa-pencil\" aria-hidden=\"true\"></i>-->\n<!--                <span class=\"visually-hidden\">{{t('edit-alt')}}</span>-->\n<!--              </button>-->\n<!--            }-->\n<!--          </td>-->\n        </tr>\n      }\n    </tbody>\n  </table>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  NgbActiveOffcanvas,\n  NgbNav,\n  NgbNavContent,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavOutlet\n} from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of, map, shareReplay } from 'rxjs';\nimport { DownloadService } from 'src/app/shared/_services/download.service';\nimport { Breakpoint, UtilityService } from 'src/app/shared/_services/utility.service';\nimport {Chapter, LooseLeafOrDefaultNumber} from 'src/app/_models/chapter';\nimport { ChapterMetadata } from 'src/app/_models/metadata/chapter-metadata';\nimport { Device } from 'src/app/_models/device/device';\nimport { LibraryType } from 'src/app/_models/library/library';\nimport { MangaFile } from 'src/app/_models/manga-file';\nimport { MangaFormat } from 'src/app/_models/manga-format';\nimport { Volume } from 'src/app/_models/volume';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { ActionItem, ActionFactoryService, Action } from 'src/app/_services/action-factory.service';\nimport { ActionService } from 'src/app/_services/action.service';\nimport { ImageService } from 'src/app/_services/image.service';\nimport { LibraryService } from 'src/app/_services/library.service';\nimport { ReaderService } from 'src/app/_services/reader.service';\nimport { SeriesService } from 'src/app/_services/series.service';\nimport { UploadService } from 'src/app/_services/upload.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {CommonModule} from \"@angular/common\";\nimport {EntityTitleComponent} from \"../entity-title/entity-title.component\";\nimport {ImageComponent} from \"../../shared/image/image.component\";\nimport {ReadMoreComponent} from \"../../shared/read-more/read-more.component\";\nimport {EntityInfoCardsComponent} from \"../entity-info-cards/entity-info-cards.component\";\nimport {CoverImageChooserComponent} from \"../cover-image-chooser/cover-image-chooser.component\";\nimport {ChapterMetadataDetailComponent} from \"../chapter-metadata-detail/chapter-metadata-detail.component\";\nimport {DefaultDatePipe} from \"../../_pipes/default-date.pipe\";\nimport {BytesPipe} from \"../../_pipes/bytes.pipe\";\nimport {BadgeExpanderComponent} from \"../../shared/badge-expander/badge-expander.component\";\nimport {TagBadgeComponent} from \"../../shared/tag-badge/tag-badge.component\";\nimport {PersonBadgeComponent} from \"../../shared/person-badge/person-badge.component\";\nimport {translate, TranslocoDirective, TranslocoService} from \"@ngneat/transloco\";\nimport {CardActionablesComponent} from \"../../_single-module/card-actionables/card-actionables.component\";\nimport {EditChapterProgressComponent} from \"../edit-chapter-progress/edit-chapter-progress.component\";\n\nenum TabID {\n  General = 0,\n  Metadata = 1,\n  Cover = 2,\n  Progress = 3,\n  Files = 4\n}\n\n@Component({\n  selector: 'app-card-detail-drawer',\n  standalone: true,\n  imports: [CommonModule, EntityTitleComponent, NgbNav, NgbNavItem, NgbNavLink, NgbNavContent, ImageComponent, ReadMoreComponent, EntityInfoCardsComponent, CoverImageChooserComponent, ChapterMetadataDetailComponent, CardActionablesComponent, DefaultDatePipe, BytesPipe, NgbNavOutlet, BadgeExpanderComponent, TagBadgeComponent, PersonBadgeComponent, TranslocoDirective, EditChapterProgressComponent],\n  templateUrl: './card-detail-drawer.component.html',\n  styleUrls: ['./card-detail-drawer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardDetailDrawerComponent implements OnInit {\n\n  private readonly destroyRef = inject(DestroyRef);\n\n  protected readonly MangaFormat = MangaFormat;\n  protected readonly Breakpoint = Breakpoint;\n  protected readonly LibraryType = LibraryType;\n  protected readonly TabID = TabID;\n  protected readonly LooseLeafOrSpecialNumber = LooseLeafOrDefaultNumber;\n\n  @Input() parentName = '';\n  @Input() seriesId: number = 0;\n  @Input() libraryId: number = 0;\n  @Input({required: true}) data!: Volume | Chapter;\n\n  /**\n   * If this is a volume, this will be first chapter for said volume.\n   */\n  chapter!: Chapter;\n  isChapter = false;\n  chapters: Chapter[] = [];\n\n  imageUrls: Array<string> = [];\n  /**\n   * Cover image for the entity\n   */\n  coverImageUrl!: string;\n\n  isAdmin$: Observable<boolean> = of(false);\n\n\n  actions: ActionItem<any>[] = [];\n  chapterActions: ActionItem<Chapter>[] = [];\n  libraryType: LibraryType = LibraryType.Manga;\n\n\n  tabs = [\n    {title: 'general-tab', disabled: false},\n    {title: 'metadata-tab', disabled: false},\n    {title: 'cover-tab', disabled: false},\n    {title: 'progress-tab', disabled: false},\n    {title: 'info-tab', disabled: false}\n  ];\n  active = this.tabs[0];\n\n  chapterMetadata: ChapterMetadata | undefined;\n  summary: string = '';\n\n  downloadInProgress: boolean = false;\n\n\n\n\n  constructor(public utilityService: UtilityService,\n    public imageService: ImageService, private uploadService: UploadService, private toastr: ToastrService,\n    private accountService: AccountService, private actionFactoryService: ActionFactoryService,\n    private actionService: ActionService, private router: Router, private libraryService: LibraryService,\n    private seriesService: SeriesService, private readerService: ReaderService,\n    public activeOffcanvas: NgbActiveOffcanvas, private downloadService: DownloadService, private readonly cdRef: ChangeDetectorRef) {\n      this.isAdmin$ = this.accountService.currentUser$.pipe(\n        takeUntilDestroyed(this.destroyRef),\n        map(user => (user && this.accountService.hasAdminRole(user)) || false),\n        shareReplay()\n      );\n  }\n\n  ngOnInit(): void {\n    this.imageUrls = this.chapters.map(c => this.imageService.getChapterCoverImage(c.id));\n    this.isChapter = this.utilityService.isChapter(this.data);\n    this.chapter = this.utilityService.isChapter(this.data) ? (this.data as Chapter) : (this.data as Volume).chapters[0];\n\n    this.seriesService.getChapterMetadata(this.chapter.id).subscribe(metadata => {\n      this.chapterMetadata = metadata;\n      this.cdRef.markForCheck();\n    });\n\n    if (this.isChapter) {\n      this.coverImageUrl = this.imageService.getChapterCoverImage(this.data.id);\n      this.summary = this.utilityService.asChapter(this.data).summary || '';\n      this.chapters.push(this.data as Chapter);\n    } else {\n      this.coverImageUrl = this.imageService.getVolumeCoverImage(this.data.id);\n      this.summary = this.utilityService.asVolume(this.data).chapters[0].summary || '';\n      this.chapters.push(...(this.data as Volume).chapters);\n    }\n\n    this.chapterActions = this.actionFactoryService.getChapterActions(this.handleChapterActionCallback.bind(this))\n                                .filter(item => item.action !== Action.Edit);\n    this.chapterActions.push({title: 'read', action: Action.Read, callback: this.handleChapterActionCallback.bind(this), requiresAdmin: false, children: []});\n    if (this.isChapter) {\n      const chapter = this.utilityService.asChapter(this.data);\n      this.chapterActions = this.actionFactoryService.filterSendToAction(this.chapterActions, chapter);\n    } else {\n      this.chapterActions = this.actionFactoryService.filterSendToAction(this.chapterActions, this.chapters[0]);\n    }\n\n    this.libraryService.getLibraryType(this.libraryId).subscribe(type => {\n      this.libraryType = type;\n      this.cdRef.markForCheck();\n    });\n\n\n    const collator = new Intl.Collator(undefined, {numeric: true, sensitivity: 'base'});\n    this.chapters.forEach((c: Chapter) => {\n      c.files.sort((a: MangaFile, b: MangaFile) => collator.compare(a.filePath, b.filePath));\n    });\n\n    this.imageUrls = this.chapters.map(c => this.imageService.getChapterCoverImage(c.id));\n\n    this.cdRef.markForCheck();\n  }\n\n\n  close() {\n    this.activeOffcanvas.close();\n  }\n\n  formatChapterNumber(chapter: Chapter) {\n    if (chapter.minNumber === LooseLeafOrDefaultNumber) {\n      return '1';\n    }\n    return chapter.range + '';\n  }\n\n  performAction(action: ActionItem<any>, chapter: Chapter) {\n    if (typeof action.callback === 'function') {\n      action.callback(action, chapter);\n    }\n  }\n\n  applyCoverImage(coverUrl: string) {\n    this.uploadService.updateChapterCoverImage(this.chapter.id, coverUrl).subscribe(() => {});\n  }\n\n  updateCoverImageIndex(selectedIndex: number) {\n    if (selectedIndex <= 0) return;\n    this.applyCoverImage(this.imageUrls[selectedIndex]);\n  }\n\n  resetCoverImage() {\n    this.uploadService.resetChapterCoverLock(this.chapter.id).subscribe(() => {\n      this.toastr.info(translate('toasts.regen-cover'));\n    });\n  }\n\n  markChapterAsRead(chapter: Chapter) {\n    if (this.seriesId === 0) {\n      return;\n    }\n\n    this.actionService.markChapterAsRead(this.libraryId, this.seriesId, chapter, () => { this.cdRef.markForCheck(); });\n  }\n\n  markChapterAsUnread(chapter: Chapter) {\n    if (this.seriesId === 0) {\n      return;\n    }\n\n    this.actionService.markChapterAsUnread(this.libraryId, this.seriesId, chapter, () => { this.cdRef.markForCheck(); });\n  }\n\n  handleChapterActionCallback(action: ActionItem<Chapter>, chapter: Chapter) {\n    switch (action.action) {\n      case(Action.MarkAsRead):\n        this.markChapterAsRead(chapter);\n        break;\n      case(Action.MarkAsUnread):\n        this.markChapterAsUnread(chapter);\n        break;\n        case(Action.AddToReadingList):\n        this.actionService.addChapterToReadingList(chapter, this.seriesId);\n        break;\n      case (Action.IncognitoRead):\n        this.readChapter(chapter, true);\n        break;\n      case (Action.Download):\n        this.download(chapter);\n        break;\n      case (Action.Read):\n        this.readChapter(chapter, false);\n        break;\n      case (Action.SendTo):\n      {\n        const device = (action._extra!.data as Device);\n        this.actionService.sendToDevice([chapter.id], device);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  readChapter(chapter: Chapter, incognito: boolean = false) {\n    if (chapter.pages === 0) {\n      this.toastr.error(translate('toasts.no-pages'));\n      return;\n    }\n\n    const params = this.readerService.getQueryParamsObject(incognito, false);\n    this.router.navigate(this.readerService.getNavigationArray(this.libraryId, this.seriesId, chapter.id, chapter.files[0].format), {queryParams: params});\n    this.close();\n  }\n\n  download(chapter: Chapter) {\n    if (this.downloadInProgress) {\n      this.toastr.info(translate('toasts.download-in-progress'));\n      return;\n    }\n\n    this.downloadInProgress = true;\n    this.cdRef.markForCheck();\n    this.downloadService.download('chapter', chapter, (d) => {\n      if (d) return;\n      this.downloadInProgress = false;\n      this.cdRef.markForCheck();\n    });\n  }\n}\n","<ng-container *transloco=\"let t; read: 'card-detail-drawer'\">\n  <div class=\"offcanvas-header\">\n    <h5 class=\"offcanvas-title\">\n        <span class=\"modal-title\" id=\"modal-basic-title\">\n            <app-entity-title [libraryType]=\"libraryType\" [entity]=\"data\" [seriesName]=\"parentName\"></app-entity-title>\n        </span>\n    </h5>\n    <button type=\"button\" class=\"btn-close text-reset\" aria-label=\"Close\" (click)=\"activeOffcanvas.dismiss()\"></button>\n  </div>\n\n  <div class=\"offcanvas-body pb-3\">\n    <div class=\"d-flex\">\n      <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-pills\" orientation=\"vertical\" style=\"max-width: 135px;\">\n        <li [ngbNavItem]=\"tabs[TabID.General]\">\n          <a ngbNavLink>{{t(tabs[TabID.General].title)}}</a>\n          <ng-template ngbNavContent>\n            <div class=\"container-fluid\" style=\"overflow: auto\">\n\n              <div class=\"row g-0\">\n                <div class=\"d-none d-md-block col-md-2 col-lg-1\">\n                  <app-image class=\"me-2\" width=\"74px\" [imageUrl]=\"coverImageUrl\"></app-image>\n                </div>\n                <div class=\"col-md-10 col-lg-11\">\n                  <ng-container *ngIf=\"summary.length > 0; else noSummary\">\n                    <app-read-more [text]=\"summary\" [maxLength]=\"250\"></app-read-more>\n                  </ng-container>\n                  <ng-template #noSummary>\n                    {{t('no-summary')}}\n                  </ng-template>\n                </div>\n              </div>\n\n              <app-entity-info-cards [entity]=\"data\" [libraryId]=\"libraryId\"></app-entity-info-cards>\n\n            </div>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"tabs[TabID.Metadata]\">\n          <a ngbNavLink>{{t(tabs[TabID.Metadata].title)}}</a>\n          <ng-template ngbNavContent>\n            <app-chapter-metadata-detail [chapter]=\"chapterMetadata\"></app-chapter-metadata-detail>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"tabs[TabID.Progress]\">\n          <a ngbNavLink>{{t(tabs[TabID.Progress].title)}}</a>\n          <ng-template ngbNavContent>\n            <app-edit-chapter-progress [chapter]=\"chapter\"></app-edit-chapter-progress>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"tabs[TabID.Cover]\" [disabled]=\"(isAdmin$ | async) === false\">\n          <a ngbNavLink>{{t(tabs[TabID.Cover].title)}}</a>\n          <ng-template ngbNavContent>\n            <app-cover-image-chooser [(imageUrls)]=\"imageUrls\" (imageSelected)=\"updateCoverImageIndex($event)\"\n                                     (selectedBase64Url)=\"applyCoverImage($event)\" [showReset]=\"chapter.coverImageLocked\"\n                                     (resetClicked)=\"resetCoverImage()\"></app-cover-image-chooser>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"tabs[TabID.Files]\" [disabled]=\"(isAdmin$ | async) === false\">\n          <a ngbNavLink>{{t(tabs[TabID.Files].title)}}</a>\n          <ng-template ngbNavContent>\n            @if (!utilityService.isChapter(data)) {\n              <h4>{{utilityService.formatChapterName(libraryType) + 's'}}</h4>\n            }\n            <ul class=\"list-unstyled\">\n              <li class=\"d-flex my-4\" *ngFor=\"let chapter of chapters\">\n                <a (click)=\"readChapter(chapter)\" href=\"javascript:void(0);\" [title]=\"t('read')\">\n                  <app-image class=\"me-2\" width=\"74px\" [imageUrl]=\"imageService.getChapterCoverImage(chapter.id)\"></app-image>\n                </a>\n                <div class=\"flex-grow-1\">\n                  <h5 class=\"mt-0 mb-1\">\n                    <span>\n                        <span>\n                            <app-card-actionables (actionHandler)=\"performAction($event, chapter)\" [actions]=\"chapterActions\"\n                                                  [labelBy]=\"utilityService.formatChapterName(libraryType, true, true) + formatChapterNumber(chapter)\"></app-card-actionables>\n                            <ng-container *ngIf=\"chapter.minNumber !== LooseLeafOrSpecialNumber; else specialHeader\">\n                                {{utilityService.formatChapterName(libraryType, true, false) }} {{formatChapterNumber(chapter)}}\n                            </ng-container>\n                        </span>\n                        <span class=\"badge bg-primary rounded-pill ms-1\">\n                            <span *ngIf=\"chapter.pagesRead > 0 && chapter.pagesRead < chapter.pages\">{{chapter.pagesRead}} / {{chapter.pages}}</span>\n                            <span *ngIf=\"chapter.pagesRead === 0\">{{t('unread') | uppercase}}</span>\n                            <span *ngIf=\"chapter.pagesRead === chapter.pages\">{{t('read') | uppercase}}</span>\n                        </span>\n                    </span>\n                    <ng-template #specialHeader>{{t('files')}}</ng-template>\n                  </h5>\n                  <ul class=\"list-group\">\n                    @for (file of chapter.files; track file.id) {\n                      <li class=\"list-group-item no-hover\">\n                        <span>{{file.filePath}}</span>\n                        <div class=\"row g-0\">\n                          <div class=\"col\">\n                            {{t('pages')}} {{file.pages | number:''}}\n                          </div>\n                          @if (data.hasOwnProperty('created')) {\n                            <div class=\"col\">\n                              {{t('added')}} {{file.created | date: 'short' | defaultDate}}\n                            </div>\n                          }\n                          <div class=\"col\">\n                            {{t('size')}} {{file.bytes | bytes}}\n                          </div>\n                        </div>\n                      </li>\n                    }\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </ng-template>\n        </li>\n      </ul>\n      <div [ngbNavOutlet]=\"nav\" class=\"tab-content {{utilityService.getActiveBreakpoint() === Breakpoint.Mobile ? 'mt-3' : 'ms-4 flex-fill'}}\"></div>\n    </div>\n  </div>\n\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  OnInit\n} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {NgbActiveModal, NgbRating} from '@ng-bootstrap/ng-bootstrap';\nimport { SeriesService } from 'src/app/_services/series.service';\nimport {UserReview} from \"../review-card/user-review\";\nimport {CommonModule} from \"@angular/common\";\nimport {translate, TranslocoDirective} from \"@ngneat/transloco\";\nimport {ConfirmService} from \"../../shared/confirm.service\";\nimport {ToastrService} from \"ngx-toastr\";\n\nexport enum ReviewSeriesModalCloseAction {\n  Create,\n  Edit,\n  Delete,\n  Close\n}\nexport interface ReviewSeriesModalCloseEvent {\n  success: boolean,\n  review: UserReview;\n  action: ReviewSeriesModalCloseAction\n}\n\n@Component({\n  selector: 'app-review-series-modal',\n  standalone: true,\n  imports: [CommonModule, NgbRating, ReactiveFormsModule, TranslocoDirective],\n  templateUrl: './review-series-modal.component.html',\n  styleUrls: ['./review-series-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewSeriesModalComponent implements OnInit {\n\n  protected readonly modal = inject(NgbActiveModal);\n  private readonly seriesService = inject(SeriesService);\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly confirmService = inject(ConfirmService);\n  private readonly toastr = inject(ToastrService);\n  protected readonly minLength = 5;\n\n  @Input({required: true}) review!: UserReview;\n  reviewGroup!: FormGroup;\n\n  ngOnInit(): void {\n    this.reviewGroup = new FormGroup({\n      reviewBody: new FormControl(this.review.body, [Validators.required, Validators.minLength(this.minLength)]),\n    });\n    this.cdRef.markForCheck();\n  }\n\n  close() {\n    this.modal.close({success: false, review: this.review, action: ReviewSeriesModalCloseAction.Close});\n  }\n\n  async delete() {\n    if (!await this.confirmService.confirm(translate('toasts.delete-review'))) return;\n    this.seriesService.deleteReview(this.review.seriesId).subscribe(() => {\n      this.toastr.success(translate('toasts.review-deleted'));\n      this.modal.close({success: true, review: this.review, action: ReviewSeriesModalCloseAction.Delete});\n    });\n  }\n  save() {\n    const model = this.reviewGroup.value;\n    if (model.reviewBody.length < this.minLength) {\n      return;\n    }\n    this.seriesService.updateReview(this.review.seriesId, model.reviewBody).subscribe(review => {\n      this.modal.close({success: true, review: review, action: ReviewSeriesModalCloseAction.Edit});\n    });\n  }\n}\n","<ng-container *transloco=\"let t; read:'review-series-modal'\">\n  <div>\n      <div class=\"modal-header\">\n          <h4 class=\"modal-title\" id=\"modal-basic-title\">{{t('title')}}</h4>\n          <button type=\"button\" class=\"btn-close\" [attr.aria-label]=\"t('close')\" (click)=\"close()\">\n\n          </button>\n      </div>\n      <div class=\"modal-body\">\n          <form [formGroup]=\"reviewGroup\">\n              <div class=\"row g-0 mt-2\">\n                  <label for=\"review\" class=\"form-label\">{{t('review-label')}}</label>\n                  <textarea id=\"review\" class=\"form-control\" formControlName=\"reviewBody\" rows=\"3\" [minlength]=\"minLength\"\n                            [class.is-invalid]=\"reviewGroup.get('reviewBody')?.invalid && reviewGroup.get('reviewBody')?.touched\" aria-describedby=\"body-validations\"\n                  ></textarea>\n                <div id=\"body-validations\" class=\"invalid-feedback\" *ngIf=\"reviewGroup.dirty || reviewGroup.touched\">\n                  @if (reviewGroup.get('reviewBody')?.errors?.required) {\n                    <div>{{t('required')}}</div>\n                  }\n                  @if (reviewGroup.get('reviewBody')?.errors?.minlength) {\n                    <div>{{t('min-length', {count: minLength})}}</div>\n                  }\n                </div>\n              </div>\n          </form>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-danger\" (click)=\"delete()\">{{t('delete')}}</button>\n          <button class=\"btn btn-secondary\" (click)=\"close()\">{{t('close')}}</button>\n          <button type=\"submit\" class=\"btn btn-primary\" (click)=\"save()\">{{t('save')}}</button>\n      </div>\n  </div>\n</ng-container>\n\n\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ImageComponent} from \"../../shared/image/image.component\";\nimport {NgbProgressbar, NgbTooltip} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ReadMoreComponent} from \"../../shared/read-more/read-more.component\";\n\n@Component({\n  selector: 'app-external-list-item',\n  standalone: true,\n  imports: [CommonModule, ImageComponent, NgbProgressbar, NgbTooltip, ReadMoreComponent],\n  templateUrl: './external-list-item.component.html',\n  styleUrls: ['./external-list-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExternalListItemComponent {\n\n  /**\n   * Image to show\n   */\n  @Input() imageUrl: string = '';\n\n  /**\n   * Size of the Image Height. Defaults to 230px.\n   */\n  @Input() imageHeight: string = '230px';\n  /**\n   * Size of the Image Width Defaults to 158px.\n   */\n  @Input() imageWidth: string = '158px';\n  @Input() summary: string | null = '';\n}\n","<div class=\"list-item-container d-flex flex-row g-0 mb-2 p-2\">\n  <div class=\"pe-2\">\n    <app-image [imageUrl]=\"imageUrl\" [height]=\"imageHeight\" maxHeight=\"200px\" [width]=\"imageWidth\"></app-image>\n  </div>\n  <div class=\"flex-grow-1\">\n    <div class=\"g-0\">\n      <h5 class=\"mb-0\">\n        <ng-content select=\"[title]\"></ng-content>\n      </h5>\n      <ng-container *ngIf=\"summary && summary.length > 0\">\n        <div class=\"mt-2 ps-2\">\n          <app-read-more [text]=\"summary\" [maxLength]=\"250\"></app-read-more>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef, inject,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport {CommonModule, NgOptimizedImage} from '@angular/common';\nimport {ExternalSeries} from \"../../_models/series-detail/external-series\";\nimport {RouterLinkActive} from \"@angular/router\";\nimport {ImageComponent} from \"../../shared/image/image.component\";\nimport {NgbOffcanvas, NgbProgressbar, NgbTooltip} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {SeriesPreviewDrawerComponent} from \"../../_single-module/series-preview-drawer/series-preview-drawer.component\";\nimport {ProviderImagePipe} from \"../../_pipes/provider-image.pipe\";\nimport {SafeHtmlPipe} from \"../../_pipes/safe-html.pipe\";\n\n@Component({\n  selector: 'app-external-series-card',\n  standalone: true,\n  imports: [CommonModule, ImageComponent, NgbProgressbar, NgbTooltip, ReactiveFormsModule, RouterLinkActive, TranslocoDirective, NgOptimizedImage, ProviderImagePipe, SafeHtmlPipe],\n  templateUrl: './external-series-card.component.html',\n  styleUrls: ['./external-series-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExternalSeriesCardComponent {\n  @Input({required: true}) data!: ExternalSeries;\n  /**\n   * When clicking on the series, instead of opening, opens a preview drawer\n   */\n  @Input() previewOnClick: boolean = false;\n  @ViewChild('link', {static: false}) link!: ElementRef<HTMLAnchorElement>;\n\n\n  private readonly offcanvasService = inject(NgbOffcanvas);\n\n  handleClick() {\n    if (this.previewOnClick) {\n      const ref = this.offcanvasService.open(SeriesPreviewDrawerComponent, {position: 'end', panelClass: 'navbar-offset'});\n      ref.componentInstance.isExternalSeries = true;\n      ref.componentInstance.aniListId = this.data.aniListId;\n      ref.componentInstance.malId = this.data.malId;\n      ref.componentInstance.name = this.data.name;\n      return;\n    }\n    if (this.link) {\n      this.link.nativeElement.click();\n    }\n  }\n}\n","<ng-container *transloco=\"let t; read: 'external-series-card'\">\n  <ng-container *ngIf=\"data !== undefined\">\n    <div class=\"card-item-container card clickable\">\n      <div class=\"overlay\" (click)=\"handleClick()\">\n        <ng-container>\n          <app-image borderRadius=\".25rem .25rem 0 0\" height=\"230px\" width=\"158px\" [imageUrl]=\"data.coverUrl\"></app-image>\n        </ng-container>\n\n\n        <ng-container>\n          <div class=\"badge-container\">\n            <div class=\"not-read-badge\" ></div>\n          </div>\n        </ng-container>\n\n        <div class=\"card-overlay\"></div>\n\n      </div>\n\n      @if (data.name.length > 0) {\n        <div class=\"card-body\">\n          <div>\n            <span class=\"card-title\" placement=\"top\" id=\"{{data.name}}\" [ngbTooltip]=\"data.name\" (click)=\"handleClick()\" tabindex=\"0\">\n              <img class=\"me-1\" [ngSrc]=\"data.provider | providerImage\" width=\"20\" height=\"20\" alt=\"\">\n              {{data.name}}\n            </span>\n          </div>\n          <a #link class=\"card-title library\" [href]=\"data.url\" target=\"_blank\" rel=\"noreferrer nofollow\">{{t('open-external')}}</a>\n        </div>\n      }\n\n    </div>\n\n  </ng-container>\n\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  EventEmitter,\n  inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { map, Observable } from 'rxjs';\nimport { Download } from 'src/app/shared/_models/download';\nimport { DownloadEvent, DownloadService } from 'src/app/shared/_services/download.service';\nimport {Breakpoint, UtilityService} from 'src/app/shared/_services/utility.service';\nimport { Chapter } from 'src/app/_models/chapter';\nimport { LibraryType } from 'src/app/_models/library/library';\nimport { RelationKind } from 'src/app/_models/series-detail/relation-kind';\nimport { Volume } from 'src/app/_models/volume';\nimport { Action, ActionItem } from 'src/app/_services/action-factory.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {ReadMoreComponent} from \"../../shared/read-more/read-more.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {ImageComponent} from \"../../shared/image/image.component\";\nimport {DownloadIndicatorComponent} from \"../download-indicator/download-indicator.component\";\nimport {EntityInfoCardsComponent} from \"../entity-info-cards/entity-info-cards.component\";\nimport {NgbProgressbar, NgbTooltip} from \"@ng-bootstrap/ng-bootstrap\";\nimport {translate, TranslocoDirective} from \"@ngneat/transloco\";\nimport {CardActionablesComponent} from \"../../_single-module/card-actionables/card-actionables.component\";\n\n@Component({\n  selector: 'app-list-item',\n  standalone: true,\n  imports: [CommonModule, ReadMoreComponent, ImageComponent, DownloadIndicatorComponent, EntityInfoCardsComponent, CardActionablesComponent, NgbProgressbar, NgbTooltip, TranslocoDirective],\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListItemComponent implements OnInit {\n\n  /**\n   * Volume or Chapter to render\n   */\n  @Input({required: true}) entity!: Volume | Chapter;\n  @Input({required: true}) libraryId!: number;\n  /**\n   * Image to show\n   */\n  @Input() imageUrl: string = '';\n  /**\n   * Actions to show\n   */\n  @Input() actions: ActionItem<any>[] = []; // Volume | Chapter\n  /**\n   * Library type to help with formatting title\n   */\n  @Input() libraryType: LibraryType = LibraryType.Manga;\n  /**\n   * Name of the Series to show under the title\n   */\n  @Input() seriesName: string = '';\n\n  /**\n   * Size of the Image Height. Defaults to 230px.\n   */\n  @Input() imageHeight: string = '230px';\n  /**\n   * Size of the Image Width Defaults to 158px.\n   */\n  @Input() imageWidth: string = '158px';\n  @Input() seriesLink: string = '';\n\n  @Input() pagesRead: number = 0;\n  @Input() totalPages: number = 0;\n\n  @Input() relation: RelationKind | undefined = undefined;\n\n  /**\n  * When generating the title, should this prepend 'Volume number' before the Chapter wording\n  */\n  @Input() includeVolume: boolean = false;\n  /**\n   * Show's the title if available on entity\n   */\n  @Input() showTitle: boolean = true;\n  /**\n   * Blur the summary for the list item\n   */\n  @Input() blur: boolean = false;\n\n  @Output() read: EventEmitter<void> = new EventEmitter<void>();\n  private readonly destroyRef = inject(DestroyRef);\n\n  actionInProgress: boolean = false;\n  summary: string = '';\n  isChapter: boolean = false;\n\n\n  download$: Observable<DownloadEvent | null> | null = null;\n  downloadInProgress: boolean = false;\n\n  get Title() {\n    if (this.isChapter) return (this.entity as Chapter).titleName;\n    return '';\n  }\n\n  get ShowExtended() {\n    return this.utilityService.getActiveBreakpoint() === Breakpoint.Desktop;\n  }\n\n  protected readonly Breakpoint = Breakpoint;\n\n\n  constructor(public utilityService: UtilityService, private downloadService: DownloadService,\n    private toastr: ToastrService, private readonly cdRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.isChapter = this.utilityService.isChapter(this.entity);\n    if (this.isChapter) {\n      this.summary = this.utilityService.asChapter(this.entity).summary || '';\n    } else {\n      this.summary = this.utilityService.asVolume(this.entity).chapters[0].summary || '';\n    }\n\n    this.cdRef.markForCheck();\n\n\n    this.download$ = this.downloadService.activeDownloads$.pipe(takeUntilDestroyed(this.destroyRef), map((events) => {\n      if(this.utilityService.isVolume(this.entity)) return events.find(e => e.entityType === 'volume' && e.subTitle === this.downloadService.downloadSubtitle('volume', (this.entity as Volume))) || null;\n      if(this.utilityService.isChapter(this.entity)) return events.find(e => e.entityType === 'chapter' && e.subTitle === this.downloadService.downloadSubtitle('chapter', (this.entity as Chapter))) || null;\n      return null;\n    }));\n  }\n\n  performAction(action: ActionItem<any>) {\n    if (action.action == Action.Download) {\n      if (this.downloadInProgress) {\n        this.toastr.info(translate('toasts.download-in-progress'));\n        return;\n      }\n\n      const statusUpdate = (d: Download | undefined) => {\n        if (d) return;\n        this.downloadInProgress = false;\n      };\n\n      if (this.utilityService.isVolume(this.entity)) {\n        const volume = this.utilityService.asVolume(this.entity);\n        this.downloadService.download('volume', volume, statusUpdate);\n      } else if (this.utilityService.isChapter(this.entity)) {\n        const chapter = this.utilityService.asChapter(this.entity);\n        this.downloadService.download('chapter', chapter, statusUpdate);\n      }\n      return; // Don't propagate the download from a card\n    }\n\n    if (typeof action.callback === 'function') {\n      action.callback(action, this.entity);\n    }\n  }\n}\n","<ng-container *transloco=\"let t; read: 'list-item'\">\n  <div class=\"list-item-container d-flex flex-row g-0 mb-2 p-2\">\n    <div class=\"pe-2\">\n      <app-image [imageUrl]=\"imageUrl\" [height]=\"imageHeight\" maxHeight=\"200px\" [width]=\"imageWidth\"></app-image>\n      <div class=\"not-read-badge\" *ngIf=\"pagesRead === 0 && totalPages > 0\"></div>\n      <span class=\"download\">\n            <app-download-indicator [download$]=\"download$\"></app-download-indicator>\n        </span>\n      <div class=\"progress-banner\" *ngIf=\"pagesRead < totalPages && totalPages > 0 && pagesRead !== totalPages\"\n           ngbTooltip=\"{{(pagesRead / totalPages) | number:'1.0-1'}}% Read\">\n        <p><ngb-progressbar type=\"primary\" height=\"5px\" [value]=\"pagesRead\" [max]=\"totalPages\"></ngb-progressbar></p>\n      </div>\n    </div>\n    <div class=\"flex-grow-1\">\n      <div class=\"g-0\">\n        <h5 class=\"mb-0\">\n          <app-card-actionables [disabled]=\"actionInProgress\" (actionHandler)=\"performAction($event)\" [actions]=\"actions\" [labelBy]=\"seriesName\" iconClass=\"fa-ellipsis-v\"></app-card-actionables>\n          <ng-content select=\"[title]\"></ng-content>\n          <button class=\"btn btn-primary float-end\" (click)=\"read.emit()\">\n                    <span>\n                        <i class=\"fa fa-book me-1\" aria-hidden=\"true\"></i>\n                    </span>\n            <span class=\"d-none d-sm-inline-block\">{{t('read')}}</span>\n          </button>\n        </h5>\n\n        <h6 class=\"text-muted\" [ngClass]=\"{'subtitle-with-actionables' : actions.length > 0}\" *ngIf=\"Title !== '' && showTitle\">{{Title}}</h6>\n        <ng-container *ngIf=\"summary.length > 0\">\n          <div class=\"mt-2 ps-2\">\n            <app-read-more [text]=\"summary\" [blur]=\"pagesRead === 0 && blur\" [maxLength]=\"250\"></app-read-more>\n          </div>\n        </ng-container>\n        <div class=\"ps-2 d-none d-md-inline-block\" style=\"width: 100%\">\n          <app-entity-info-cards [entity]=\"entity\" [libraryId]=\"libraryId\" [includeMetadata]=\"ShowExtended\" [showExtendedProperties]=\"ShowExtended\"></app-entity-info-cards>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  inject,\n  Input,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SafeHtmlPipe} from \"../../_pipes/safe-html.pipe\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\n\n@Component({\n  selector: 'app-spoiler',\n  standalone: true,\n    imports: [CommonModule, SafeHtmlPipe, TranslocoDirective],\n  templateUrl: './spoiler.component.html',\n  styleUrls: ['./spoiler.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SpoilerComponent implements OnInit{\n\n  @Input({required: true}) html!: string;\n  isCollapsed: boolean = true;\n  public readonly cdRef = inject(ChangeDetectorRef);\n\n  constructor() {\n    this.isCollapsed = true;\n    this.cdRef.markForCheck();\n  }\n\n  ngOnInit() {\n    this.isCollapsed = true;\n    this.cdRef.markForCheck();\n  }\n\n\n  toggle() {\n    this.isCollapsed = !this.isCollapsed;\n    this.cdRef.markForCheck();\n  }\n}\n","<ng-container *transloco=\"let t; read:'spoiler'\">\n  <div (click)=\"toggle()\" [attr.aria-expanded]=\"!isCollapsed\" class=\"btn spoiler\" tabindex=\"0\">\n    <span *ngIf=\"isCollapsed; else show\">{{t('click-to-show')}}</span>\n    <ng-template #show>\n      <div [innerHTML]=\"html | safeHtml\"></div>\n    </ng-template>\n  </div>\n</ng-container>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component, inject,\n  Inject,\n  Input, ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {CommonModule, DOCUMENT, NgOptimizedImage} from '@angular/common';\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {UserReview} from \"../review-card/user-review\";\nimport {SpoilerComponent} from \"../spoiler/spoiler.component\";\nimport {SafeHtmlPipe} from \"../../_pipes/safe-html.pipe\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {DefaultValuePipe} from \"../../_pipes/default-value.pipe\";\nimport {ProviderImagePipe} from \"../../_pipes/provider-image.pipe\";\n\n@Component({\n  selector: 'app-review-card-modal',\n  standalone: true,\n    imports: [CommonModule, ReactiveFormsModule, SpoilerComponent, SafeHtmlPipe, TranslocoDirective, DefaultValuePipe, NgOptimizedImage, ProviderImagePipe],\n  templateUrl: './review-card-modal.component.html',\n  styleUrls: ['./review-card-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ReviewCardModalComponent implements AfterViewInit {\n\n  private modal = inject(NgbActiveModal);\n\n  @Input({required: true}) review!: UserReview;\n  @ViewChild('container', { read: ViewContainerRef }) container!: ViewContainerRef;\n\n\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  close() {\n    this.modal.close();\n  }\n\n  ngAfterViewInit() {\n    const spoilers = this.document.querySelectorAll('span.spoiler');\n\n    for (let i = 0; i < spoilers.length; i++) {\n      const spoiler = spoilers[i];\n      const componentRef = this.container.createComponent<SpoilerComponent>(SpoilerComponent);\n      componentRef.instance.html = spoiler.innerHTML;\n      if (spoiler.parentNode != null) {\n        spoiler.parentNode.replaceChild(componentRef.location.nativeElement, spoiler);\n      }\n      componentRef.instance.cdRef.markForCheck();\n    }\n  }\n\n\n}\n","<ng-container *transloco=\"let t; read:'review-card-modal'\">\n  <div>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        {{t('user-review', {username: review.username})}}\n        @if(review.isExternal) {\n          <img class=\"me-1\" [ngSrc]=\"review.provider | providerImage\" width=\"20\" height=\"20\" alt=\"\">\n        }\n      </h4>\n      <button type=\"button\" class=\"btn-close\" [attr.aria-label]=\"t('close')\" (click)=\"close()\"></button>\n    </div>\n    <div class=\"modal-body scrollable-modal\">\n      @if (review.tagline) {\n        <p [innerHTML]=\"review.tagline | safeHtml\"></p>\n      }\n      <p #container class=\"img-max-width\" [innerHTML]=\"review.body | safeHtml\"></p>\n    </div>\n    <div class=\"modal-footer\">\n      @if (review.siteUrl) {\n        <a class=\"btn btn-icon\" [href]=\"review.siteUrl | safeHtml\" target=\"_blank\" rel=\"noopener noreferrer\" [title]=\"review.siteUrl\">\n          {{t('go-to-review')}}\n        </a>\n      }\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"close()\">{{t('close')}}</button>\n    </div>\n  </div>\n</ng-container>\n\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {CommonModule, NgOptimizedImage} from '@angular/common';\nimport {UserReview} from \"./user-review\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ReviewCardModalComponent} from \"../review-card-modal/review-card-modal.component\";\nimport {AccountService} from \"../../_services/account.service\";\nimport {\n  ReviewSeriesModalCloseAction,\n  ReviewSeriesModalCloseEvent,\n  ReviewSeriesModalComponent\n} from \"../review-series-modal/review-series-modal.component\";\nimport {ReadMoreComponent} from \"../../shared/read-more/read-more.component\";\nimport {DefaultValuePipe} from \"../../_pipes/default-value.pipe\";\nimport {ImageComponent} from \"../../shared/image/image.component\";\nimport {ProviderImagePipe} from \"../../_pipes/provider-image.pipe\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {ScrobbleProvider} from \"../../_services/scrobbling.service\";\n\n@Component({\n  selector: 'app-review-card',\n  standalone: true,\n  imports: [ReadMoreComponent, DefaultValuePipe, ImageComponent, NgOptimizedImage, ProviderImagePipe, TranslocoDirective],\n  templateUrl: './review-card.component.html',\n  styleUrls: ['./review-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewCardComponent implements OnInit {\n  private readonly accountService = inject(AccountService);\n  protected readonly ScrobbleProvider = ScrobbleProvider;\n\n  @Input({required: true}) review!: UserReview;\n  @Output() refresh = new EventEmitter<ReviewSeriesModalCloseEvent>();\n\n  isMyReview: boolean = false;\n\n  constructor(private readonly modalService: NgbModal, private readonly cdRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.accountService.currentUser$.subscribe(u => {\n      if (u) {\n        this.isMyReview = this.review.username === u.username;\n        this.cdRef.markForCheck();\n      }\n    });\n  }\n\n  showModal() {\n    let component;\n    if (this.isMyReview) {\n      component = ReviewSeriesModalComponent;\n    } else {\n      component = ReviewCardModalComponent;\n    }\n    const ref = this.modalService.open(component, {size: 'lg', fullscreen: 'md'});\n    ref.componentInstance.review = this.review;\n    ref.closed.subscribe((res: ReviewSeriesModalCloseEvent | undefined) => {\n      if (res) {\n        this.refresh.emit(res);\n      }\n    })\n  }\n}\n","<ng-container *transloco=\"let t; read:'review-card'\">\n  <div class=\"card clickable mb-3\" style=\"max-width: 320px; max-height: 160px; height: 160px\" (click)=\"showModal()\">\n    <div class=\"row g-0\">\n      <div class=\"col-md-2 d-none d-md-block\">\n        <i class=\"img-fluid rounded-start fa-solid fa-circle-user profile-image\" aria-hidden=\"true\"></i>\n        @if (isMyReview) {\n          <div class=\"my-review\">\n            <i class=\"fa-solid fa-star\" aria-hidden=\"true\" [title]=\"t('your-review')\"></i>\n            <span class=\"visually-hidden\">{{t('your-review')}}</span>\n          </div>\n        }\n      </div>\n      <div class=\"col-md-10\">\n        <div class=\"card-body\">\n          <h6 class=\"card-title\">\n            {{review.isExternal ? t('external-review') : t('local-review')}}\n          </h6>\n          <p class=\"card-text no-images\">\n            <app-read-more [text]=\"(review.isExternal ? review.bodyJustText : review.body) || ''\" [maxLength]=\"100\" [showToggle]=\"false\"></app-read-more>\n          </p>\n        </div>\n      </div>\n\n      <div class=\"card-footer bg-transparent text-muted\">\n        <div>\n          @if (isMyReview) {\n            <i class=\"d-md-none fa-solid fa-star me-1\" aria-hidden=\"true\" [title]=\"t('your-review')\"></i>\n            <img class=\"me-1\" [ngSrc]=\"ScrobbleProvider.Kavita | providerImage\" width=\"20\" height=\"20\" alt=\"\">\n            {{review.username}}\n          } @else {\n            <img class=\"me-1\" [ngSrc]=\"review.provider | providerImage\" width=\"20\" height=\"20\" alt=\"\">\n          }\n\n          {{(isMyReview ? '' : review.username | defaultValue:'')}}\n        </div>\n        @if (review.isExternal){\n          <span class=\"review-score\">{{t('rating-percentage', {r: review.score})}}</span>\n        }\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction NgxStarsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function NgxStarsComponent_div_2_Template_div_click_0_listener($event) {\n      const star_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.readonly ? ctx_r2.noop() : ctx_r2.onStarClick($event, star_r2));\n    })(\"mousemove\", function NgxStarsComponent_div_2_Template_div_mousemove_0_listener($event) {\n      const star_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.readonly ? ctx_r2.noop() : ctx_r2.onStarHover($event, star_r2));\n    });\n    i0.ɵɵelement(1, \"span\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const star_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.starPadding());\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"star-rtl\", ctx_r2.rtl);\n    i0.ɵɵproperty(\"ngClass\", star_r2.classname)(\"ngStyle\", ctx_r2.starColorAndSize());\n  }\n}\nlet NgxStarsComponent = /*#__PURE__*/(() => {\n  class NgxStarsComponent {\n    constructor() {\n      this.maxStars = 5;\n      this.initialStars = 0;\n      this.animationSpeed = 100;\n      this.wholeStars = false;\n      this.rtl = false;\n      this.ratingOutput = new EventEmitter();\n      this.customClassIdentifier = Math.random().toString(36).substring(2);\n      this.safeSize = () => Number.isInteger(this.size) && this.size > 0 && this.size < 6 ? this.size : 1;\n    }\n    ngOnInit() {\n      this.setupStarImages();\n      this.editableStars = Array.from(new Array(this.maxStars)).map((elem, index) => new EditableStar(index));\n      if (this.rtl) {\n        this.editableStars = this.editableStars.reverse();\n      }\n      this.setRating(this.initialStars);\n      if (this.animation) {\n        this.animationInterval = setInterval(this.starAnimation.bind(this), this.animationSpeed);\n      }\n    }\n    ngOnDestroy() {\n      // remove the three custom classes we created if custom image urls were provided\n      if (this.customCssClasses) {\n        this.customCssClasses.forEach(style => {\n          if (style && style.parentNode) {\n            style.parentNode.removeChild(style);\n          }\n        });\n      }\n    }\n    setupStarImages() {\n      if (this.customStarIcons) {\n        this.customCssClasses = [];\n        Object.keys(this.customStarIcons).map(key => key).forEach(starType => {\n          const classname = this.getStarClass(starType);\n          this.createCssClass(classname, starType);\n        });\n      }\n    }\n    createCssClass(classname, starType) {\n      const clazz = document.createElement('style');\n      clazz.type = 'text/css';\n      clazz.innerHTML = `.${classname} {\n      -webkit-mask-image: url(${this.customStarIcons[starType]});\n      mask-image: url(${this.customStarIcons[starType]});\n    }`;\n      document.getElementsByTagName('head')[0].appendChild(clazz);\n      this.customCssClasses.push(clazz);\n    }\n    starPadding() {\n      return {\n        'margin-right': this.customPadding || `calc(${this.starSize().width} / 10)`\n      };\n    }\n    starColorAndSize() {\n      return Object.assign({}, this.starColor(), this.starSize());\n    }\n    starColor() {\n      return {\n        'background-color': this.color || 'crimson'\n      };\n    }\n    starSize() {\n      return {\n        height: this.customSize || `${15 * this.safeSize()}px`,\n        width: this.customSize || `${16 * this.safeSize()}px`\n      };\n    }\n    zeroStarLeft() {\n      if (this.rtl) {\n        const width = this.starSize()['width'];\n        return `calc(${width} * ${this.maxStars})`;\n      }\n      return '-16px';\n    }\n    starAnimation() {\n      this.animationRunning = true;\n      if (this.rating < this.maxStars) {\n        this.setRating(this.rating += 0.5);\n      } else {\n        this.setRating(0);\n      }\n    }\n    cancelStarAnimation() {\n      if (this.animationRunning) {\n        clearInterval(this.animationInterval);\n        this.rating = 0;\n        this.animationRunning = false;\n      }\n    }\n    setRating(rating) {\n      this.rating = Math.round(rating * 2) / 2;\n      this.onStarsUnhover();\n    }\n    onStarHover(event, clickedStar) {\n      this.cancelStarAnimation();\n      const clickedInFirstHalf = this.clickedInFirstHalf(event);\n      // fill in either a half or whole star depending on where user clicked\n      clickedStar.classname = !this.wholeStars && clickedInFirstHalf ? this.getStarClass('half') : this.getStarClass('full');\n      // fill in all stars in previous positions and clear all in later ones\n      this.editableStars.forEach(star => {\n        if (star.position > clickedStar.position) {\n          star.classname = this.getStarClass('empty');\n        } else if (star.position < clickedStar.position) {\n          star.classname = this.getStarClass('full');\n        }\n      });\n    }\n    onStarClick(event, clickedStar) {\n      this.cancelStarAnimation();\n      // lock in current rating\n      const clickedInFirstHalf = this.clickedInFirstHalf(event);\n      this.rating = clickedStar.position + (!this.wholeStars && clickedInFirstHalf ? 0.5 : 1);\n      this.ratingOutput.emit(this.rating);\n    }\n    // hidden star to left of first star lets user click there to set to 0\n    onZeroStarClick() {\n      this.setRating(0);\n      this.ratingOutput.emit(this.rating);\n    }\n    onZeroStarHover() {\n      // clear all stars\n      this.editableStars.forEach(star => star.classname = this.getStarClass('empty'));\n    }\n    onStarsUnhover() {\n      // when user stops hovering we want to make stars reflect the last rating applied by clicking\n      this.editableStars.forEach(star => {\n        const starNumber = star.position + 1;\n        if (this.rating >= starNumber) {\n          star.classname = this.getStarClass('full');\n        } else if (this.rating > starNumber - 1 && this.rating < starNumber) {\n          star.classname = this.getStarClass('half');\n        } else {\n          star.classname = this.getStarClass('empty');\n        }\n      });\n    }\n    clickedInFirstHalf(event) {\n      const starIcon = event.target;\n      if (this.rtl) {\n        return event.pageX > starIcon.getBoundingClientRect().right - starIcon.offsetWidth / 2;\n      } else {\n        return event.pageX < starIcon.getBoundingClientRect().left + starIcon.offsetWidth / 2;\n      }\n    }\n    noop() {}\n    getStarClass(starType) {\n      if (this.customCssClasses) {\n        return `ngx-stars-star-${starType}-${this.customClassIdentifier}`;\n      }\n      return `star-${starType}`;\n    }\n    // this and the aria-labels and role in the html inspired by https://stackoverflow.com/q/55966205\n    getAriaLabel() {\n      return `Rating: ${this.rating} out of ${this.maxStars} stars ${this.readonly ? '' : '. Can be edited.'}`;\n    }\n  }\n  NgxStarsComponent.ɵfac = function NgxStarsComponent_Factory(t) {\n    return new (t || NgxStarsComponent)();\n  };\n  NgxStarsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxStarsComponent,\n    selectors: [[\"ngx-stars\"]],\n    inputs: {\n      maxStars: \"maxStars\",\n      initialStars: \"initialStars\",\n      readonly: \"readonly\",\n      size: \"size\",\n      customSize: \"customSize\",\n      color: \"color\",\n      animation: \"animation\",\n      animationSpeed: \"animationSpeed\",\n      customPadding: \"customPadding\",\n      wholeStars: \"wholeStars\",\n      customStarIcons: \"customStarIcons\",\n      rtl: \"rtl\"\n    },\n    outputs: {\n      ratingOutput: \"ratingOutput\"\n    },\n    decls: 3,\n    vars: 5,\n    consts: [[\"role\", \"img\", 1, \"stars-line\", 3, \"mouseleave\"], [\"aria-hidden\", \"true\", 1, \"star\", \"zero-star\", 3, \"click\", \"mousemove\", \"ngStyle\"], [\"aria-hidden\", \"true\", 3, \"ngStyle\", \"click\", \"mousemove\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 3, \"click\", \"mousemove\", \"ngStyle\"], [\"aria-hidden\", \"true\", 1, \"star\", 3, \"ngClass\", \"ngStyle\"]],\n    template: function NgxStarsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mouseleave\", function NgxStarsComponent_Template_div_mouseleave_0_listener() {\n          return ctx.readonly ? ctx.noop() : ctx.onStarsUnhover();\n        });\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵlistener(\"click\", function NgxStarsComponent_Template_span_click_1_listener() {\n          return ctx.readonly ? ctx.noop() : ctx.onZeroStarClick();\n        })(\"mousemove\", function NgxStarsComponent_Template_span_mousemove_1_listener() {\n          return ctx.readonly ? ctx.noop() : ctx.onZeroStarHover();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, NgxStarsComponent_div_2_Template, 2, 5, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", ctx.getAriaLabel());\n        i0.ɵɵadvance();\n        i0.ɵɵstyleProp(\"left\", ctx.zeroStarLeft());\n        i0.ɵɵproperty(\"ngStyle\", ctx.starSize());\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngForOf\", ctx.editableStars);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgStyle],\n    styles: [\".stars-line[_ngcontent-%COMP%]{display:flex;align-items:center;position:relative}.stars-line[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{z-index:999}.zero-star[_ngcontent-%COMP%]{color:transparent;position:absolute}.star[_ngcontent-%COMP%]{display:inline-block;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat}.star-rtl[_ngcontent-%COMP%]{transform:scaleX(-1)}.star-empty[_ngcontent-%COMP%]{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg aria-hidden='true' focusable='false' data-prefix='far' data-icon='star' class='svg-inline--fa fa-star fa-w-18' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 576 512'%3E%3Cpath fill='currentColor' d='M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z'%3E%3C/path%3E%3C/svg%3E%0A\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg aria-hidden='true' focusable='false' data-prefix='far' data-icon='star' class='svg-inline--fa fa-star fa-w-18' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 576 512'%3E%3Cpath fill='currentColor' d='M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z'%3E%3C/path%3E%3C/svg%3E%0A\\\")}.star-half[_ngcontent-%COMP%]{-webkit-mask-image:url(\\\"data:image/svg+xml,%3C!-- had to hack this one's viewbox otherwise it didn't line up with the other two --%3E%3C!-- changed viewbox from '0 0 536 512' to '-20 0 576 512' --%3E%3Csvg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='star-half-alt' class='svg-inline--fa fa-star-half-alt fa-w-17' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='-20 0 576 512'%3E%3Cpath fill='currentColor' d='M508.55 171.51L362.18 150.2 296.77 17.81C290.89 5.98 279.42 0 267.95 0c-11.4 0-22.79 5.9-28.69 17.81l-65.43 132.38-146.38 21.29c-26.25 3.8-36.77 36.09-17.74 54.59l105.89 103-25.06 145.48C86.98 495.33 103.57 512 122.15 512c4.93 0 10-1.17 14.87-3.75l130.95-68.68 130.94 68.7c4.86 2.55 9.92 3.71 14.83 3.71 18.6 0 35.22-16.61 31.66-37.4l-25.03-145.49 105.91-102.98c19.04-18.5 8.52-50.8-17.73-54.6zm-121.74 123.2l-18.12 17.62 4.28 24.88 19.52 113.45-102.13-53.59-22.38-11.74.03-317.19 51.03 103.29 11.18 22.63 25.01 3.64 114.23 16.63-82.65 80.38z'%3E%3C/path%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3C!-- had to hack this one's viewbox otherwise it didn't line up with the other two --%3E%3C!-- changed viewbox from '0 0 536 512' to '-20 0 576 512' --%3E%3Csvg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='star-half-alt' class='svg-inline--fa fa-star-half-alt fa-w-17' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='-20 0 576 512'%3E%3Cpath fill='currentColor' d='M508.55 171.51L362.18 150.2 296.77 17.81C290.89 5.98 279.42 0 267.95 0c-11.4 0-22.79 5.9-28.69 17.81l-65.43 132.38-146.38 21.29c-26.25 3.8-36.77 36.09-17.74 54.59l105.89 103-25.06 145.48C86.98 495.33 103.57 512 122.15 512c4.93 0 10-1.17 14.87-3.75l130.95-68.68 130.94 68.7c4.86 2.55 9.92 3.71 14.83 3.71 18.6 0 35.22-16.61 31.66-37.4l-25.03-145.49 105.91-102.98c19.04-18.5 8.52-50.8-17.73-54.6zm-121.74 123.2l-18.12 17.62 4.28 24.88 19.52 113.45-102.13-53.59-22.38-11.74.03-317.19 51.03 103.29 11.18 22.63 25.01 3.64 114.23 16.63-82.65 80.38z'%3E%3C/path%3E%3C/svg%3E\\\")}.star-full[_ngcontent-%COMP%]{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='star' class='svg-inline--fa fa-star fa-w-18' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 576 512'%3E%3Cpath fill='currentColor' d='M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z'%3E%3C/path%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='star' class='svg-inline--fa fa-star fa-w-18' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 576 512'%3E%3Cpath fill='currentColor' d='M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z'%3E%3C/path%3E%3C/svg%3E\\\")}\"]\n  });\n  return NgxStarsComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass EditableStar {\n  constructor(position) {\n    this.position = position;\n  }\n}\nlet NgxStarsModule = /*#__PURE__*/(() => {\n  class NgxStarsModule {}\n  NgxStarsModule.ɵfac = function NgxStarsModule_Factory(t) {\n    return new (t || NgxStarsModule)();\n  };\n  NgxStarsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxStarsModule\n  });\n  NgxStarsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return NgxStarsModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of ngx-stars\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EditableStar, NgxStarsComponent, NgxStarsModule };\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {CommonModule, NgOptimizedImage} from '@angular/common';\nimport {SeriesService} from \"../../../_services/series.service\";\nimport {Rating} from \"../../../_models/rating\";\nimport {ProviderImagePipe} from \"../../../_pipes/provider-image.pipe\";\nimport {NgbPopover, NgbRating} from \"@ng-bootstrap/ng-bootstrap\";\nimport {LoadingComponent} from \"../../../shared/loading/loading.component\";\nimport {LibraryType} from \"../../../_models/library/library\";\nimport {ProviderNamePipe} from \"../../../_pipes/provider-name.pipe\";\nimport {NgxStarsModule} from \"ngx-stars\";\nimport {ThemeService} from \"../../../_services/theme.service\";\nimport {Breakpoint, UtilityService} from \"../../../shared/_services/utility.service\";\nimport {ImageComponent} from \"../../../shared/image/image.component\";\n\n@Component({\n  selector: 'app-external-rating',\n  standalone: true,\n  imports: [CommonModule, ProviderImagePipe, NgOptimizedImage, NgbRating, NgbPopover, LoadingComponent, ProviderNamePipe, NgxStarsModule, ImageComponent],\n  templateUrl: './external-rating.component.html',\n  styleUrls: ['./external-rating.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ExternalRatingComponent implements OnInit {\n\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly seriesService = inject(SeriesService);\n  private readonly themeService = inject(ThemeService);\n  public readonly utilityService = inject(UtilityService);\n  public readonly destroyRef = inject(DestroyRef);\n  protected readonly Breakpoint = Breakpoint;\n\n  @Input({required: true}) seriesId!: number;\n  @Input({required: true}) userRating!: number;\n  @Input({required: true}) hasUserRated!: boolean;\n  @Input({required: true}) libraryType!: LibraryType;\n  @Input({required: true}) ratings: Array<Rating> = [];\n\n  isLoading: boolean = false;\n  overallRating: number = -1;\n  starColor = this.themeService.getCssVariable('--rating-star-color');\n\n  ngOnInit() {\n    this.seriesService.getOverallRating(this.seriesId).subscribe(r => this.overallRating = r.averageScore);\n  }\n\n  updateRating(rating: number) {\n    this.seriesService.updateRating(this.seriesId, rating).subscribe(() => {\n      this.userRating = rating;\n      this.hasUserRated = true;\n      this.cdRef.markForCheck();\n    });\n  }\n}\n","<div class=\"row g-0\">\n  <div class=\"col-auto custom-col clickable\" [ngbPopover]=\"popContent\"\n       popoverTitle=\"Your Rating + Overall\" [popoverClass]=\"utilityService.getActiveBreakpoint() > Breakpoint.Mobile ? 'md-popover' : 'lg-popover'\">\n    <span class=\"badge rounded-pill ps-0 me-1\">\n<!--      <img class=\"me-1\" ngSrc=\"assets/images/logo-32.png\" width=\"24\" height=\"24\" alt=\"\">-->\n      <app-image classes=\"me-1\" imageUrl=\"assets/images/logo-32.png\" width=\"24px\" height=\"24px\" />\n      <ng-container *ngIf=\"hasUserRated; else notYetRated\">{{userRating * 20}}</ng-container>\n      <ng-template #notYetRated>N/A</ng-template>\n      <ng-container *ngIf=\"overallRating > 0\"> + {{overallRating}}</ng-container>\n      <ng-container *ngIf=\"hasUserRated || overallRating > 0\">%</ng-container>\n    </span>\n  </div>\n\n  <div class=\"col-auto custom-col clickable\" *ngFor=\"let rating of ratings\" [ngbPopover]=\"externalPopContent\" [popoverContext]=\"{rating: rating}\"\n       [popoverTitle]=\"rating.provider | providerName\" popoverClass=\"sm-popover\">\n    <span class=\"badge rounded-pill me-1\">\n      <img class=\"me-1\" [ngSrc]=\"rating.provider | providerImage\" width=\"24\" height=\"24\" alt=\"\" aria-hidden=\"true\">\n      {{rating.averageScore}}%\n    </span>\n  </div>\n  <div class=\"col-auto\" style=\"padding-top: 8px\">\n    <app-loading [loading]=\"isLoading\" size=\"spinner-border-sm\"></app-loading>\n  </div>\n</div>\n\n<ng-template #popContent>\n  <ngx-stars [initialStars]=\"userRating\" (ratingOutput)=\"updateRating($event)\" [size]=\"utilityService.getActiveBreakpoint() > Breakpoint.Mobile ? 1 : 2\"\n             [maxStars]=\"5\" [color]=\"starColor\"></ngx-stars>\n  {{userRating * 20}}%\n</ng-template>\n\n<ng-template #externalPopContent let-rating=\"rating\">\n  <div><i class=\"fa-solid fa-heart\" aria-hidden=\"true\"></i> {{rating.favoriteCount}}</div>\n  <a *ngIf=\"rating.providerUrl\" [href]=\"rating.providerUrl\" target=\"_blank\" rel=\"noreferrer nofollow\">Entry</a>\n</ng-template>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { MetadataService } from '../_services/metadata.service';\nimport {shareReplay} from \"rxjs/operators\";\n\n@Pipe({\n  name: 'languageName',\n  standalone: true\n})\nexport class LanguageNamePipe implements PipeTransform {\n\n  constructor(private metadataService: MetadataService) {\n  }\n\n  transform(isoCode: string): Observable<string> {\n    // TODO: See if we can speed this up. It rarely changes and is quite heavy to download on each page\n    return this.metadataService.getAllValidLanguages().pipe(map(lang => {\n      const l = lang.filter(l => l.isoCode === isoCode);\n      if (l.length > 0) return l[0].title;\n      return '';\n    }), shareReplay());\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  EventEmitter,\n  inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {debounceTime, filter, map} from 'rxjs';\nimport {UtilityService} from 'src/app/shared/_services/utility.service';\nimport {UserProgressUpdateEvent} from 'src/app/_models/events/user-progress-update-event';\nimport {HourEstimateRange} from 'src/app/_models/series-detail/hour-estimate-range';\nimport {MangaFormat} from 'src/app/_models/manga-format';\nimport {Series} from 'src/app/_models/series';\nimport {SeriesMetadata} from 'src/app/_models/metadata/series-metadata';\nimport {AccountService} from 'src/app/_services/account.service';\nimport {EVENTS, MessageHubService} from 'src/app/_services/message-hub.service';\nimport {ReaderService} from 'src/app/_services/reader.service';\nimport {FilterField} from \"../../_models/metadata/v2/filter-field\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {ScrobblingService} from \"../../_services/scrobbling.service\";\nimport {CommonModule} from \"@angular/common\";\nimport {IconAndTitleComponent} from \"../../shared/icon-and-title/icon-and-title.component\";\nimport {AgeRatingPipe} from \"../../_pipes/age-rating.pipe\";\nimport {DefaultValuePipe} from \"../../_pipes/default-value.pipe\";\nimport {LanguageNamePipe} from \"../../_pipes/language-name.pipe\";\nimport {PublicationStatusPipe} from \"../../_pipes/publication-status.pipe\";\nimport {MangaFormatPipe} from \"../../_pipes/manga-format.pipe\";\nimport {TimeAgoPipe} from \"../../_pipes/time-ago.pipe\";\nimport {CompactNumberPipe} from \"../../_pipes/compact-number.pipe\";\nimport {MangaFormatIconPipe} from \"../../_pipes/manga-format-icon.pipe\";\nimport {NgbTooltip} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\n\n@Component({\n  selector: 'app-series-info-cards',\n  standalone: true,\n  imports: [CommonModule, IconAndTitleComponent, AgeRatingPipe, DefaultValuePipe, LanguageNamePipe, PublicationStatusPipe, MangaFormatPipe, TimeAgoPipe, CompactNumberPipe, MangaFormatIconPipe, NgbTooltip, TranslocoDirective],\n  templateUrl: './series-info-cards.component.html',\n  styleUrls: ['./series-info-cards.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SeriesInfoCardsComponent implements OnInit, OnChanges {\n\n  private readonly destroyRef = inject(DestroyRef);\n  public readonly utilityService = inject(UtilityService);\n  private readonly readerService = inject(ReaderService);\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly messageHub = inject(MessageHubService);\n  public readonly accountService = inject(AccountService);\n  private readonly scrobbleService = inject(ScrobblingService);\n\n  @Input({required: true}) series!: Series;\n  @Input({required: true}) seriesMetadata!: SeriesMetadata;\n  @Input() hasReadingProgress: boolean = false;\n  @Input() readingTimeLeft: HourEstimateRange | undefined;\n  /**\n   * If this should make an API call to request readingTimeLeft\n   */\n  @Input() showReadingTimeLeft: boolean = true;\n  @Output() goTo: EventEmitter<{queryParamName: FilterField, filter: any}> = new EventEmitter();\n\n  readingTime: HourEstimateRange = {avgHours: 0, maxHours: 0, minHours: 0};\n  isScrobbling: boolean = true;\n  libraryAllowsScrobbling: boolean = true;\n\n\n  protected readonly MangaFormat = MangaFormat;\n  protected readonly FilterField = FilterField;\n\n\n  constructor() {\n      // Listen for progress events and re-calculate getTimeLeft\n      this.messageHub.messages$.pipe(filter(event => event.event === EVENTS.UserProgressUpdate),\n                                    map(evt => evt.payload as UserProgressUpdateEvent),\n                                    debounceTime(500),\n                                    takeUntilDestroyed(this.destroyRef))\n        .subscribe(updateEvent => {\n          this.accountService.currentUser$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(user => {\n            if (user === undefined || user.username !== updateEvent.username) return;\n            if (updateEvent.seriesId !== this.series.id) return;\n            this.getReadingTimeLeft();\n          });\n        });\n  }\n\n  ngOnInit(): void {\n    if (this.series !== null) {\n      this.getReadingTimeLeft();\n      this.readingTime.minHours = this.series.minHoursToRead;\n      this.readingTime.maxHours = this.series.maxHoursToRead;\n      this.readingTime.avgHours = this.series.avgHoursToRead;\n      this.scrobbleService.hasHold(this.series.id).subscribe(res => {\n        this.isScrobbling = !res;\n        this.cdRef.markForCheck();\n      });\n\n      this.scrobbleService.libraryAllowsScrobbling(this.series.id).subscribe(res => {\n        this.libraryAllowsScrobbling = res;\n        this.cdRef.markForCheck();\n      });\n\n      this.cdRef.markForCheck();\n    }\n  }\n\n  ngOnChanges() {\n    this.cdRef.markForCheck();\n  }\n\n\n  handleGoTo(queryParamName: FilterField, filter: any) {\n    // Ignore the default case added as this query combo would never be valid\n    if (filter + '' === '' && queryParamName === FilterField.SeriesName) return;\n    this.goTo.emit({queryParamName, filter});\n  }\n\n  private getReadingTimeLeft() {\n    if (this.showReadingTimeLeft) this.readerService.getTimeLeft(this.series.id).subscribe((timeLeft) => {\n      this.readingTimeLeft = timeLeft;\n      this.cdRef.markForCheck();\n    });\n  }\n\n  toggleScrobbling(evt: any) {\n    evt.stopPropagation();\n    if (this.isScrobbling) {\n      this.scrobbleService.addHold(this.series.id).subscribe(() => {\n        this.isScrobbling = !this.isScrobbling;\n        this.cdRef.markForCheck();\n      });\n    } else {\n      this.scrobbleService.removeHold(this.series.id).subscribe(() => {\n        this.isScrobbling = !this.isScrobbling;\n        this.cdRef.markForCheck();\n      });\n    }\n  }\n}\n","<ng-container *transloco=\"let t; read: 'series-info-cards'\">\n  <div class=\"row g-0 mt-3\">\n    <ng-container *ngIf=\"seriesMetadata.releaseYear > 0\">\n      <div class=\"col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n        <app-icon-and-title [label]=\"t('release-date-title')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-calendar\" [title]=\"t('release-year-tooltip')\">\n          {{seriesMetadata.releaseYear}}\n        </app-icon-and-title>\n      </div>\n      <div class=\"vr d-none d-lg-block m-2\"></div>\n    </ng-container>\n\n    <ng-container *ngIf=\"seriesMetadata\">\n      <ng-container *ngIf=\"seriesMetadata.ageRating\">\n        <div class=\"col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n          <app-icon-and-title [label]=\"t('age-rating-title')\" [clickable]=\"true\" fontClasses=\"fas fa-eye\" (click)=\"handleGoTo(FilterField.AgeRating, seriesMetadata.ageRating)\" [title]=\"t('age-rating-title')\">\n            {{this.seriesMetadata.ageRating | ageRating}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"seriesMetadata.language !== null && seriesMetadata.language !== ''\">\n        <div class=\"col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n          <app-icon-and-title [label]=\"t('language-title')\" [clickable]=\"true\" fontClasses=\"fas fa-language\" (click)=\"handleGoTo(FilterField.Languages, seriesMetadata.language)\" [title]=\"t('language-title')\">\n            {{seriesMetadata.language | defaultValue:'en' | languageName | async}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-container>\n    </ng-container>\n\n    <ng-container>\n      <div class=\"col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n        <ng-container *ngIf=\"seriesMetadata.publicationStatus | publicationStatus as pubStatus\">\n          <app-icon-and-title [label]=\"t('publication-status-title')\" [clickable]=\"true\" fontClasses=\"fa-solid fa-hourglass-{{pubStatus === t('ongoing') ? 'empty' : 'end'}}\"\n                              (click)=\"handleGoTo(FilterField.PublicationStatus, seriesMetadata.publicationStatus)\"\n                              [ngbTooltip]=\"t('publication-status-tooltip') + ' (' + seriesMetadata.maxCount + ' / ' + seriesMetadata.totalCount + ')'\">\n            {{pubStatus}}\n          </app-icon-and-title>\n        </ng-container>\n      </div>\n      <div class=\"vr m-2 d-none d-lg-block\"></div>\n    </ng-container>\n\n    <ng-container *ngIf=\"accountService.hasValidLicense$ | async\">\n      <div class=\"col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n        <app-icon-and-title [label]=\"t('scrobbling-title')\" [clickable]=\"libraryAllowsScrobbling\"\n                            fontClasses=\"fa-solid fa-tower-{{(isScrobbling && libraryAllowsScrobbling) ? 'broadcast' : 'observation'}}\"\n                            (click)=\"toggleScrobbling($event)\"\n                            [ngbTooltip]=\"t('scrobbling-tooltip')\">\n          <ng-container *ngIf=\"libraryAllowsScrobbling; else noScrobble\">\n            {{ isScrobbling ? t('on') : t('off') }}\n          </ng-container>\n          <ng-template #noScrobble>\n            {{t('disabled')}}\n          </ng-template>\n\n        </app-icon-and-title>\n      </div>\n      <div class=\"vr d-none d-lg-block m-2\"></div>\n    </ng-container>\n\n    <ng-container *ngIf=\"series\">\n      <ng-container>\n        <div class=\"d-none d-md-block col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n          <app-icon-and-title [label]=\"t('format-title')\" [clickable]=\"true\"\n                              [fontClasses]=\"series.format | mangaFormatIcon\"\n                              (click)=\"handleGoTo(FilterField.Formats, series.format)\" [title]=\"t('format-title')\">\n            {{series.format | mangaFormat}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"series.latestReadDate && series.latestReadDate !== '' && (series.latestReadDate | date: 'shortDate') !== '1/1/01'\">\n        <div class=\"d-none d-md-block col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n          <app-icon-and-title [label]=\"t('last-read-title')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-clock\" [title]=\"t('last-read-title')\">\n            {{series.latestReadDate | timeAgo}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"series.format === MangaFormat.EPUB; else showPages\">\n        <ng-container *ngIf=\"series.wordCount > 0\">\n          <div class=\"col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n            <app-icon-and-title [label]=\"t('length-title')\" [clickable]=\"false\" fontClasses=\"fa-solid fa-book-open\">\n              {{t('words-count', {num: series.wordCount | compactNumber})}}\n            </app-icon-and-title>\n          </div>\n          <div class=\"vr d-none d-lg-block m-2\"></div>\n        </ng-container>\n\n      </ng-container>\n      <ng-template #showPages>\n        <div class=\"d-none d-md-block col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n          <app-icon-and-title [label]=\"t('length-title')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-file-lines\">\n            {{t('pages-count', {num: series.pages | compactNumber})}}\n          </app-icon-and-title>\n        </div>\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n      </ng-template>\n\n      <ng-container *ngIf=\"series.format === MangaFormat.EPUB && series.wordCount > 0 || series.format !== MangaFormat.EPUB\">\n        <div class=\"col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n          <app-icon-and-title [label]=\"t('read-time-title')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-clock\">\n            <ng-container *ngIf=\"readingTime.maxHours === 0 || readingTime.minHours === 0; else normalReadTime\">{{t('less-than-hour')}}</ng-container>\n            <ng-template #normalReadTime>\n              {{readingTime.minHours}}{{readingTime.maxHours !== readingTime.minHours ? ('-' + readingTime.maxHours) : ''}} {{readingTime.minHours > 1 ? t('hours') : t('hour')}}\n            </ng-template>\n          </app-icon-and-title>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"hasReadingProgress && showReadingTimeLeft && readingTimeLeft && readingTimeLeft.avgHours !== 0\">\n        <div class=\"vr d-none d-lg-block m-2\"></div>\n        <div class=\"col-lg-1 col-md-4 col-sm-4 col-4 mb-2\">\n          <app-icon-and-title label=\"Time Left\" [clickable]=\"false\" fontClasses=\"fa-solid fa-clock\">\n            ~{{readingTimeLeft.avgHours}} {{readingTimeLeft.avgHours > 1 ? t('hours') : t('hour')}}\n          </app-icon-and-title>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  inject,\n  Input,\n  OnChanges, OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {TagBadgeComponent, TagBadgeCursor} from '../../../shared/tag-badge/tag-badge.component';\nimport {FilterUtilitiesService} from '../../../shared/_services/filter-utilities.service';\nimport {Breakpoint, UtilityService} from '../../../shared/_services/utility.service';\nimport {MangaFormat} from '../../../_models/manga-format';\nimport {ReadingList} from '../../../_models/reading-list';\nimport {Series} from '../../../_models/series';\nimport {SeriesMetadata} from '../../../_models/metadata/series-metadata';\nimport {ImageService} from 'src/app/_services/image.service';\nimport {CommonModule} from \"@angular/common\";\nimport {BadgeExpanderComponent} from \"../../../shared/badge-expander/badge-expander.component\";\nimport {SafeHtmlPipe} from \"../../../_pipes/safe-html.pipe\";\nimport {ExternalRatingComponent} from \"../external-rating/external-rating.component\";\nimport {ReadMoreComponent} from \"../../../shared/read-more/read-more.component\";\nimport {A11yClickDirective} from \"../../../shared/a11y-click.directive\";\nimport {PersonBadgeComponent} from \"../../../shared/person-badge/person-badge.component\";\nimport {NgbCollapse} from \"@ng-bootstrap/ng-bootstrap\";\nimport {SeriesInfoCardsComponent} from \"../../../cards/series-info-cards/series-info-cards.component\";\nimport {LibraryType} from \"../../../_models/library/library\";\nimport {MetadataDetailComponent} from \"../metadata-detail/metadata-detail.component\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {FilterField} from \"../../../_models/metadata/v2/filter-field\";\nimport {FilterComparison} from \"../../../_models/metadata/v2/filter-comparison\";\nimport {ImageComponent} from \"../../../shared/image/image.component\";\nimport {Rating} from \"../../../_models/rating\";\nimport {CollectionTagService} from \"../../../_services/collection-tag.service\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {shareReplay} from \"rxjs/operators\";\nimport {PromotedIconComponent} from \"../../../shared/_components/promoted-icon/promoted-icon.component\";\nimport {Observable} from \"rxjs\";\nimport {UserCollection} from \"../../../_models/collection-tag\";\n\n\n@Component({\n  selector: 'app-series-metadata-detail',\n  standalone: true,\n  imports: [CommonModule, TagBadgeComponent, BadgeExpanderComponent, SafeHtmlPipe, ExternalRatingComponent,\n    ReadMoreComponent, A11yClickDirective, PersonBadgeComponent, NgbCollapse, SeriesInfoCardsComponent,\n    MetadataDetailComponent, TranslocoDirective, ImageComponent, PromotedIconComponent],\n  templateUrl: './series-metadata-detail.component.html',\n  styleUrls: ['./series-metadata-detail.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SeriesMetadataDetailComponent implements OnChanges, OnInit {\n\n  protected readonly imageService = inject(ImageService);\n  protected readonly utilityService = inject(UtilityService);\n  private readonly router = inject(Router);\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly filterUtilityService = inject(FilterUtilitiesService);\n  private readonly collectionTagService = inject(CollectionTagService);\n  private readonly destroyRef = inject(DestroyRef);\n\n  protected readonly FilterField = FilterField;\n  protected readonly LibraryType = LibraryType;\n  protected readonly MangaFormat = MangaFormat;\n  protected readonly TagBadgeCursor = TagBadgeCursor;\n  protected readonly Breakpoint = Breakpoint;\n\n  @Input({required: true}) seriesMetadata!: SeriesMetadata;\n  @Input({required: true}) libraryType!: LibraryType;\n  @Input() hasReadingProgress: boolean = false;\n  /**\n   * Reading lists with a connection to the Series\n   */\n  @Input() readingLists: Array<ReadingList> = [];\n  @Input({required: true}) series!: Series;\n  @Input({required: true}) ratings: Array<Rating> = [];\n\n  isCollapsed: boolean = true;\n  hasExtendedProperties: boolean = false;\n\n  /**\n   * Html representation of Series Summary\n   */\n  seriesSummary: string = '';\n  collections$: Observable<UserCollection[]> | undefined;\n\n  get WebLinks() {\n    if (this.seriesMetadata?.webLinks === '') return [];\n    return this.seriesMetadata?.webLinks.split(',') || [];\n  }\n\n  ngOnInit() {\n    // If on desktop, we can just have all the data expanded by default:\n    this.isCollapsed = this.utilityService.getActiveBreakpoint() < Breakpoint.Desktop;\n    // Check if there is a lot of extended data, if so, re-collapse\n    const sum = (this.seriesMetadata.colorists.length + this.seriesMetadata.editors.length\n      + this.seriesMetadata.coverArtists.length + this.seriesMetadata.inkers.length\n      + this.seriesMetadata.letterers.length + this.seriesMetadata.pencillers.length\n      + this.seriesMetadata.publishers.length + this.seriesMetadata.characters.length\n      + this.seriesMetadata.imprints.length + this.seriesMetadata.translators.length\n      + this.seriesMetadata.writers.length + this.seriesMetadata.teams.length + this.seriesMetadata.locations.length) / 13;\n    if (sum > 10) {\n      this.isCollapsed = true;\n    }\n\n    this.collections$ = this.collectionTagService.allCollectionsForSeries(this.series.id).pipe(\n      takeUntilDestroyed(this.destroyRef), shareReplay({bufferSize: 1, refCount: true}));\n    this.cdRef.markForCheck();\n\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.hasExtendedProperties = this.seriesMetadata.colorists.length > 0 ||\n                                  this.seriesMetadata.editors.length > 0 ||\n                                  this.seriesMetadata.coverArtists.length > 0 ||\n                                  this.seriesMetadata.inkers.length > 0 ||\n                                  this.seriesMetadata.letterers.length > 0 ||\n                                  this.seriesMetadata.pencillers.length > 0 ||\n                                  this.seriesMetadata.publishers.length > 0 ||\n                                  this.seriesMetadata.characters.length > 0 ||\n                                  this.seriesMetadata.imprints.length > 0 ||\n                                  this.seriesMetadata.teams.length > 0 ||\n                                  this.seriesMetadata.locations.length > 0 ||\n                                  this.seriesMetadata.translators.length > 0\n    ;\n\n\n    this.seriesSummary = (this.seriesMetadata?.summary === null ? '' : this.seriesMetadata.summary).replace(/\\n/g, '<br>');\n    this.cdRef.markForCheck();\n  }\n\n  toggleView() {\n    this.isCollapsed = !this.isCollapsed;\n    this.cdRef.markForCheck();\n  }\n\n  handleGoTo(event: {queryParamName: FilterField, filter: any}) {\n    this.goTo(event.queryParamName, event.filter);\n  }\n\n  goTo(queryParamName: FilterField, filter: any) {\n    this.filterUtilityService.applyFilter(['library', this.series.libraryId], queryParamName,\n      FilterComparison.Equal, filter).subscribe();\n  }\n\n  navigate(basePage: string, id: number) {\n    this.router.navigate([basePage, id]);\n  }\n}\n","<ng-container *transloco=\"let t; read: 'series-metadata-detail'\">\n  <div class=\"row g-0 mt-2 mb-2\">\n    <app-read-more [text]=\"seriesSummary\" [maxLength]=\"utilityService.getActiveBreakpoint() >= Breakpoint.Desktop ? 1000 : 250\"></app-read-more>\n  </div>\n\n  <!-- Ratings -->\n  <app-metadata-detail [tags]=\"['']\" [libraryId]=\"series.libraryId\" [heading]=\"t('rating-title')\">\n    <ng-template #itemTemplate let-item>\n      <app-external-rating [seriesId]=\"series.id\" [ratings]=\"ratings\" [userRating]=\"series.userRating\" [hasUserRated]=\"series.hasUserRated\" [libraryType]=\"libraryType\"></app-external-rating>\n    </ng-template>\n  </app-metadata-detail>\n\n  <!-- Weblinks -->\n  <ng-container *ngIf=\"WebLinks as links\">\n    <app-metadata-detail [tags]=\"links\" [libraryId]=\"series.libraryId\" [heading]=\"t('links-title')\">\n      <ng-template #itemTemplate let-item>\n        <a class=\"col me-1\" [href]=\"item | safeHtml\" target=\"_blank\" rel=\"noopener noreferrer\" [title]=\"item\">\n          <app-image classes=\"favicon\" width=\"24px\" height=\"24px\"\n                     [imageUrl]=\"imageService.getWebLinkImage(item)\"\n                     [errorImage]=\"imageService.errorWebLinkImage\"/>\n        </a>\n      </ng-template>\n    </app-metadata-detail>\n  </ng-container>\n\n\n  <!-- Genres -->\n  <app-metadata-detail [tags]=\"seriesMetadata.genres\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Genres\" [heading]=\"t('genres-title')\">\n    <ng-template #titleTemplate let-item>{{item.title}}</ng-template>\n  </app-metadata-detail>\n\n  <!-- Tags -->\n  <app-metadata-detail [tags]=\"seriesMetadata.tags\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Tags\" [heading]=\"t('tags-title')\">\n    <ng-template #titleTemplate let-item>{{item.title}}</ng-template>\n  </app-metadata-detail>\n\n  <!-- Collections -->\n  @if (collections$) {\n    <app-metadata-detail [tags]=\"(collections$ | async)!\" [libraryId]=\"series.libraryId\" [heading]=\"t('collections-title')\">\n      <ng-template #itemTemplate let-item>\n        <app-tag-badge a11y-click=\"13,32\" class=\"col-auto\" (click)=\"navigate('collections', item.id)\" [selectionMode]=\"TagBadgeCursor.Clickable\">\n          <app-promoted-icon [promoted]=\"item.promoted\"></app-promoted-icon> {{item.title}}\n        </app-tag-badge>\n      </ng-template>\n    </app-metadata-detail>\n  }\n\n\n  <!-- Reading Lists -->\n  <app-metadata-detail [tags]=\"readingLists\" [libraryId]=\"series.libraryId\" [heading]=\"t('reading-lists-title')\">\n    <ng-template #itemTemplate let-item>\n      <app-tag-badge a11y-click=\"13,32\" class=\"col-auto\" (click)=\"navigate('lists', item.id)\" [selectionMode]=\"TagBadgeCursor.Clickable\">\n        <span *ngIf=\"item.promoted\">\n            <i class=\"fa fa-angle-double-up\" aria-hidden=\"true\"></i>&nbsp;\n            <span class=\"visually-hidden\">({{t('promoted')}})</span>\n        </span>\n        {{item.title}}\n      </app-tag-badge>\n    </ng-template>\n  </app-metadata-detail>\n\n  <!-- Key Person Information -->\n<!--  @if (libraryType === LibraryType.LightNovel || libraryType === LibraryType.Book) {-->\n<!--    -->\n\n<!--    <app-metadata-detail [tags]=\"seriesMetadata.coverArtists\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.CoverArtist\" [heading]=\"t('cover-artists-title')\">-->\n<!--      <ng-template #itemTemplate let-item>-->\n<!--        <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>-->\n<!--      </ng-template>-->\n<!--    </app-metadata-detail>-->\n<!--  }-->\n\n  <app-metadata-detail [tags]=\"seriesMetadata.writers\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Writers\" [heading]=\"t('writers-title')\">\n    <ng-template #itemTemplate let-item>\n      <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n    </ng-template>\n  </app-metadata-detail>\n\n\n  <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"isCollapsed\" id=\"extended-series-metadata\">\n\n\n    <app-metadata-detail [tags]=\"seriesMetadata.coverArtists\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.CoverArtist\" [heading]=\"t('cover-artists-title')\">\n      <ng-template #itemTemplate let-item>\n        <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n      </ng-template>\n    </app-metadata-detail>\n\n      <app-metadata-detail [tags]=\"seriesMetadata.colorists\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Colorist\" [heading]=\"t('colorists-title')\">\n        <ng-template #itemTemplate let-item>\n          <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n        </ng-template>\n      </app-metadata-detail>\n\n      <app-metadata-detail [tags]=\"seriesMetadata.editors\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Editor\" [heading]=\"t('editors-title')\">\n        <ng-template #itemTemplate let-item>\n          <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n        </ng-template>\n      </app-metadata-detail>\n\n      <app-metadata-detail [tags]=\"seriesMetadata.inkers\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Inker\" [heading]=\"t('inkers-title')\">\n        <ng-template #itemTemplate let-item>\n          <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n        </ng-template>\n      </app-metadata-detail>\n\n      <app-metadata-detail [tags]=\"seriesMetadata.letterers\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Letterer\" [heading]=\"t('letterers-title')\">\n        <ng-template #itemTemplate let-item>\n          <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n        </ng-template>\n      </app-metadata-detail>\n\n      <app-metadata-detail [tags]=\"seriesMetadata.pencillers\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Penciller\" [heading]=\"t('pencillers-title')\">\n        <ng-template #itemTemplate let-item>\n          <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n        </ng-template>\n      </app-metadata-detail>\n\n    <app-metadata-detail [tags]=\"seriesMetadata.characters\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Characters\" [heading]=\"t('characters-title')\">\n      <ng-template #itemTemplate let-item>\n        <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n      </ng-template>\n    </app-metadata-detail>\n\n    <app-metadata-detail [tags]=\"seriesMetadata.teams\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Team\" [heading]=\"t('teams-title')\">\n      <ng-template #itemTemplate let-item>\n        <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n      </ng-template>\n    </app-metadata-detail>\n\n    <app-metadata-detail [tags]=\"seriesMetadata.locations\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Location\" [heading]=\"t('locations-title')\">\n      <ng-template #itemTemplate let-item>\n        <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n      </ng-template>\n    </app-metadata-detail>\n\n      <app-metadata-detail [tags]=\"seriesMetadata.publishers\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Publisher\" [heading]=\"t('publishers-title')\">\n        <ng-template #itemTemplate let-item>\n          <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n        </ng-template>\n      </app-metadata-detail>\n\n      <app-metadata-detail [tags]=\"seriesMetadata.imprints\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Imprint\" [heading]=\"t('imprints-title')\">\n        <ng-template #itemTemplate let-item>\n          <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n        </ng-template>\n      </app-metadata-detail>\n\n    <app-metadata-detail [tags]=\"seriesMetadata.translators\" [libraryId]=\"series.libraryId\" [queryParam]=\"FilterField.Translators\" [heading]=\"t('translators-title')\">\n      <ng-template #itemTemplate let-item>\n        <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\"></app-person-badge>\n      </ng-template>\n    </app-metadata-detail>\n\n  </div>\n\n    <div class=\"row g-0\">\n      <hr class=\"col mt-3\" *ngIf=\"hasExtendedProperties\" >\n      <a [class.hidden]=\"hasExtendedProperties\" *ngIf=\"hasExtendedProperties\"\n         class=\"col col-md-auto align-self-end read-more-link\" (click)=\"toggleView()\">\n        <i aria-hidden=\"true\" class=\"fa fa-caret-{{isCollapsed ? 'down' : 'up'}} me-1\" aria-controls=\"extended-series-metadata\"></i>\n        {{isCollapsed ? t('see-more') : t('see-less')}}\n      </a>\n    </div>\n\n  <app-series-info-cards [series]=\"series\" [seriesMetadata]=\"seriesMetadata\" (goTo)=\"handleGoTo($event)\" [hasReadingProgress]=\"hasReadingProgress\"></app-series-info-cards>\n\n</ng-container>\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, Input, OnInit} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ImageComponent} from \"../../shared/image/image.component\";\nimport {NextExpectedChapter} from \"../../_models/series-detail/next-expected-chapter\";\nimport {UtcToLocalTimePipe} from \"../../_pipes/utc-to-local-time.pipe\";\nimport {SafeHtmlPipe} from \"../../_pipes/safe-html.pipe\";\nimport {translate} from \"@ngneat/transloco\";\n\n@Component({\n  selector: 'app-next-expected-card',\n  standalone: true,\n  imports: [CommonModule, ImageComponent, SafeHtmlPipe],\n  templateUrl: './next-expected-card.component.html',\n  styleUrl: './next-expected-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NextExpectedCardComponent implements OnInit {\n  private readonly cdRef = inject(ChangeDetectorRef);\n\n  /**\n   * Card item url. Will internally handle error and missing covers\n   */\n  @Input() imageUrl = '';\n  /**\n   * This is the entity we are representing. It will be returned if an action is executed.\n   */\n  @Input({required: true}) entity!: NextExpectedChapter;\n  title: string = '';\n\n  ngOnInit(): void {\n    if (this.entity.expectedDate) {\n      const utcPipe = new UtcToLocalTimePipe();\n      this.title = translate('next-expected-card.title', {date: utcPipe.transform(this.entity.expectedDate, 'shortDate')});\n    }\n    this.cdRef.markForCheck();\n  }\n\n}\n","<div class=\"card-item-container card\">\n  <div class=\"overlay\">\n    <app-image borderRadius=\".25rem .25rem 0 0\" height=\"230px\" width=\"158px\" classes=\"extreme-blur\"  [imageUrl]=\"imageUrl\"></app-image>\n\n    <div class=\"card-overlay\"></div>\n    <ng-container *ngIf=\"entity.title | safeHtml as info\">\n      <div class=\"overlay-information overlay-information--centered\" *ngIf=\"info !== ''\">\n        <div class=\"position-relative\">\n          <span class=\"card-title library mx-auto\" style=\"width: auto;\">\n            <i class=\"fa-regular fa-clock mb-2\" style=\"font-size: 26px\" aria-hidden=\"true\"></i>\n            <div class=\"upcoming-header\">Upcoming</div>\n            <span [innerHTML]=\"info\"></span>\n          </span>\n        </div>\n      </div>\n    </ng-container>\n\n  </div>\n\n  <div class=\"card-body\">\n    <span class=\"card-title\" tabindex=\"0\">{{title}}</span>\n  </div>\n</div>\n","import {\n  AsyncPipe,\n  DecimalPipe,\n  DOCUMENT,\n  NgClass,\n  NgFor,\n  NgIf,\n  NgOptimizedImage,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgTemplateOutlet\n} from '@angular/common';\nimport {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  HostListener,\n  Inject,\n  inject,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {Title} from '@angular/platform-browser';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {\n  NgbDropdown,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownToggle,\n  NgbModal,\n  NgbNav,\n  NgbNavChangeEvent,\n  NgbNavContent,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavOutlet,\n  NgbOffcanvas,\n  NgbProgressbar,\n  NgbTooltip\n} from '@ng-bootstrap/ng-bootstrap';\nimport {ToastrService} from 'ngx-toastr';\nimport {catchError, forkJoin, Observable, of} from 'rxjs';\nimport {map, take} from 'rxjs/operators';\nimport {BulkSelectionService} from 'src/app/cards/bulk-selection.service';\nimport {CardDetailDrawerComponent} from 'src/app/cards/card-detail-drawer/card-detail-drawer.component';\nimport {\n  EditSeriesModalCloseResult,\n  EditSeriesModalComponent\n} from 'src/app/cards/_modals/edit-series-modal/edit-series-modal.component';\nimport {TagBadgeCursor} from 'src/app/shared/tag-badge/tag-badge.component';\nimport {DownloadEvent, DownloadService} from 'src/app/shared/_services/download.service';\nimport {KEY_CODES, UtilityService} from 'src/app/shared/_services/utility.service';\nimport {Chapter, LooseLeafOrDefaultNumber, SpecialVolumeNumber} from 'src/app/_models/chapter';\nimport {Device} from 'src/app/_models/device/device';\nimport {ScanSeriesEvent} from 'src/app/_models/events/scan-series-event';\nimport {SeriesRemovedEvent} from 'src/app/_models/events/series-removed-event';\nimport {LibraryType} from 'src/app/_models/library/library';\nimport {ReadingList} from 'src/app/_models/reading-list';\nimport {Series} from 'src/app/_models/series';\nimport {RelatedSeries} from 'src/app/_models/series-detail/related-series';\nimport {RelationKind} from 'src/app/_models/series-detail/relation-kind';\nimport {SeriesMetadata} from 'src/app/_models/metadata/series-metadata';\nimport {User} from 'src/app/_models/user';\nimport {Volume} from 'src/app/_models/volume';\nimport {AccountService} from 'src/app/_services/account.service';\nimport {Action, ActionFactoryService, ActionItem} from 'src/app/_services/action-factory.service';\nimport {ActionService} from 'src/app/_services/action.service';\nimport {DeviceService} from 'src/app/_services/device.service';\nimport {ImageService} from 'src/app/_services/image.service';\nimport {LibraryService} from 'src/app/_services/library.service';\nimport {EVENTS, MessageHubService} from 'src/app/_services/message-hub.service';\nimport {NavService} from 'src/app/_services/nav.service';\nimport {ReaderService} from 'src/app/_services/reader.service';\nimport {ReadingListService} from 'src/app/_services/reading-list.service';\nimport {ScrollService} from 'src/app/_services/scroll.service';\nimport {SeriesService} from 'src/app/_services/series.service';\nimport {\n  ReviewSeriesModalCloseAction,\n  ReviewSeriesModalCloseEvent,\n  ReviewSeriesModalComponent\n} from '../../../_single-module/review-series-modal/review-series-modal.component';\nimport {PageLayoutMode} from 'src/app/_models/page-layout-mode';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {UserReview} from \"../../../_single-module/review-card/user-review\";\nimport {LoadingComponent} from '../../../shared/loading/loading.component';\nimport {ExternalListItemComponent} from '../../../cards/external-list-item/external-list-item.component';\nimport {ExternalSeriesCardComponent} from '../../../cards/external-series-card/external-series-card.component';\nimport {SeriesCardComponent} from '../../../cards/series-card/series-card.component';\nimport {EntityTitleComponent} from '../../../cards/entity-title/entity-title.component';\nimport {ListItemComponent} from '../../../cards/list-item/list-item.component';\nimport {CardItemComponent} from '../../../cards/card-item/card-item.component';\nimport {VirtualScrollerModule} from '@iharbeck/ngx-virtual-scroller';\nimport {BulkOperationsComponent} from '../../../cards/bulk-operations/bulk-operations.component';\nimport {ReviewCardComponent} from '../../../_single-module/review-card/review-card.component';\nimport {CarouselReelComponent} from '../../../carousel/_components/carousel-reel/carousel-reel.component';\nimport {SeriesMetadataDetailComponent} from '../series-metadata-detail/series-metadata-detail.component';\nimport {ImageComponent} from '../../../shared/image/image.component';\nimport {TagBadgeComponent} from '../../../shared/tag-badge/tag-badge.component';\nimport {\n  SideNavCompanionBarComponent\n} from '../../../sidenav/_components/side-nav-companion-bar/side-nav-companion-bar.component';\nimport {TranslocoDirective, TranslocoService} from \"@ngneat/transloco\";\nimport {CardActionablesComponent} from \"../../../_single-module/card-actionables/card-actionables.component\";\nimport {ExternalSeries} from \"../../../_models/series-detail/external-series\";\nimport {\n  SeriesPreviewDrawerComponent\n} from \"../../../_single-module/series-preview-drawer/series-preview-drawer.component\";\nimport {PublicationStatus} from \"../../../_models/metadata/publication-status\";\nimport {NextExpectedChapter} from \"../../../_models/series-detail/next-expected-chapter\";\nimport {NextExpectedCardComponent} from \"../../../cards/next-expected-card/next-expected-card.component\";\nimport {ProviderImagePipe} from \"../../../_pipes/provider-image.pipe\";\nimport {MetadataService} from \"../../../_services/metadata.service\";\nimport {Rating} from \"../../../_models/rating\";\n\ninterface RelatedSeriesPair {\n  series: Series;\n  relation: RelationKind;\n}\n\nenum TabID {\n  Related = 0,\n  Specials = 1,\n  Storyline = 2,\n  Volumes = 3,\n  Chapters = 4,\n  Recommendations = 5\n}\n\ninterface StoryLineItem {\n  chapter?: Chapter;\n  volume?: Volume;\n  isChapter: boolean;\n}\n\n@Component({\n    selector: 'app-series-detail',\n    templateUrl: './series-detail.component.html',\n    styleUrls: ['./series-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n  imports: [NgIf, SideNavCompanionBarComponent, CardActionablesComponent, ReactiveFormsModule, NgStyle,\n    TagBadgeComponent, ImageComponent, NgbTooltip, NgbProgressbar, NgbDropdown, NgbDropdownToggle, NgbDropdownMenu,\n    NgbDropdownItem, SeriesMetadataDetailComponent, CarouselReelComponent, ReviewCardComponent, BulkOperationsComponent,\n    NgbNav, NgbNavItem, NgbNavLink, NgbNavContent, VirtualScrollerModule, NgFor, CardItemComponent, ListItemComponent,\n    EntityTitleComponent, SeriesCardComponent, ExternalSeriesCardComponent, ExternalListItemComponent, NgbNavOutlet,\n    LoadingComponent, DecimalPipe, TranslocoDirective, NgTemplateOutlet, NgSwitch, NgSwitchCase, NextExpectedCardComponent,\n    NgClass, NgOptimizedImage, ProviderImagePipe, AsyncPipe]\n})\nexport class SeriesDetailComponent implements OnInit, AfterContentChecked {\n\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly route = inject(ActivatedRoute);\n  private readonly seriesService = inject(SeriesService);\n  private readonly metadataService = inject(MetadataService);\n  private readonly router = inject(Router);\n  private readonly modalService = inject(NgbModal);\n  private readonly toastr = inject(ToastrService);\n  private readonly accountService = inject(AccountService);\n  private readonly actionFactoryService = inject(ActionFactoryService);\n  private readonly libraryService = inject(LibraryService);\n  private readonly titleService = inject(Title);\n  private readonly downloadService = inject(DownloadService);\n  private readonly actionService = inject(ActionService);\n  private readonly messageHub = inject(MessageHubService);\n  private readonly readingListService = inject(ReadingListService);\n  private readonly offcanvasService = inject(NgbOffcanvas);\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly scrollService = inject(ScrollService);\n  private readonly deviceService = inject(DeviceService);\n  private readonly translocoService = inject(TranslocoService);\n\n  protected readonly bulkSelectionService = inject(BulkSelectionService);\n  protected readonly utilityService = inject(UtilityService);\n  protected readonly imageService = inject(ImageService);\n  protected readonly navService = inject(NavService);\n  protected readonly readerService = inject(ReaderService);\n  protected readonly LibraryType = LibraryType;\n  protected readonly PageLayoutMode = PageLayoutMode;\n  protected readonly TabID = TabID;\n  protected readonly TagBadgeCursor = TagBadgeCursor;\n  protected readonly LooseLeafOrSpecialNumber = LooseLeafOrDefaultNumber;\n  protected readonly SpecialVolumeNumber = SpecialVolumeNumber;\n\n  @ViewChild('scrollingBlock') scrollingBlock: ElementRef<HTMLDivElement> | undefined;\n  @ViewChild('companionBar') companionBar: ElementRef<HTMLDivElement> | undefined;\n\n\n  /**\n   * Series Id. Set at load before UI renders\n   */\n  seriesId!: number;\n  series!: Series;\n  volumes: Volume[] = [];\n  chapters: Chapter[] = [];\n  storyChapters: Chapter[] = [];\n  storylineItems: StoryLineItem[] = [];\n  libraryId = 0;\n  isAdmin = false;\n  hasDownloadingRole = false;\n  isLoading = true;\n  isLoadingExtra = false;\n  showBook = true;\n\n  currentlyReadingChapter: Chapter | undefined = undefined;\n  hasReadingProgress = false;\n\n\n  seriesActions: ActionItem<Series>[] = [];\n  volumeActions: ActionItem<Volume>[] = [];\n  chapterActions: ActionItem<Chapter>[] = [];\n\n  hasSpecials = false;\n  specials: Array<Chapter> = [];\n  activeTabId = TabID.Storyline;\n\n  reviews: Array<UserReview> = [];\n  ratings: Array<Rating> = [];\n  libraryType: LibraryType = LibraryType.Manga;\n  seriesMetadata: SeriesMetadata | null = null;\n  readingLists: Array<ReadingList> = [];\n  isWantToRead: boolean = false;\n  unreadCount: number = 0;\n  totalCount: number = 0;\n  /**\n   * Poster image for the Series\n   */\n  seriesImage: string = '';\n  downloadInProgress: boolean = false;\n\n  nextExpectedChapter: NextExpectedChapter | undefined;\n\n  /**\n   * Track by function for Volume to tell when to refresh card data\n   */\n  trackByVolumeIdentity = (index: number, item: Volume) => `${item.name}_${item.pagesRead}`;\n  /**\n   * Track by function for Chapter to tell when to refresh card data\n   */\n  trackByChapterIdentity = (index: number, item: Chapter) => `${item.title}_${item.minNumber}_${item.maxNumber}_${item.volumeId}_${item.pagesRead}`;\n  trackByRelatedSeriesIdentify = (index: number, item: RelatedSeriesPair) => `${item.series.name}_${item.series.libraryId}_${item.series.pagesRead}_${item.relation}`;\n  trackBySeriesIdentify = (index: number, item: Series) => `${item.name}_${item.libraryId}_${item.pagesRead}`;\n  trackByStoryLineIdentity = (index: number, item: StoryLineItem) => {\n    if (item.isChapter) {\n      return this.trackByChapterIdentity(index, item!.chapter!)\n    }\n    return this.trackByVolumeIdentity(index, item!.volume!);\n  };\n\n  /**\n   * Are there any related series\n   */\n  hasRelations: boolean = false;\n  /**\n   * Are there recommendations\n   */\n  hasRecommendations: boolean = false;\n\n  /**\n   * Related Series. Sorted by backend\n   */\n  relations: Array<RelatedSeriesPair> = [];\n  /**\n   * Recommended Series\n   */\n  combinedRecs: Array<any> = [];\n\n  sortingOptions: Array<{value: string, text: string}> = [\n    {value: 'Storyline', text: 'Storyline'},\n    {value: 'Release', text: 'Release'},\n    {value: 'Added', text: 'Added'},\n  ];\n  renderMode: PageLayoutMode = PageLayoutMode.Cards;\n\n  pageExtrasGroup = new FormGroup({\n    'sortingOption': new FormControl(this.sortingOptions[0].value, []),\n    'renderMode': new FormControl(this.renderMode, []),\n  });\n\n  user: User | undefined;\n\n  /**\n   * This is the download we get from download service.\n   */\n  download$: Observable<DownloadEvent | null> | null = null;\n\n  bulkActionCallback = (action: ActionItem<any>, data: any) => {\n    if (this.series === undefined) {\n      return;\n    }\n    const seriesId = this.series.id;\n    // we need to figure out what is actually selected now\n    const selectedVolumeIndexes = this.bulkSelectionService.getSelectedCardsForSource('volume');\n    const selectedChapterIndexes = this.bulkSelectionService.getSelectedCardsForSource('chapter');\n    const selectedSpecialIndexes = this.bulkSelectionService.getSelectedCardsForSource('special');\n\n    // NOTE: This needs to check current tab as chapter array will be different\n    let chapterArray = this.storyChapters;\n    if (this.activeTabId === TabID.Chapters) chapterArray = this.chapters;\n\n    // We must augment chapter indices as Bulk Selection assumes all on one page, but Storyline has mixed\n    const chapterIndexModifier = this.activeTabId === TabID.Storyline ? this.volumes.length : 0;\n    const selectedChapterIds = chapterArray.filter((_chapter, index: number) => {\n      const mappedIndex = index + chapterIndexModifier;\n      return selectedChapterIndexes.includes(mappedIndex + '');\n    });\n    const selectedVolumeIds = this.volumes.filter((_volume, index: number) => selectedVolumeIndexes.includes(index + ''));\n    const selectedSpecials = this.specials.filter((_chapter, index: number) => selectedSpecialIndexes.includes(index + ''));\n    const chapters = [...selectedChapterIds, ...selectedSpecials];\n\n    switch (action.action) {\n      case Action.AddToReadingList:\n        this.actionService.addMultipleToReadingList(seriesId, selectedVolumeIds, chapters, (success) => {\n          if (success) this.bulkSelectionService.deselectAll();\n          this.cdRef.markForCheck();\n        });\n        break;\n      case Action.MarkAsRead:\n        this.actionService.markMultipleAsRead(seriesId, selectedVolumeIds, chapters,  () => {\n          this.setContinuePoint();\n          this.bulkSelectionService.deselectAll();\n          this.cdRef.markForCheck();\n        });\n\n        break;\n      case Action.MarkAsUnread:\n        this.actionService.markMultipleAsUnread(seriesId, selectedVolumeIds, chapters,  () => {\n          this.setContinuePoint();\n          this.bulkSelectionService.deselectAll();\n          this.cdRef.markForCheck();\n        });\n        break;\n    }\n  }\n\n  get ShowStorylineTab() {\n    if (this.libraryType === LibraryType.ComicVine) return false;\n    // Edge case for bad pdf parse\n    if (this.libraryType === LibraryType.Book && (this.volumes.length === 0 && this.chapters.length === 0 && this.storyChapters.length > 0)) return true;\n\n    return (this.libraryType !== LibraryType.Book && this.libraryType !== LibraryType.LightNovel && this.libraryType !== LibraryType.Comic)\n      && (this.volumes.length > 0 || this.chapters.length > 0);\n  }\n\n  get ShowVolumeTab() {\n    if (this.libraryType === LibraryType.ComicVine) {\n      if (this.volumes.length > 1) return true;\n      if (this.specials.length === 0 && this.chapters.length === 0) return true;\n      return false;\n    }\n    return this.volumes.length > 0;\n  }\n\n  get ShowChaptersTab() {\n    return this.chapters.length > 0;\n  }\n\n  get UseBookLogic() {\n    return this.libraryType === LibraryType.Book || this.libraryType === LibraryType.LightNovel;\n  }\n\n  get ScrollingBlockHeight() {\n    if (this.scrollingBlock === undefined) return 'calc(var(--vh)*100)';\n    const navbar = this.document.querySelector('.navbar') as HTMLElement;\n    if (navbar === null) return 'calc(var(--vh)*100)';\n\n    const companionHeight = this.companionBar!.nativeElement.offsetHeight;\n    const navbarHeight = navbar.offsetHeight;\n    const totalHeight = companionHeight + navbarHeight + 21; //21px to account for padding\n    return 'calc(var(--vh)*100 - ' + totalHeight + 'px)';\n  }\n\n  get ContinuePointTitle() {\n    if (this.currentlyReadingChapter === undefined || !this.hasReadingProgress) return '';\n\n    if (!this.currentlyReadingChapter.isSpecial) {\n      const vol = this.volumes.filter(v => v.id === this.currentlyReadingChapter?.volumeId);\n\n      // This is a lone chapter\n      if (vol.length === 0) {\n        return 'Ch ' + this.currentlyReadingChapter.minNumber; // TODO: Refactor this to use DisplayTitle (or Range) and Localize it\n      }\n\n      if (this.currentlyReadingChapter.minNumber === LooseLeafOrDefaultNumber) {\n        return 'Vol ' + vol[0].minNumber;\n      }\n      return 'Vol ' + vol[0].minNumber + ' Ch ' + this.currentlyReadingChapter.minNumber;\n    }\n\n    return this.currentlyReadingChapter.title;\n  }\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      if (user) {\n        this.user = user;\n        this.isAdmin = this.accountService.hasAdminRole(user);\n        this.hasDownloadingRole = this.accountService.hasDownloadRole(user);\n        this.renderMode = user.preferences.globalPageLayoutMode;\n        this.pageExtrasGroup.get('renderMode')?.setValue(this.renderMode);\n        this.cdRef.markForCheck();\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.scrollService.setScrollContainer(this.scrollingBlock);\n  }\n\n\n  ngOnInit(): void {\n    const routeId = this.route.snapshot.paramMap.get('seriesId');\n    const libraryId = this.route.snapshot.paramMap.get('libraryId');\n    if (routeId === null || libraryId == null) {\n      this.router.navigateByUrl('/home');\n      return;\n    }\n\n    // Setup the download in progress\n    this.download$ = this.downloadService.activeDownloads$.pipe(takeUntilDestroyed(this.destroyRef), map((events) => {\n      return this.downloadService.mapToEntityType(events, this.series);\n    }));\n\n    this.messageHub.messages$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(event => {\n      if (event.event === EVENTS.SeriesRemoved) {\n        const seriesRemovedEvent = event.payload as SeriesRemovedEvent;\n        if (seriesRemovedEvent.seriesId === this.seriesId) {\n          this.toastr.info(this.translocoService.translate('errors.series-doesnt-exist'));\n          this.router.navigateByUrl('/home');\n        }\n      } else if (event.event === EVENTS.ScanSeries) {\n        const seriesCoverUpdatedEvent = event.payload as ScanSeriesEvent;\n        if (seriesCoverUpdatedEvent.seriesId === this.seriesId) {\n          this.loadSeries(this.seriesId);\n        }\n      }\n    });\n\n    this.seriesId = parseInt(routeId, 10);\n    this.libraryId = parseInt(libraryId, 10);\n    this.seriesImage = this.imageService.getSeriesCoverImage(this.seriesId);\n    this.cdRef.markForCheck();\n    this.loadSeries(this.seriesId, true);\n\n    this.pageExtrasGroup.get('renderMode')?.valueChanges.pipe(takeUntilDestroyed(this.destroyRef)).subscribe((val: PageLayoutMode | null) => {\n      if (val == null) return;\n      this.renderMode = val;\n      this.cdRef.markForCheck();\n    });\n  }\n\n  @HostListener('document:keydown.shift', ['$event'])\n  handleKeypress(event: KeyboardEvent) {\n    if (event.key === KEY_CODES.SHIFT) {\n      this.bulkSelectionService.isShiftDown = true;\n    }\n  }\n\n  @HostListener('document:keyup.shift', ['$event'])\n  handleKeyUp(event: KeyboardEvent) {\n    if (event.key === KEY_CODES.SHIFT) {\n      this.bulkSelectionService.isShiftDown = false;\n    }\n  }\n\n  onNavChange(event: NgbNavChangeEvent) {\n    this.bulkSelectionService.deselectAll();\n    this.cdRef.markForCheck();\n  }\n\n  handleSeriesActionCallback(action: ActionItem<Series>, series: Series) {\n    this.cdRef.markForCheck();\n    switch(action.action) {\n      case(Action.MarkAsRead):\n        this.actionService.markSeriesAsRead(series, (series: Series) => {\n          this.loadSeries(series.id);\n        });\n        break;\n      case(Action.MarkAsUnread):\n        this.actionService.markSeriesAsUnread(series, (series: Series) => {\n          this.loadSeries(series.id);\n        });\n        break;\n      case(Action.Scan):\n        this.actionService.scanSeries(series);\n        break;\n      case(Action.RefreshMetadata):\n        this.actionService.refreshMetdata(series);\n        break;\n      case(Action.Delete):\n        this.deleteSeries(series);\n        break;\n      case(Action.AddToReadingList):\n        this.actionService.addSeriesToReadingList(series);\n        break;\n      case(Action.AddToCollection):\n        this.actionService.addMultipleSeriesToCollectionTag([series]);\n        break;\n      case (Action.AnalyzeFiles):\n        this.actionService.analyzeFilesForSeries(series);\n        break;\n      case Action.AddToWantToReadList:\n        this.actionService.addMultipleSeriesToWantToReadList([series.id]);\n        break;\n      case Action.RemoveFromWantToReadList:\n        this.actionService.removeMultipleSeriesFromWantToReadList([series.id]);\n        break;\n      case Action.Download:\n        if (this.downloadInProgress) return;\n        this.downloadSeries();\n        break;\n      case Action.SendTo:\n        {\n          const chapterIds = [...this.volumes.map(v => v.chapters.map(c => c.id)).flat(), ...this.specials.map(c => c.id)]\n          const device = (action._extra!.data as Device);\n          this.actionService.sendToDevice(chapterIds, device);\n          break;\n        }\n      default:\n        break;\n    }\n  }\n\n  handleVolumeActionCallback(action: ActionItem<Volume>, volume: Volume) {\n    switch(action.action) {\n      case(Action.MarkAsRead):\n        this.markVolumeAsRead(volume);\n        break;\n      case(Action.MarkAsUnread):\n        this.markVolumeAsUnread(volume);\n        break;\n      case(Action.Edit):\n        this.openViewInfo(volume);\n        break;\n      case(Action.AddToReadingList):\n        this.actionService.addVolumeToReadingList(volume, this.seriesId, () => {/* No Operation */ });\n        break;\n      case(Action.IncognitoRead):\n        if (volume.chapters != undefined && volume.chapters?.length >= 1) {\n          this.openChapter(volume.chapters.sort(this.utilityService.sortChapters)[0], true);\n        }\n        break;\n      case (Action.SendTo):\n        {\n          const device = (action._extra!.data as Device);\n          this.actionService.sendToDevice(volume.chapters.map(c => c.id), device);\n          break;\n        }\n      default:\n        break;\n    }\n  }\n\n  handleChapterActionCallback(action: ActionItem<Chapter>, chapter: Chapter) {\n    switch (action.action) {\n      case(Action.MarkAsRead):\n        this.markChapterAsRead(chapter);\n        break;\n      case(Action.MarkAsUnread):\n        this.markChapterAsUnread(chapter);\n        break;\n      case(Action.Edit):\n        this.openViewInfo(chapter);\n        break;\n      case(Action.AddToReadingList):\n        this.actionService.addChapterToReadingList(chapter, this.seriesId, () => {/* No Operation */ });\n        break;\n      case(Action.IncognitoRead):\n        this.openChapter(chapter, true);\n        break;\n      case (Action.SendTo):\n        {\n          const device = (action._extra!.data as Device);\n          this.deviceService.sendTo([chapter.id], device.id).subscribe(() => {\n            this.toastr.success(this.translocoService.translate('series-detail.send-to', {deviceName: device.name}));\n          });\n          break;\n        }\n      default:\n        break;\n    }\n  }\n\n\n  async deleteSeries(series: Series) {\n    await this.actionService.deleteSeries(series, (result: boolean) => {\n      this.cdRef.markForCheck();\n      if (result) {\n        this.router.navigate(['library', this.libraryId]);\n      }\n    });\n  }\n\n  loadSeries(seriesId: number, loadExternal: boolean = false) {\n    this.seriesService.getMetadata(seriesId).subscribe(metadata => {\n      this.seriesMetadata = metadata;\n      this.cdRef.markForCheck();\n\n      if (![PublicationStatus.Ended, PublicationStatus.OnGoing].includes(this.seriesMetadata.publicationStatus)) return;\n      this.seriesService.getNextExpectedChapterDate(seriesId).subscribe(date => {\n        if (date == null || date.expectedDate === null) {\n          if (this.nextExpectedChapter !== undefined) {\n            // Clear out the data so the card removes\n            this.nextExpectedChapter = undefined;\n            this.cdRef.markForCheck();\n          }\n          return;\n        }\n\n        this.nextExpectedChapter = date;\n        this.cdRef.markForCheck();\n      })\n    });\n\n    this.seriesService.isWantToRead(seriesId).subscribe(isWantToRead => {\n      this.isWantToRead = isWantToRead;\n      this.cdRef.markForCheck();\n    });\n\n    this.readingListService.getReadingListsForSeries(seriesId).subscribe(lists => {\n      this.readingLists = lists;\n      this.cdRef.markForCheck();\n    });\n    this.setContinuePoint();\n\n\n    forkJoin({\n      libType: this.libraryService.getLibraryType(this.libraryId),\n      series: this.seriesService.getSeries(seriesId)\n    }).subscribe(results => {\n      this.libraryType = results.libType;\n      this.series = results.series;\n\n      if (loadExternal) {\n        this.loadPlusMetadata(this.seriesId, this.libraryType);\n      }\n\n      if (this.libraryType === LibraryType.LightNovel) {\n        this.renderMode = PageLayoutMode.List;\n        this.pageExtrasGroup.get('renderMode')?.setValue(this.renderMode);\n        this.cdRef.markForCheck();\n      }\n\n\n      this.titleService.setTitle('Kavita - ' + this.series.name + ' Details');\n\n      this.seriesActions = this.actionFactoryService.getSeriesActions(this.handleSeriesActionCallback.bind(this))\n              .filter(action => action.action !== Action.Edit);\n\n      this.volumeActions = this.actionFactoryService.getVolumeActions(this.handleVolumeActionCallback.bind(this));\n      this.chapterActions = this.actionFactoryService.getChapterActions(this.handleChapterActionCallback.bind(this));\n\n\n\n      this.seriesService.getRelatedForSeries(this.seriesId).subscribe((relations: RelatedSeries) => {\n        this.relations = [\n          ...relations.prequels.map(item => this.createRelatedSeries(item, RelationKind.Prequel)),\n          ...relations.sequels.map(item => this.createRelatedSeries(item, RelationKind.Sequel)),\n          ...relations.sideStories.map(item => this.createRelatedSeries(item, RelationKind.SideStory)),\n          ...relations.spinOffs.map(item => this.createRelatedSeries(item, RelationKind.SpinOff)),\n          ...relations.adaptations.map(item => this.createRelatedSeries(item, RelationKind.Adaptation)),\n          ...relations.contains.map(item => this.createRelatedSeries(item, RelationKind.Contains)),\n          ...relations.characters.map(item => this.createRelatedSeries(item, RelationKind.Character)),\n          ...relations.others.map(item => this.createRelatedSeries(item, RelationKind.Other)),\n          ...relations.alternativeSettings.map(item => this.createRelatedSeries(item, RelationKind.AlternativeSetting)),\n          ...relations.alternativeVersions.map(item => this.createRelatedSeries(item, RelationKind.AlternativeVersion)),\n          ...relations.doujinshis.map(item => this.createRelatedSeries(item, RelationKind.Doujinshi)),\n          ...relations.parent.map(item => this.createRelatedSeries(item, RelationKind.Parent)),\n          ...relations.editions.map(item => this.createRelatedSeries(item, RelationKind.Edition)),\n          ...relations.annuals.map(item => this.createRelatedSeries(item, RelationKind.Annual)),\n        ];\n        if (this.relations.length > 0) {\n          this.hasRelations = true;\n          this.cdRef.markForCheck();\n        } else {\n          this.hasRelations = false;\n          this.cdRef.markForCheck();\n        }\n      });\n\n      this.seriesService.getSeriesDetail(this.seriesId).pipe(catchError(err => {\n        this.router.navigateByUrl('/home');\n        return of(null);\n      })).subscribe(detail => {\n        if (detail == null) return;\n        this.unreadCount = detail.unreadCount;\n        this.totalCount = detail.totalCount;\n\n        this.hasSpecials = detail.specials.length > 0;\n        this.specials = detail.specials;\n\n        this.chapters = detail.chapters;\n        this.volumes = detail.volumes;\n        this.storyChapters = detail.storylineChapters;\n        this.storylineItems = [];\n        const v = this.volumes.map(v => {\n          return {volume: v, chapter: undefined, isChapter: false} as StoryLineItem;\n        });\n        this.storylineItems.push(...v);\n        const c = this.storyChapters.map(c => {\n          return {volume: undefined, chapter: c, isChapter: true} as StoryLineItem;\n        });\n        this.storylineItems.push(...c);\n\n\n        this.updateSelectedTab();\n        this.isLoading = false;\n        this.cdRef.markForCheck();\n      });\n    }, err => {\n      this.router.navigateByUrl('/home');\n    });\n  }\n\n  createRelatedSeries(series: Series, relation: RelationKind) {\n    return {series, relation} as RelatedSeriesPair;\n  }\n\n  /**\n   * This will update the selected tab\n   *\n   * This assumes loadPage() has already primed all the calculations and state variables. Do not call directly.\n   */\n  updateSelectedTab() {\n    // Book libraries only have Volumes or Specials enabled\n    if (this.libraryType === LibraryType.Book || this.libraryType === LibraryType.LightNovel) {\n      if (this.volumes.length === 0) {\n        if (this.specials.length === 0 && this.storyChapters.length > 0) {\n          // NOTE: This is an edge case caused by bad parsing of pdf files. Once the new pdf parser is in place, this should be removed\n          this.activeTabId = TabID.Storyline;\n        } else {\n          this.activeTabId = TabID.Specials;\n        }\n      } else {\n        this.activeTabId = TabID.Volumes;\n      }\n      this.cdRef.markForCheck();\n      return;\n    }\n\n    if (this.volumes.length === 0 && this.chapters.length === 0 && this.specials.length > 0) {\n      this.activeTabId = TabID.Specials;\n    } else {\n      if (this.libraryType == LibraryType.Comic || this.libraryType == LibraryType.ComicVine) {\n        if (this.chapters.length === 0) {\n          this.activeTabId = TabID.Specials;\n        } else {\n          this.activeTabId = TabID.Chapters;\n        }\n      } else {\n        this.activeTabId = TabID.Storyline;\n      }\n\n    }\n    this.cdRef.markForCheck();\n  }\n\n\n  loadPlusMetadata(seriesId: number, libraryType: LibraryType) {\n    this.isLoadingExtra = true;\n    this.cdRef.markForCheck();\n    this.metadataService.getSeriesMetadataFromPlus(seriesId, libraryType).subscribe(data => {\n      this.isLoadingExtra = false;\n      this.cdRef.markForCheck();\n      if (data === null) return;\n\n      // Reviews\n      this.reviews = [...data.reviews];\n      if (data.ratings) {\n        this.ratings = [...data.ratings];\n      }\n\n\n      // Recommendations\n      if (data.recommendations) {\n        this.combinedRecs = [...data.recommendations.ownedSeries, ...data.recommendations.externalSeries];\n      }\n\n      this.hasRecommendations = this.combinedRecs.length > 0;\n\n      this.cdRef.markForCheck();\n    });\n  }\n\n  setContinuePoint() {\n    this.readerService.hasSeriesProgress(this.seriesId).subscribe(hasProgress => {\n      this.hasReadingProgress = hasProgress;\n      this.cdRef.markForCheck();\n    });\n    this.readerService.getCurrentChapter(this.seriesId).subscribe(chapter => {\n      this.currentlyReadingChapter = chapter;\n      this.cdRef.markForCheck();\n    });\n  }\n\n  markVolumeAsRead(vol: Volume) {\n    if (this.series === undefined) {\n      return;\n    }\n\n    this.actionService.markVolumeAsRead(this.seriesId, vol, () => {\n      this.setContinuePoint();\n    });\n  }\n\n  markVolumeAsUnread(vol: Volume) {\n    if (this.series === undefined) {\n      return;\n    }\n\n    this.actionService.markVolumeAsUnread(this.seriesId, vol, () => {\n      this.setContinuePoint();\n    });\n  }\n\n  markChapterAsRead(chapter: Chapter) {\n    if (this.series === undefined) {\n      return;\n    }\n\n    this.actionService.markChapterAsRead(this.libraryId, this.seriesId, chapter, () => {\n      this.setContinuePoint();\n    });\n  }\n\n  markChapterAsUnread(chapter: Chapter) {\n    if (this.series === undefined) {\n      return;\n    }\n\n    this.actionService.markChapterAsUnread(this.libraryId, this.seriesId, chapter, () => {\n      this.setContinuePoint();\n    });\n  }\n\n  read(incognitoMode: boolean = false) {\n    if (this.currentlyReadingChapter !== undefined) {\n      this.openChapter(this.currentlyReadingChapter, incognitoMode);\n      return;\n    }\n\n    this.readerService.getCurrentChapter(this.seriesId).subscribe(chapter => {\n      this.openChapter(chapter, incognitoMode);\n    });\n  }\n\n  openChapter(chapter: Chapter, incognitoMode = false) {\n    if (this.bulkSelectionService.hasSelections()) return;\n    if (chapter.pages === 0) {\n      this.toastr.error(this.translocoService.translate('series-detail.no-pages'));\n      return;\n    }\n    this.router.navigate(this.readerService.getNavigationArray(this.libraryId, this.seriesId, chapter.id, chapter.files[0].format), {queryParams: {incognitoMode}});\n  }\n\n  openVolume(volume: Volume) {\n    if (this.bulkSelectionService.hasSelections()) return;\n    if (volume.chapters === undefined || volume.chapters?.length === 0) {\n      this.toastr.error(this.translocoService.translate('series-detail.no-chapters'));\n      return;\n    }\n\n    // If user has progress on the volume, load them where they left off\n    if (volume.pagesRead < volume.pages && volume.pagesRead > 0) {\n      // Find the continue point chapter and load it\n      const unreadChapters = volume.chapters.filter(item => item.pagesRead < item.pages);\n      if (unreadChapters.length > 0) {\n        this.openChapter(unreadChapters[0]);\n        return;\n      }\n      this.openChapter(volume.chapters[0]);\n      return;\n    }\n\n    // Sort the chapters, then grab first if no reading progress\n    this.openChapter([...volume.chapters].sort(this.utilityService.sortChapters)[0]);\n  }\n\n  openViewInfo(data: Volume | Chapter) {\n    const drawerRef = this.offcanvasService.open(CardDetailDrawerComponent, {position: 'bottom'});\n    drawerRef.componentInstance.data = data;\n    drawerRef.componentInstance.parentName = this.series?.name;\n    drawerRef.componentInstance.seriesId = this.series?.id;\n    drawerRef.componentInstance.libraryId = this.series?.libraryId;\n  }\n\n  openEditSeriesModal() {\n    const modalRef = this.modalService.open(EditSeriesModalComponent, {  size: 'xl' });\n    modalRef.componentInstance.series = this.series;\n    modalRef.closed.subscribe((closeResult: EditSeriesModalCloseResult) => {\n      if (closeResult.success) {\n        window.scrollTo(0, 0);\n        this.loadSeries(this.seriesId, closeResult.updateExternal);\n      }\n\n      if (closeResult.coverImageUpdate) {\n        this.toastr.info(this.translocoService.translate('series-detail.cover-change'));\n      }\n    });\n  }\n\n  getUserReview() {\n    return this.reviews.filter(r => r.username === this.user?.username && !r.isExternal);\n  }\n\n  openReviewModal() {\n    const userReview = this.getUserReview();\n\n    const modalRef = this.modalService.open(ReviewSeriesModalComponent, { scrollable: true, size: 'lg' });\n    modalRef.componentInstance.series = this.series;\n    if (userReview.length > 0) {\n      modalRef.componentInstance.review = userReview[0];\n    } else {\n      modalRef.componentInstance.review = {\n        seriesId: this.series.id,\n        tagline: '',\n        body: ''\n      };\n    }\n\n    modalRef.closed.subscribe((closeResult) => {\n      this.updateOrDeleteReview(closeResult);\n    });\n\n  }\n\n  updateOrDeleteReview(closeResult: ReviewSeriesModalCloseEvent) {\n    if (closeResult.action === ReviewSeriesModalCloseAction.Close) return;\n\n    const index = this.reviews.findIndex(r => r.username === closeResult.review!.username);\n    if (closeResult.action === ReviewSeriesModalCloseAction.Edit) {\n      if (index === -1 ) {\n        // A new series was added:\n        this.reviews = [closeResult.review, ...this.reviews];\n        this.cdRef.markForCheck();\n        return;\n      }\n      // An edit occurred\n      this.reviews[index] = closeResult.review;\n      this.cdRef.markForCheck();\n      return;\n    }\n\n    if (closeResult.action === ReviewSeriesModalCloseAction.Delete) {\n      // An edit occurred\n      this.reviews = [...this.reviews.filter(r => r.username !== closeResult.review!.username)];\n      this.cdRef.markForCheck();\n      return;\n    }\n  }\n\n\n  performAction(action: ActionItem<any>) {\n    if (typeof action.callback === 'function') {\n      action.callback(action, this.series);\n    }\n  }\n\n  downloadSeries() {\n    this.downloadService.download('series', this.series, (d) => {\n      if (d) {\n        this.downloadInProgress = true;\n      } else {\n        this.downloadInProgress = false;\n      }\n      this.cdRef.markForCheck();\n    });\n  }\n\n  toggleWantToRead() {\n    if (this.isWantToRead) {\n      this.actionService.removeMultipleSeriesFromWantToReadList([this.series.id]);\n    } else {\n      this.actionService.addMultipleSeriesToWantToReadList([this.series.id]);\n    }\n\n    this.isWantToRead = !this.isWantToRead;\n    this.cdRef.markForCheck();\n  }\n\n  previewSeries(item: Series | ExternalSeries, isExternal: boolean) {\n    const ref = this.offcanvasService.open(SeriesPreviewDrawerComponent, {position: 'end', panelClass: 'navbar-offset'});\n    ref.componentInstance.isExternalSeries = isExternal;\n    ref.componentInstance.name = item.name;\n\n    if (isExternal) {\n      const external = item as ExternalSeries;\n      ref.componentInstance.aniListId = external.aniListId;\n      ref.componentInstance.malId = external.malId;\n    } else {\n      const local = item as Series;\n      ref.componentInstance.seriesId = local.id;\n      ref.componentInstance.libraryId = local.libraryId;\n    }\n\n  }\n\n\n}\n","<ng-container *transloco=\"let t; read: 'series-detail'\">\n  <div #companionBar>\n    <app-side-nav-companion-bar *ngIf=\"series !== undefined\" [hasExtras]=\"true\" [extraDrawer]=\"extrasDrawer\">\n      <ng-container title>\n        <h2 class=\"title text-break\">\n          <app-card-actionables (actionHandler)=\"performAction($event)\" [actions]=\"seriesActions\" [labelBy]=\"series.name\" iconClass=\"fa-ellipsis-v\"></app-card-actionables>\n          <span>{{series.name}}\n            @if(isLoadingExtra || isLoading) {\n              <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">loading...</span>\n              </div>\n            }\n          </span>\n        </h2>\n      </ng-container>\n      <ng-container subtitle *ngIf=\"series.localizedName !== series.name\">\n        <h6 class=\"subtitle-with-actionables text-break\" title=\"Localized Name\">{{series.localizedName}}</h6>\n      </ng-container>\n\n\n\n      <ng-template #extrasDrawer let-offcanvas>\n        <div style=\"margin-top: 56px\">\n          <div class=\"offcanvas-header\">\n            <h4 class=\"offcanvas-title\" id=\"offcanvas-basic-title\">{{t('page-settings-title')}}</h4>\n            <button type=\"button\" class=\"btn-close\" [attr.aria-label]=\"t('close')\" (click)=\"offcanvas.dismiss()\"></button>\n          </div>\n          <div class=\"offcanvas-body\">\n            <form [formGroup]=\"pageExtrasGroup\">\n              <div class=\"row g-0\">\n                <div class=\"col-md-12 col-sm-12 pe-2 mb-3\">\n                  <label id=\"list-layout-mode-label\" class=\"form-label\">{{t('layout-mode-label')}}</label>\n                  <br/>\n                  <div class=\"btn-group d-flex justify-content-center\" role=\"group\" [attr.aria-label]=\"t('page-settings-title')\">\n                    <input type=\"radio\" formControlName=\"renderMode\" [value]=\"PageLayoutMode.Cards\" class=\"btn-check\" id=\"layout-mode-default\" autocomplete=\"off\">\n                    <label class=\"btn btn-outline-primary\" for=\"layout-mode-default\">{{t('layout-mode-option-card')}}</label>\n\n                    <input type=\"radio\" formControlName=\"renderMode\" [value]=\"PageLayoutMode.List\" class=\"btn-check\" id=\"layout-mode-col1\" autocomplete=\"off\">\n                    <label class=\"btn btn-outline-primary\" for=\"layout-mode-col1\">{{t('layout-mode-option-list')}}</label>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </ng-template>\n\n\n    </app-side-nav-companion-bar>\n  </div>\n\n  <app-bulk-operations [actionCallback]=\"bulkActionCallback\" [topOffset]=\"56\"></app-bulk-operations>\n\n\n  <div [ngStyle]=\"{'height': ScrollingBlockHeight}\" class=\"main-container container-fluid pt-2\" *ngIf=\"series !== undefined\" #scrollingBlock>\n    <div class=\"row mb-0 mb-xl-3 info-container\">\n      <div class=\"image-container col-4 col-sm-6 col-md-4 col-lg-4 col-xl-2 col-xxl-2 d-none d-sm-block mt-2\">\n        <div class=\"to-read-counter\" *ngIf=\"unreadCount > 0 && unreadCount !== totalCount\">\n          <app-tag-badge [selectionMode]=\"TagBadgeCursor.NotAllowed\" fillStyle=\"filled\">{{unreadCount}}</app-tag-badge>\n        </div>\n        <app-image height=\"100%\" maxHeight=\"400px\" objectFit=\"contain\" background=\"none\" [imageUrl]=\"seriesImage\"></app-image>\n        <ng-container *ngIf=\"series.pagesRead < series.pages && hasReadingProgress && currentlyReadingChapter && !currentlyReadingChapter.isSpecial\">\n          <div class=\"progress-banner\" ngbTooltip=\"{{(series.pagesRead / series.pages) * 100 | number:'1.0-1'}}% Read\">\n            <ngb-progressbar type=\"primary\" height=\"5px\" [value]=\"series.pagesRead\" [max]=\"series.pages\"></ngb-progressbar>\n          </div>\n          <div class=\"under-image\">\n            {{t('continue-from', {title: ContinuePointTitle})}}\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"col-xlg-10 col-lg-8 col-md-8 col-xs-8 col-sm-6 mt-2\">\n        <div class=\"row g-0\">\n          <div class=\"col-auto\">\n            <div class=\"btn-group\">\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"read()\">\n              <span>\n                <i class=\"fa {{showBook ? 'fa-book-open' : 'fa-book'}}\" aria-hidden=\"true\"></i>\n                <span class=\"read-btn--text\">&nbsp;{{(hasReadingProgress) ? t('continue') : t('read')}}</span>\n              </span>\n              </button>\n              <div class=\"btn-group\" ngbDropdown role=\"group\" display=\"dynamic\" [attr.aria-label]=\"t('read-options-alt')\">\n                <button type=\"button\" class=\"btn btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                <div class=\"dropdown-menu\" ngbDropdownMenu>\n                  <button ngbDropdownItem (click)=\"read(true)\">\n                  <span>\n                    <i class=\"fa fa-glasses\" aria-hidden=\"true\"></i>\n                    <span class=\"read-btn--text\">&nbsp;{{(hasReadingProgress) ? t('continue-incognito') : t('read-incognito')}}</span>\n                  </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-auto ms-2\">\n            <button class=\"btn btn-secondary\" (click)=\"toggleWantToRead()\" title=\"{{isWantToRead ? t('remove-from-want-to-read') : t('add-to-want-to-read')}}\">\n            <span>\n                <i class=\"{{isWantToRead ? 'fa-solid' : 'fa-regular'}} fa-star\" aria-hidden=\"true\"></i>\n            </span>\n            </button>\n          </div>\n          <div class=\"col-auto ms-2\" *ngIf=\"isAdmin\">\n            <button class=\"btn btn-secondary\" id=\"edit-btn--komf\" (click)=\"openEditSeriesModal()\" [title]=\"t('edit-series-alt')\">\n              <span><i class=\"fa fa-pen\" aria-hidden=\"true\"></i></span>\n            </button>\n          </div>\n          <div class=\"col-auto ms-2 d-none d-md-block\">\n            <div class=\"card-actions\">\n              <app-card-actionables (actionHandler)=\"performAction($event)\" [actions]=\"seriesActions\" [labelBy]=\"series.name\" iconClass=\"fa-ellipsis-h\" btnClass=\"btn-secondary\"></app-card-actionables>\n            </div>\n          </div>\n\n          <div class=\"col-auto ms-2 d-none d-md-block\" *ngIf=\"isAdmin || hasDownloadingRole\">\n            @if (download$ | async; as download) {\n              <button class=\"btn btn-secondary\" (click)=\"downloadSeries()\" [title]=\"t('download-series--tooltip')\" [disabled]=\"download !== null\">\n                <ng-container *ngIf=\"download !== null; else notDownloading\">\n                  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                  <span class=\"visually-hidden\">{{t('downloading-status')}}</span>\n                </ng-container>\n                <ng-template #notDownloading>\n                  <i class=\"fa fa-arrow-alt-circle-down\" aria-hidden=\"true\"></i>\n                </ng-template>\n              </button>\n            } @else {\n              <button class=\"btn btn-secondary\" (click)=\"downloadSeries()\" [title]=\"t('download-series--tooltip')\">\n                <i class=\"fa fa-arrow-alt-circle-down\" aria-hidden=\"true\"></i>\n              </button>\n            }\n          </div>\n        </div>\n\n        @if (seriesMetadata) {\n          <div class=\"mt-2\">\n            <app-series-metadata-detail [seriesMetadata]=\"seriesMetadata\" [readingLists]=\"readingLists\" [series]=\"series\"\n                                        [libraryType]=\"libraryType\" [ratings]=\"ratings\"\n                                        [hasReadingProgress]=\"hasReadingProgress\"></app-series-metadata-detail>\n          </div>\n        }\n\n      </div>\n\n      <div class=\"row\" [ngClass]=\"{'pt-3': !seriesMetadata || seriesMetadata.summary.length === 0}\">\n        <app-carousel-reel [items]=\"reviews\" [alwaysShow]=\"true\" [title]=\"t('user-reviews-alt')\"\n                           iconClasses=\"fa-solid fa-{{getUserReview().length > 0 ? 'pen' : 'plus'}}\"\n                           [clickableTitle]=\"true\" (sectionClick)=\"openReviewModal()\">\n          <ng-template #carouselItem let-item let-position=\"idx\">\n            <app-review-card [review]=\"item\" (refresh)=\"updateOrDeleteReview($event)\"></app-review-card>\n          </ng-template>\n        </app-carousel-reel>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"series\">\n\n      <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"activeTabId\" class=\"nav nav-tabs mb-2\" [destroyOnHide]=\"false\" (navChange)=\"onNavChange($event)\">\n        <li [ngbNavItem]=\"TabID.Storyline\" *ngIf=\"ShowStorylineTab\">\n          <a ngbNavLink>{{t('storyline-tab')}}</a>\n          <ng-template ngbNavContent>\n            <virtual-scroller #scroll [items]=\"storylineItems\" [bufferAmount]=\"1\" [parentScroll]=\"scrollingBlock\" [childHeight]=\"1\">\n              <ng-container *ngIf=\"renderMode === PageLayoutMode.Cards; else storylineListLayout\">\n                <div class=\"card-container row g-0\" #container>\n                  <ng-container *ngFor=\"let item of scroll.viewPortItems; let idx = index; trackBy: trackByStoryLineIdentity\">\n                    {{item.id}}\n                    <ng-container [ngSwitch]=\"item.isChapter\">\n                      <ng-container *ngSwitchCase=\"false\" [ngTemplateOutlet]=\"nonChapterVolumeCard\" [ngTemplateOutletContext]=\"{$implicit: item.volume, scroll: scroll, idx: idx, volumesLength: volumes.length}\"></ng-container>\n                      <ng-container *ngSwitchCase=\"true\" [ngTemplateOutlet]=\"nonSpecialChapterCard\" [ngTemplateOutletContext]=\"{$implicit: item.chapter, scroll: scroll, idx: idx, chaptersLength: storyChapters.length}\"></ng-container>\n                    </ng-container>\n                  </ng-container>\n                  <ng-container [ngTemplateOutlet]=\"estimatedNextCard\" [ngTemplateOutletContext]=\"{tabId: TabID.Storyline}\"></ng-container>\n                </div>\n              </ng-container>\n              <ng-template #storylineListLayout>\n                <ng-container *ngFor=\"let item of scroll.viewPortItems; let idx = index; trackBy: trackByStoryLineIdentity\">\n                  <ng-container [ngSwitch]=\"item.isChapter\">\n                    <ng-container *ngSwitchCase=\"false\" [ngTemplateOutlet]=\"nonSpecialVolumeListItem\" [ngTemplateOutletContext]=\"{$implicit: item.volume}\"></ng-container>\n                    <ng-container *ngSwitchCase=\"true\" [ngTemplateOutlet]=\"nonSpecialChapterListItem\" [ngTemplateOutletContext]=\"{$implicit: item.chapter}\"></ng-container>\n                  </ng-container>\n                </ng-container>\n              </ng-template>\n            </virtual-scroller>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"TabID.Volumes\" *ngIf=\"ShowVolumeTab\">\n          <a ngbNavLink>{{UseBookLogic ? t('books-tab') : t('volumes-tab')}}</a>\n          <ng-template ngbNavContent>\n            <virtual-scroller #scroll [items]=\"volumes\" [parentScroll]=\"scrollingBlock\" [childHeight]=\"1\">\n              <ng-container *ngIf=\"renderMode === PageLayoutMode.Cards; else volumeListLayout\">\n                <div class=\"card-container row g-0\" #container>\n                  <ng-container *ngFor=\"let item of scroll.viewPortItems; let idx = index; trackBy: trackByVolumeIdentity\">\n                    <ng-container [ngTemplateOutlet]=\"nonChapterVolumeCard\" [ngTemplateOutletContext]=\"{$implicit: item, scroll: scroll, idx: idx, totalLength: volumes.length}\"></ng-container>\n                  </ng-container>\n                  <ng-container [ngTemplateOutlet]=\"estimatedNextCard\" [ngTemplateOutletContext]=\"{tabId: TabID.Volumes}\"></ng-container>\n                </div>\n              </ng-container>\n              <ng-template #volumeListLayout>\n                <ng-container *ngFor=\"let volume of scroll.viewPortItems; let idx = index; trackBy: trackByVolumeIdentity\">\n                  <ng-container [ngTemplateOutlet]=\"nonSpecialVolumeListItem\" [ngTemplateOutletContext]=\"{$implicit: volume}\"></ng-container>\n                </ng-container>\n              </ng-template>\n            </virtual-scroller>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"TabID.Chapters\" *ngIf=\"ShowChaptersTab\">\n          <a ngbNavLink>{{utilityService.formatChapterName(libraryType) + 's'}}</a>\n          <ng-template ngbNavContent>\n            <virtual-scroller #scroll [items]=\"chapters\" [parentScroll]=\"scrollingBlock\" [childHeight]=\"1\">\n              <ng-container *ngIf=\"renderMode === PageLayoutMode.Cards; else chapterListLayout\">\n                <div class=\"card-container row g-0\" #container>\n                  <div *ngFor=\"let item of scroll.viewPortItems; let idx = index; trackBy: trackByChapterIdentity\">\n                    <ng-container [ngTemplateOutlet]=\"nonSpecialChapterCard\" [ngTemplateOutletContext]=\"{$implicit: item, scroll: scroll, idx: idx, totalLength: chapters.length}\"></ng-container>\n                  </div>\n                  <ng-container [ngTemplateOutlet]=\"estimatedNextCard\" [ngTemplateOutletContext]=\"{tabId: TabID.Chapters}\"></ng-container>\n                </div>\n              </ng-container>\n              <ng-template #chapterListLayout>\n                <div *ngFor=\"let chapter of scroll.viewPortItems; let idx = index; trackBy: trackByChapterIdentity\">\n                  <ng-container [ngTemplateOutlet]=\"nonSpecialChapterListItem\" [ngTemplateOutletContext]=\"{$implicit: chapter}\"></ng-container>\n                </div>\n              </ng-template>\n            </virtual-scroller>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"TabID.Specials\" *ngIf=\"hasSpecials\">\n          <a ngbNavLink>{{t('specials-tab')}}</a>\n          <ng-template ngbNavContent>\n            <virtual-scroller #scroll [items]=\"specials\"  [parentScroll]=\"scrollingBlock\" [childHeight]=\"1\">\n              <ng-container *ngIf=\"renderMode === PageLayoutMode.Cards; else specialListLayout\">\n                <div class=\"card-container row g-0\" #container>\n                  <ng-container *ngFor=\"let item of scroll.viewPortItems; let idx = index; trackBy: trackByChapterIdentity\">\n                    <ng-container [ngTemplateOutlet]=\"specialChapterCard\" [ngTemplateOutletContext]=\"{$implicit: item, scroll: scroll, idx: idx, chaptersLength: chapters.length}\"></ng-container>\n                  </ng-container>\n                </div>\n              </ng-container>\n              <ng-template #specialListLayout>\n                <ng-container *ngFor=\"let chapter of scroll.viewPortItems; let idx = index; trackBy: trackByChapterIdentity\">\n                  <ng-container [ngTemplateOutlet]=\"specialChapterListItem\" [ngTemplateOutletContext]=\"{$implicit: chapter}\"></ng-container>\n                </ng-container>\n              </ng-template>\n            </virtual-scroller>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"TabID.Related\" *ngIf=\"hasRelations\">\n          <a ngbNavLink>{{t('related-tab')}}</a>\n          <ng-template ngbNavContent>\n            <virtual-scroller #scroll [items]=\"relations\" [parentScroll]=\"scrollingBlock\" [childHeight]=\"1\">\n              <div class=\"card-container row g-0\" #container>\n                <ng-container *ngFor=\"let item of scroll.viewPortItems let idx = index; trackBy: trackByRelatedSeriesIdentify\">\n                  <app-series-card class=\"col-auto mt-2 mb-2\" [data]=\"item.series\" [libraryId]=\"item.series.libraryId\" [relation]=\"item.relation\"></app-series-card>\n                </ng-container>\n              </div>\n            </virtual-scroller>\n          </ng-template>\n        </li>\n\n        <li [ngbNavItem]=\"TabID.Recommendations\" *ngIf=\"hasRecommendations\">\n          <a ngbNavLink>{{t('recommendations-tab')}}</a>\n          <ng-template ngbNavContent>\n            <virtual-scroller #scroll [items]=\"combinedRecs\" [parentScroll]=\"scrollingBlock\" [childHeight]=\"1\">\n              <ng-container *ngIf=\"renderMode === PageLayoutMode.Cards; else recListLayout\">\n                <div class=\"card-container row g-0\" #container>\n                  <ng-container *ngFor=\"let item of scroll.viewPortItems; let idx = index; trackBy: trackBySeriesIdentify\">\n                    <ng-container *ngIf=\"!item.hasOwnProperty('coverUrl'); else externalRec\">\n                      <app-series-card class=\"col-auto mt-2 mb-2\" [data]=\"item\" [previewOnClick]=\"true\" [libraryId]=\"item.libraryId\"></app-series-card>\n                    </ng-container>\n                    <ng-template #externalRec>\n                      <app-external-series-card class=\"col-auto mt-2 mb-2\" [previewOnClick]=\"true\" [data]=\"item\"></app-external-series-card>\n                    </ng-template>\n                  </ng-container>\n                </div>\n              </ng-container>\n              <ng-template #recListLayout>\n                <ng-container *ngFor=\"let item of scroll.viewPortItems; let idx = index; trackBy: trackBySeriesIdentify\">\n                  <ng-container *ngIf=\"!item.hasOwnProperty('coverUrl'); else externalRec\">\n                    <app-external-list-item [imageUrl]=\"imageService.getSeriesCoverImage(item.id)\" imageWidth=\"130px\" imageHeight=\"\" [summary]=\"item.summary\">\n                      <ng-container title>\n                        <span (click)=\"previewSeries(item, false); $event.stopPropagation(); $event.preventDefault();\">\n                          <a href=\"/library/{{item.libraryId}}/series/{{item.id}}\">{{item.name}}</a>\n                        </span>\n                      </ng-container>\n                    </app-external-list-item>\n                  </ng-container>\n                  <ng-template #externalRec>\n                    <app-external-list-item [imageUrl]=\"item.coverUrl\" imageWidth=\"130px\" imageHeight=\"\" [summary]=\"item.summary\">\n                      <ng-container title>\n                        <span (click)=\"previewSeries(item, true); $event.stopPropagation(); $event.preventDefault();\">\n                          <a [href]=\"item.url\" target=\"_blank\" rel=\"noreferrer nofollow\">{{item.name}}</a>\n                        </span>\n                      </ng-container>\n                    </app-external-list-item>\n                  </ng-template>\n                </ng-container>\n              </ng-template>\n\n            </virtual-scroller>\n          </ng-template>\n        </li>\n      </ul>\n      <div [ngbNavOutlet]=\"nav\"></div>\n    </ng-container>\n\n    <app-loading [loading]=\"isLoading\"></app-loading>\n  </div>\n  <ng-template #estimatedNextCard let-tabId=\"tabId\">\n    <ng-container *ngIf=\"nextExpectedChapter\">\n      <ng-container [ngSwitch]=\"tabId\">\n        <ng-container *ngSwitchCase=\"TabID.Volumes\">\n          <app-next-expected-card *ngIf=\"nextExpectedChapter.volumeNumber !== SpecialVolumeNumber && nextExpectedChapter.chapterNumber === LooseLeafOrSpecialNumber\"\n               class=\"col-auto mt-2 mb-2\" [entity]=\"nextExpectedChapter\"\n                                  [imageUrl]=\"imageService.getSeriesCoverImage(series.id)\"></app-next-expected-card>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"TabID.Chapters\">\n          <app-next-expected-card class=\"col-auto mt-2 mb-2\" [entity]=\"nextExpectedChapter\" [imageUrl]=\"imageService.getSeriesCoverImage(series.id)\"></app-next-expected-card>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"TabID.Storyline\">\n          <app-next-expected-card class=\"col-auto mt-2 mb-2\" [entity]=\"nextExpectedChapter\" [imageUrl]=\"imageService.getSeriesCoverImage(series.id)\"></app-next-expected-card>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </ng-template>\n\n</ng-container>\n\n<ng-template #nonSpecialChapterCard let-item let-scroll=\"scroll\" let-idx=\"idx\" let-totalLength=\"totalLength\">\n  <app-card-item class=\"col-auto mt-2 mb-2\" *ngIf=\"!item.isSpecial\" [entity]=\"item\" [title]=\"item.title\" (click)=\"openChapter(item)\"\n                 [imageUrl]=\"imageService.getChapterCoverImage(item.id)\"\n                 [read]=\"item.pagesRead\" [total]=\"item.pages\" [actions]=\"chapterActions\"\n                 [count]=\"item.files.length\"\n                 (selection)=\"bulkSelectionService.handleCardSelection('chapter', scroll.viewPortInfo.startIndexWithBuffer + idx, totalLength, $event)\"\n                 [selected]=\"bulkSelectionService.isCardSelected('chapter', scroll.viewPortInfo.startIndexWithBuffer + idx)\" [allowSelection]=\"true\">\n  </app-card-item>\n</ng-template>\n\n<ng-template #nonChapterVolumeCard let-item let-scroll=\"scroll\" let-idx=\"idx\" let-totalLength=\"totalLength\">\n  <app-card-item *ngIf=\"item.number !== LooseLeafOrSpecialNumber\" class=\"col-auto mt-2 mb-2\" [entity]=\"item\" [title]=\"item.name\" (click)=\"openVolume(item)\"\n                 [imageUrl]=\"imageService.getVolumeCoverImage(item.id)\"\n                 [read]=\"item.pagesRead\" [total]=\"item.pages\" [actions]=\"volumeActions\"\n                 (selection)=\"bulkSelectionService.handleCardSelection('volume', scroll.viewPortInfo.startIndexWithBuffer + idx, totalLength, $event)\"\n                 [selected]=\"bulkSelectionService.isCardSelected('volume', scroll.viewPortInfo.startIndexWithBuffer + idx)\" [allowSelection]=\"true\">\n  </app-card-item>\n</ng-template>\n\n<ng-template #specialChapterCard let-item let-scroll=\"scroll\" let-idx=\"idx\" let-totalLength=\"totalLength\">\n  <app-card-item class=\"col-auto mt-2 mb-2\" [entity]=\"item\" [title]=\"item.title || item.range\" (click)=\"openChapter(item)\"\n                 [imageUrl]=\"imageService.getChapterCoverImage(item.id)\"\n                 [read]=\"item.pagesRead\" [total]=\"item.pages\" [actions]=\"chapterActions\"\n                 [count]=\"item.files.length\"\n                 (selection)=\"bulkSelectionService.handleCardSelection('special', scroll.viewPortInfo.startIndexWithBuffer + idx, totalLength, $event)\"\n                 [selected]=\"bulkSelectionService.isCardSelected('special', scroll.viewPortInfo.startIndexWithBuffer + idx)\" [allowSelection]=\"true\">\n  </app-card-item>\n</ng-template>\n\n<ng-template #nonSpecialChapterListItem let-item>\n  <app-list-item [imageUrl]=\"imageService.getChapterCoverImage(item.id)\" [libraryId]=\"libraryId\"\n                 [seriesName]=\"series.name\" [entity]=\"item\" *ngIf=\"!item.isSpecial\"\n                 [actions]=\"chapterActions\" [libraryType]=\"libraryType\" imageWidth=\"130px\" imageHeight=\"\"\n                 [pagesRead]=\"item.pagesRead\" [totalPages]=\"item.pages\" (read)=\"openChapter(item)\"\n                 [blur]=\"user?.preferences?.blurUnreadSummaries || false\">\n    <ng-container title>\n      <app-entity-title [libraryType]=\"libraryType\" [entity]=\"item\" [seriesName]=\"series.name\" [prioritizeTitleName]=\"false\"></app-entity-title>\n    </ng-container>\n  </app-list-item>\n</ng-template>\n\n<ng-template #nonSpecialVolumeListItem let-item>\n  <app-list-item [imageUrl]=\"imageService.getVolumeCoverImage(item.id)\" [libraryId]=\"libraryId\"\n                 [seriesName]=\"series.name\" [entity]=\"item\" *ngIf=\"item.number !== LooseLeafOrSpecialNumber\"\n                 [actions]=\"volumeActions\" [libraryType]=\"libraryType\" imageWidth=\"130px\" imageHeight=\"\"\n                 [pagesRead]=\"item.pagesRead\" [totalPages]=\"item.pages\" (read)=\"openVolume(item)\"\n                 [blur]=\"user?.preferences?.blurUnreadSummaries || false\">\n    <ng-container title>\n      <app-entity-title [libraryType]=\"libraryType\" [entity]=\"item\" [seriesName]=\"series.name\" [prioritizeTitleName]=\"false\"></app-entity-title>\n    </ng-container>\n  </app-list-item>\n\n</ng-template><ng-template #specialChapterListItem let-item>\n  <app-list-item [imageUrl]=\"imageService.getChapterCoverImage(item.id)\" [libraryId]=\"libraryId\"\n                 [seriesName]=\"series.name\" [entity]=\"item\"\n                 [actions]=\"chapterActions\" [libraryType]=\"libraryType\" imageWidth=\"130px\" imageHeight=\"\"\n                 [pagesRead]=\"item.pagesRead\" [totalPages]=\"item.pages\" (read)=\"openChapter(item)\"\n                 [blur]=\"user?.preferences?.blurUnreadSummaries || false\">\n    <ng-container title>\n      {{item.title || item.range}}\n    </ng-container>\n  </app-list-item>\n</ng-template>\n"],"mappings":"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","names":["ɵɵelementContainerStart","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","titleName","Number","LooseLeafOrSpecial","isChapter","includeVolume","volumeTitle","ɵɵtemplate","EntityTitleComponent_ng_container_0_ng_container_2_ng_template_2_ng_container_1_Template","seriesName","length","ɵɵproperty","t_r2","EntityTitleComponent_ng_container_0_ng_container_2_ng_container_1_Template","EntityTitleComponent_ng_container_0_ng_container_2_ng_template_2_Template","ɵɵtemplateRefExtractor","prioritizeTitleName","fullComicTitle_r3","EntityTitleComponent_ng_container_0_ng_container_3_ng_template_2_ng_container_1_Template","EntityTitleComponent_ng_container_0_ng_container_3_ng_container_1_Template","EntityTitleComponent_ng_container_0_ng_container_3_ng_template_2_Template","fullComicTitle_r4","EntityTitleComponent_ng_container_0_ng_container_4_ng_template_2_ng_container_1_Template","EntityTitleComponent_ng_container_0_ng_container_4_ng_container_1_Template","EntityTitleComponent_ng_container_0_ng_container_4_ng_template_2_Template","fullMangaTitle_r5","EntityTitleComponent_ng_container_0_ng_container_2_Template","EntityTitleComponent_ng_container_0_ng_container_3_Template","EntityTitleComponent_ng_container_0_ng_container_4_Template","EntityTitleComponent_ng_container_0_ng_container_5_Template","EntityTitleComponent_ng_container_0_ng_container_6_Template","EntityTitleComponent_ng_container_0_ng_container_7_Template","libraryType","LibraryType","Comic","ComicVine","Manga","Book","LightNovel","Images","EntityTitleComponent","entity","range","name","constructor","utilityService","cdRef","LooseLeafOrSpecialNumber","LooseLeafOrDefaultNumber","ngOnInit","c","v","asVolume","chapters","markForCheck","ɵɵdirectiveInject","UtilityService","ChangeDetectorRef","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","EntityTitleComponent_ng_container_0_Template","CommonModule","NgIf","NgSwitch","NgSwitchCase","TranslocoModule","TranslocoDirective","styles","changeDetection","_EntityTitleComponent","ɵɵtext","ɵɵtextInterpolate","item_r1","title","item_r2","name","ɵɵelementStart","ɵɵtemplate","EntityInfoCardsComponent_ng_container_0_div_2_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵelementEnd","EntityInfoCardsComponent_ng_container_0_div_2_ng_template_5_Template","ɵɵadvance","ɵɵproperty","ctx_r2","chapterMetadata","tags","libraryId","FilterField","Tags","characters","Characters","ɵɵelementContainerStart","ɵɵelement","t_r4","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵpipeBind2","chapter","releaseDate","ageRating","ɵɵpureFunction1","_c0","totalPages","totalWordCount","ɵɵtextInterpolate3","readingTime","minHours","maxHours","EntityInfoCardsComponent_ng_container_0_ng_container_9_ng_container_3_Template","EntityInfoCardsComponent_ng_container_0_ng_container_9_ng_template_4_Template","normalReadTime_r5","createdUtc","ɵɵpureFunction0","_c1","size","link_r6","ɵɵsanitizeUrl","imageService","getWebLinkImage","errorWebLinkImage","EntityInfoCardsComponent_ng_container_0_ng_container_13_ng_container_5_a_4_Template","WebLinks","isbn","lastReadingProgress","sortOrder","EntityInfoCardsComponent_ng_container_0_ng_container_13_ng_container_5_Template","EntityInfoCardsComponent_ng_container_0_ng_container_13_ng_container_6_Template","EntityInfoCardsComponent_ng_container_0_ng_container_13_ng_container_7_Template","EntityInfoCardsComponent_ng_container_0_ng_container_13_ng_container_9_Template","entity","id","length","isChapter","EntityInfoCardsComponent_ng_container_0_div_2_Template","EntityInfoCardsComponent_ng_container_0_ng_container_4_Template","EntityInfoCardsComponent_ng_container_0_ng_container_6_Template","EntityInfoCardsComponent_ng_container_0_ng_container_7_Template","EntityInfoCardsComponent_ng_container_0_ng_container_8_Template","EntityInfoCardsComponent_ng_container_0_ng_container_9_Template","EntityInfoCardsComponent_ng_container_0_ng_container_10_Template","EntityInfoCardsComponent_ng_container_0_ng_container_12_Template","EntityInfoCardsComponent_ng_container_0_ng_container_13_Template","undefined","AgeRating","Unknown","files","format","MangaFormat","EPUB","showExtendedProperties","EntityInfoCardsComponent","webLinks","split","constructor","utilityService","seriesService","cdRef","inject","ImageService","includeMetadata","avgHours","ngOnInit","chapters","asChapter","reduce","sum","v","bytes","asVolume","sum1","sum2","file","getChapterMetadata","subscribe","metadata","markForCheck","pages","wordCount","map","c","d","minHoursToRead","maxHoursToRead","avgHoursToRead","vol","ɵɵdirectiveInject","UtilityService","SeriesService","ChangeDetectorRef","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","EntityInfoCardsComponent_ng_container_0_Template","CommonModule","NgForOf","NgIf","DatePipe","IconAndTitleComponent","SafeHtmlPipe","DefaultDatePipe","BytesPipe","CompactNumberPipe","AgeRatingPipe","NgbTooltip","MetadataDetailComponent","TranslocoModule","TranslocoDirective","TranslocoLocaleModule","TranslocoDatePipe","UtcToLocalTimePipe","ImageComponent","styles","changeDetection","_EntityInfoCardsComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","t_r1","ɵɵelement","ɵɵproperty","item_r2","ɵɵtemplate","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_3_ng_template_4_Template","ɵɵtemplateRefExtractor","ɵɵtextInterpolate","ctx_r2","chapter","writers","item_r4","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_4_ng_template_4_Template","coverArtists","item_r5","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_5_ng_template_4_Template","pencillers","item_r6","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_6_ng_template_4_Template","inkers","item_r7","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_7_ng_template_4_Template","colorists","item_r8","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_8_ng_template_4_Template","letterers","item_r9","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_9_ng_template_4_Template","editors","item_r10","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_10_ng_template_4_Template","publishers","item_r11","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_11_ng_template_4_Template","imprints","item_r12","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_12_ng_template_4_Template","characters","item_r13","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_13_ng_template_4_Template","teams","item_r14","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_14_ng_template_4_Template","locations","item_r15","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_15_ng_template_4_Template","translators","ɵɵelementContainerStart","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_span_1_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_3_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_4_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_5_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_6_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_7_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_8_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_9_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_10_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_11_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_12_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_13_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_14_Template","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_div_15_Template","length","ChapterMetadataDetailComponent_ng_container_0_ng_container_1_Template","undefined","ChapterMetadataDetailComponent","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ChapterMetadataDetailComponent_ng_container_0_Template","CommonModule","NgIf","BadgeExpanderComponent","PersonBadgeComponent","TranslocoDirective","styles","changeDetection","_ChapterMetadataDetailComponent","ɵɵelement","ɵɵtext","ɵɵtextInterpolate1","ctx_r1","progressEvents","idx_r1","pagesRead","ɵɵelementStart","ɵɵelementEnd","ɵɵtemplate","EditChapterProgressComponent_ng_container_0_For_14_Conditional_5_Template","EditChapterProgressComponent_ng_container_0_For_14_Conditional_6_Template","ɵɵadvance","ɵɵpropertyInterpolate1","ɵɵpipeBind1","userName","ɵɵconditional","editMode","createdUtc","lastModifiedUtc","ɵɵelementContainerStart","ɵɵrepeaterCreate","EditChapterProgressComponent_ng_container_0_For_14_Template","ɵɵrepeaterTrackByIdentity","ɵɵproperty","formGroup","ɵɵtextInterpolate","t_r3","ɵɵrepeater","items","controls","EditChapterProgressComponent","constructor","readerService","inject","ReaderService","cdRef","ChangeDetectorRef","fb","FormBuilder","group","array","get","ngOnInit","getAllProgressForChapter","chapter","id","subscribe","res","forEach","v","i","push","createRowForm","markForCheck","progress","Validators","required","min","max","pages","created","lastModified","edit","idx","save","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","EditChapterProgressComponent_ng_container_0_Template","TranslocoDirective","ReactiveFormsModule","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","SentenceCasePipe","styles","changeDetection","_EditChapterProgressComponent","ɵɵelementContainerStart","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r1","summary","ɵɵtext","ɵɵtextInterpolate1","t_r3","ɵɵelementStart","ɵɵelementEnd","ɵɵtemplate","CardDetailDrawerComponent_ng_container_0_ng_template_13_ng_container_5_Template","CardDetailDrawerComponent_ng_container_0_ng_template_13_ng_template_6_Template","ɵɵtemplateRefExtractor","coverImageUrl","length","noSummary_r4","data","libraryId","chapterMetadata","chapter","ɵɵtwoWayListener","$event","ɵɵrestoreView","_r5","ɵɵnextContext","i0","ɵɵtwoWayBindingSet","imageUrls","ɵɵresetView","ɵɵlistener","updateCoverImageIndex","applyCoverImage","resetCoverImage","ɵɵtwoWayProperty","coverImageLocked","ɵɵtextInterpolate","utilityService","formatChapterName","libraryType","ɵɵtextInterpolate2","formatChapterNumber","chapter_r7","pagesRead","pages","ɵɵpipeBind1","ɵɵpipeBind2","file_r8","created","CardDetailDrawerComponent_ng_container_0_ng_template_31_li_2_For_17_Conditional_7_Template","filePath","ɵɵconditional","hasOwnProperty","bytes","_r6","$implicit","readChapter","performAction","CardDetailDrawerComponent_ng_container_0_ng_template_31_li_2_ng_container_8_Template","CardDetailDrawerComponent_ng_container_0_ng_template_31_li_2_span_10_Template","CardDetailDrawerComponent_ng_container_0_ng_template_31_li_2_span_11_Template","CardDetailDrawerComponent_ng_container_0_ng_template_31_li_2_span_12_Template","CardDetailDrawerComponent_ng_container_0_ng_template_31_li_2_ng_template_13_Template","ɵɵrepeaterCreate","CardDetailDrawerComponent_ng_container_0_ng_template_31_li_2_For_17_Template","_forTrack0","imageService","getChapterCoverImage","id","chapterActions","minNumber","LooseLeafOrSpecialNumber","specialHeader_r9","ɵɵrepeater","files","CardDetailDrawerComponent_ng_container_0_ng_template_31_Conditional_0_Template","CardDetailDrawerComponent_ng_container_0_ng_template_31_li_2_Template","isChapter","chapters","_r1","activeOffcanvas","dismiss","active","CardDetailDrawerComponent_ng_container_0_ng_template_13_Template","CardDetailDrawerComponent_ng_container_0_ng_template_17_Template","CardDetailDrawerComponent_ng_container_0_ng_template_21_Template","CardDetailDrawerComponent_ng_container_0_ng_template_26_Template","CardDetailDrawerComponent_ng_container_0_ng_template_31_Template","parentName","tabs","TabID","General","title","Metadata","Progress","Cover","isAdmin$","Files","ɵɵclassMapInterpolate1","getActiveBreakpoint","Breakpoint","Mobile","nav_r10","CardDetailDrawerComponent","constructor","uploadService","toastr","accountService","actionFactoryService","actionService","router","libraryService","seriesService","readerService","downloadService","cdRef","destroyRef","inject","DestroyRef","MangaFormat","LibraryType","LooseLeafOrDefaultNumber","seriesId","of","actions","Manga","disabled","downloadInProgress","currentUser$","pipe","takeUntilDestroyed","map","user","hasAdminRole","shareReplay","ngOnInit","c","getChapterMetadata","subscribe","metadata","markForCheck","asChapter","push","getVolumeCoverImage","asVolume","getChapterActions","handleChapterActionCallback","bind","filter","item","action","Action","Edit","Read","callback","requiresAdmin","children","filterSendToAction","getLibraryType","type","collator","Intl","Collator","undefined","numeric","sensitivity","forEach","sort","a","b","compare","close","range","coverUrl","updateChapterCoverImage","selectedIndex","resetChapterCoverLock","info","translate","markChapterAsRead","markChapterAsUnread","MarkAsRead","MarkAsUnread","AddToReadingList","addChapterToReadingList","IncognitoRead","Download","download","SendTo","device","_extra","sendToDevice","incognito","error","params","getQueryParamsObject","navigate","getNavigationArray","format","queryParams","d","ɵɵdirectiveInject","UtilityService","ImageService","UploadService","ToastrService","AccountService","ActionFactoryService","ActionService","Router","LibraryService","SeriesService","ReaderService","NgbActiveOffcanvas","DownloadService","ChangeDetectorRef","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","CardDetailDrawerComponent_ng_container_0_Template","CommonModule","NgForOf","NgIf","AsyncPipe","UpperCasePipe","DecimalPipe","DatePipe","EntityTitleComponent","NgbNav","NgbNavItem","NgbNavLink","NgbNavContent","ImageComponent","ReadMoreComponent","EntityInfoCardsComponent","CoverImageChooserComponent","ChapterMetadataDetailComponent","CardActionablesComponent","DefaultDatePipe","BytesPipe","NgbNavOutlet","TranslocoDirective","EditChapterProgressComponent","styles","changeDetection","_CardDetailDrawerComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","t_r3","ɵɵpureFunction1","_c0","ctx_r1","minLength","ɵɵtemplate","ReviewSeriesModalComponent_ng_container_0_div_12_Conditional_1_Template","ReviewSeriesModalComponent_ng_container_0_div_12_Conditional_2_Template","ɵɵconditional","tmp_3_0","reviewGroup","get","errors","required","tmp_4_0","minlength","ɵɵelementContainerStart","ɵɵlistener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","close","ɵɵelement","ReviewSeriesModalComponent_ng_container_0_div_12_Template","delete","save","ɵɵproperty","ɵɵclassProp","tmp_6_0","invalid","touched","dirty","ReviewSeriesModalCloseAction","ReviewSeriesModalComponent","constructor","modal","inject","NgbActiveModal","seriesService","SeriesService","cdRef","ChangeDetectorRef","confirmService","ConfirmService","toastr","ToastrService","ngOnInit","FormGroup","reviewBody","FormControl","review","body","Validators","markForCheck","success","action","Close","__async","confirm","translate","deleteReview","seriesId","subscribe","Delete","model","value","length","updateReview","Edit","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ReviewSeriesModalComponent_ng_container_0_Template","CommonModule","NgIf","ReactiveFormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MinLengthValidator","FormGroupDirective","FormControlName","TranslocoDirective","styles","changeDetection","_ReviewSeriesModalComponent","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","summary","ExternalListItemComponent","constructor","imageUrl","imageHeight","imageWidth","selectors","inputs","standalone","features","ɵɵStandaloneFeature","ngContentSelectors","_c1","decls","vars","consts","template","rf","ctx","ɵɵprojection","ɵɵtemplate","ExternalListItemComponent_ng_container_7_Template","length","CommonModule","NgIf","ImageComponent","ReadMoreComponent","styles","changeDetection","_ExternalListItemComponent","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","_r3","ctx_r1","ɵɵnextContext","ɵɵresetView","handleClick","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate","data","name","ɵɵproperty","ɵɵpipeBind1","provider","ɵɵtextInterpolate1","url","ɵɵsanitizeUrl","ɵɵtextInterpolate","t_r4","ɵɵelementContainerStart","_r1","ɵɵtemplate","ExternalSeriesCardComponent_ng_container_0_ng_container_1_Conditional_9_Template","coverUrl","ɵɵconditional","length","ExternalSeriesCardComponent_ng_container_0_ng_container_1_Template","undefined","ExternalSeriesCardComponent","constructor","previewOnClick","offcanvasService","inject","NgbOffcanvas","ref","open","SeriesPreviewDrawerComponent","position","panelClass","componentInstance","isExternalSeries","aniListId","malId","link","nativeElement","click","selectors","viewQuery","rf","ctx","ExternalSeriesCardComponent_ng_container_0_Template","CommonModule","NgIf","ImageComponent","NgbTooltip","ReactiveFormsModule","TranslocoDirective","NgOptimizedImage","ProviderImagePipe","styles","changeDetection","_ExternalSeriesCardComponent","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","ɵɵpropertyInterpolate1","ɵɵpipeBind2","ctx_r1","pagesRead","totalPages","ɵɵadvance","ɵɵproperty","ɵɵtext","ɵɵpureFunction1","_c2","actions","length","ɵɵtextInterpolate","Title","ɵɵelementContainerStart","summary","blur","ɵɵtemplate","ListItemComponent_ng_container_0_div_4_Template","ListItemComponent_ng_container_0_div_7_Template","ɵɵlistener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","performAction","ɵɵprojection","read","emit","ListItemComponent_ng_container_0_h6_18_Template","ListItemComponent_ng_container_0_ng_container_19_Template","imageUrl","imageHeight","imageWidth","download$","actionInProgress","seriesName","t_r3","showTitle","entity","libraryId","ShowExtended","ListItemComponent","isChapter","titleName","utilityService","getActiveBreakpoint","Breakpoint","Desktop","constructor","downloadService","toastr","cdRef","libraryType","LibraryType","Manga","seriesLink","relation","undefined","includeVolume","EventEmitter","destroyRef","inject","DestroyRef","downloadInProgress","ngOnInit","asChapter","asVolume","chapters","markForCheck","activeDownloads$","pipe","takeUntilDestroyed","map","events","isVolume","find","e","entityType","subTitle","downloadSubtitle","action","Action","Download","info","translate","statusUpdate","d","volume","download","chapter","callback","ɵɵdirectiveInject","UtilityService","DownloadService","ToastrService","ChangeDetectorRef","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","ngContentSelectors","_c1","decls","vars","consts","template","rf","ctx","ListItemComponent_ng_container_0_Template","CommonModule","NgClass","NgIf","DecimalPipe","ReadMoreComponent","ImageComponent","DownloadIndicatorComponent","EntityInfoCardsComponent","CardActionablesComponent","NgbProgressbar","NgbTooltip","TranslocoDirective","styles","changeDetection","_ListItemComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","t_r3","ɵɵelement","ɵɵproperty","ɵɵpipeBind1","ctx_r1","html","ɵɵsanitizeHtml","ɵɵelementContainerStart","ɵɵlistener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","toggle","ɵɵtemplate","SpoilerComponent_ng_container_0_span_2_Template","SpoilerComponent_ng_container_0_ng_template_3_Template","ɵɵtemplateRefExtractor","isCollapsed","show_r4","SpoilerComponent","constructor","cdRef","inject","ChangeDetectorRef","markForCheck","ngOnInit","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","SpoilerComponent_ng_container_0_Template","CommonModule","NgIf","SafeHtmlPipe","TranslocoDirective","styles","encapsulation","changeDetection","_SpoilerComponent","ɵɵelement","ɵɵproperty","ɵɵpipeBind1","ctx_r1","review","provider","tagline","ɵɵsanitizeHtml","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","siteUrl","ɵɵsanitizeUrl","ɵɵadvance","ɵɵtextInterpolate1","t_r3","ɵɵelementContainerStart","ɵɵtemplate","ReviewCardModalComponent_ng_container_0_Conditional_5_Template","ɵɵlistener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","close","ReviewCardModalComponent_ng_container_0_Conditional_8_Template","ReviewCardModalComponent_ng_container_0_Conditional_13_Template","ɵɵpureFunction1","_c1","username","ɵɵconditional","isExternal","body","ɵɵtextInterpolate","ReviewCardModalComponent","constructor","document","modal","inject","NgbActiveModal","ngAfterViewInit","spoilers","querySelectorAll","i","length","spoiler","componentRef","container","createComponent","SpoilerComponent","instance","html","innerHTML","parentNode","replaceChild","location","nativeElement","cdRef","markForCheck","ɵɵdirectiveInject","DOCUMENT","selectors","viewQuery","rf","ctx","ViewContainerRef","ReviewCardModalComponent_ng_container_0_Template","CommonModule","ReactiveFormsModule","SafeHtmlPipe","TranslocoDirective","NgOptimizedImage","ProviderImagePipe","styles","encapsulation","changeDetection","_ReviewCardModalComponent","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","t_r3","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r1","ScrobbleProvider","Kavita","ɵɵtextInterpolate1","review","username","provider","ɵɵpureFunction1","_c0","score","ɵɵelementContainerStart","ɵɵlistener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","showModal","ɵɵtemplate","ReviewCardComponent_ng_container_0_Conditional_5_Template","ReviewCardComponent_ng_container_0_Conditional_14_Template","ReviewCardComponent_ng_container_0_Conditional_15_Template","ReviewCardComponent_ng_container_0_Conditional_18_Template","ɵɵconditional","isMyReview","isExternal","bodyJustText","body","ɵɵpipeBind2","ReviewCardComponent","constructor","modalService","cdRef","accountService","inject","AccountService","refresh","EventEmitter","ngOnInit","currentUser$","subscribe","u","markForCheck","component","ReviewSeriesModalComponent","ReviewCardModalComponent","ref","open","size","fullscreen","componentInstance","closed","res","emit","ɵɵdirectiveInject","NgbModal","ChangeDetectorRef","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ReviewCardComponent_ng_container_0_Template","ReadMoreComponent","DefaultValuePipe","NgOptimizedImage","ProviderImagePipe","TranslocoDirective","styles","changeDetection","_ReviewCardComponent","NgxStarsComponent_div_2_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","$event","star_r2","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵclassProp","NgxStarsComponent","EventEmitter","elem","index","EditableStar","style","key","starType","classname","clazz","rating","event","clickedStar","clickedInFirstHalf","star","starNumber","starIcon","ɵɵdefineComponent","ɵɵtemplate","ɵɵattribute","ɵɵstyleProp","NgClass","NgForOf","NgStyle","position","NgxStarsModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","ɵɵelementContainerStart","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","userRating","ɵɵtextInterpolate1","overallRating","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","externalPopContent_r3","ɵɵpureFunction1","_c0","rating_r2","ɵɵpipeBind1","provider","averageScore","ɵɵlistener","$event","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵresetView","updateRating","utilityService","getActiveBreakpoint","Breakpoint","Mobile","starColor","rating_r5","providerUrl","ɵɵsanitizeUrl","ɵɵtemplate","ExternalRatingComponent_ng_template_14_a_3_Template","favoriteCount","ExternalRatingComponent","constructor","cdRef","inject","ChangeDetectorRef","seriesService","SeriesService","themeService","ThemeService","UtilityService","destroyRef","DestroyRef","ratings","isLoading","getCssVariable","ngOnInit","getOverallRating","seriesId","subscribe","r","rating","hasUserRated","markForCheck","selectors","inputs","libraryType","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ExternalRatingComponent_ng_container_4_Template","ExternalRatingComponent_ng_template_5_Template","ɵɵtemplateRefExtractor","ExternalRatingComponent_ng_container_7_Template","ExternalRatingComponent_ng_container_8_Template","ExternalRatingComponent_div_9_Template","ExternalRatingComponent_ng_template_12_Template","ExternalRatingComponent_ng_template_14_Template","popContent_r7","notYetRated_r6","CommonModule","NgForOf","NgIf","ProviderImagePipe","NgOptimizedImage","NgbPopover","LoadingComponent","ProviderNamePipe","NgxStarsModule","NgxStarsComponent","ImageComponent","styles","encapsulation","changeDetection","_ExternalRatingComponent","LanguageNamePipe","constructor","metadataService","transform","isoCode","getAllValidLanguages","pipe","map","lang","l","filter","length","title","shareReplay","ɵɵdirectiveInject","MetadataService","pure","standalone","_LanguageNamePipe","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","t_r1","ɵɵtextInterpolate1","ctx_r1","seriesMetadata","releaseYear","ɵɵlistener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","handleGoTo","FilterField","AgeRating","ageRating","ɵɵpipeBind1","_r4","Languages","language","ɵɵpipeBind2","ɵɵtemplate","SeriesInfoCardsComponent_ng_container_0_ng_container_3_ng_container_1_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_3_ng_container_2_Template","_r5","PublicationStatus","publicationStatus","ɵɵpropertyInterpolate1","pubStatus_r6","maxCount","totalCount","isScrobbling","$event","_r7","toggleScrobbling","SeriesInfoCardsComponent_ng_container_0_ng_container_9_ng_container_3_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_9_ng_template_4_Template","ɵɵtemplateRefExtractor","libraryAllowsScrobbling","noScrobble_r8","series","latestReadDate","ɵɵpureFunction1","_c0","wordCount","SeriesInfoCardsComponent_ng_container_0_ng_container_11_ng_container_10_ng_container_1_Template","pages","ɵɵtextInterpolate","ɵɵtextInterpolate3","readingTime","minHours","maxHours","SeriesInfoCardsComponent_ng_container_0_ng_container_11_ng_container_13_ng_container_3_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_11_ng_container_13_ng_template_4_Template","normalReadTime_r10","ɵɵtextInterpolate2","readingTimeLeft","avgHours","_r9","Formats","format","SeriesInfoCardsComponent_ng_container_0_ng_container_11_ng_container_8_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_11_ng_container_10_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_11_ng_template_11_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_11_ng_container_13_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_11_ng_container_14_Template","MangaFormat","EPUB","showPages_r11","hasReadingProgress","showReadingTimeLeft","SeriesInfoCardsComponent_ng_container_0_ng_container_2_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_3_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_6_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_9_Template","SeriesInfoCardsComponent_ng_container_0_ng_container_11_Template","accountService","hasValidLicense$","SeriesInfoCardsComponent","constructor","destroyRef","inject","DestroyRef","utilityService","UtilityService","readerService","ReaderService","cdRef","ChangeDetectorRef","messageHub","MessageHubService","AccountService","scrobbleService","ScrobblingService","goTo","EventEmitter","messages$","pipe","filter","event","EVENTS","UserProgressUpdate","map","evt","payload","debounceTime","takeUntilDestroyed","subscribe","updateEvent","currentUser$","user","undefined","username","seriesId","id","getReadingTimeLeft","ngOnInit","minHoursToRead","maxHoursToRead","avgHoursToRead","hasHold","res","markForCheck","ngOnChanges","queryParamName","SeriesName","emit","getTimeLeft","timeLeft","stopPropagation","addHold","removeHold","selectors","inputs","outputs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","SeriesInfoCardsComponent_ng_container_0_Template","CommonModule","NgIf","AsyncPipe","DatePipe","IconAndTitleComponent","AgeRatingPipe","DefaultValuePipe","LanguageNamePipe","PublicationStatusPipe","MangaFormatPipe","TimeAgoPipe","CompactNumberPipe","MangaFormatIconPipe","NgbTooltip","TranslocoDirective","styles","changeDetection","_SeriesInfoCardsComponent","ɵɵelement","ɵɵproperty","ctx_r1","series","id","ratings","userRating","hasUserRated","libraryType","ɵɵelementStart","ɵɵelementEnd","ɵɵpipeBind1","item_r3","ɵɵsanitizeUrl","ɵɵadvance","imageService","getWebLinkImage","errorWebLinkImage","ɵɵelementContainerStart","ɵɵtemplate","SeriesMetadataDetailComponent_ng_container_0_ng_container_6_ng_template_2_Template","ɵɵtemplateRefExtractor","links_r4","libraryId","t_r5","ɵɵtext","ɵɵtextInterpolate","item_r6","title","item_r7","ɵɵlistener","item_r9","ɵɵrestoreView","_r8","$implicit","ɵɵnextContext","ɵɵresetView","navigate","TagBadgeCursor","Clickable","promoted","ɵɵtextInterpolate1","SeriesMetadataDetailComponent_ng_container_0_Conditional_13_ng_template_2_Template","collections$","item_r11","_r10","SeriesMetadataDetailComponent_ng_container_0_ng_template_15_span_1_Template","item_r12","item_r13","item_r14","item_r15","item_r16","item_r17","item_r18","item_r19","item_r20","item_r21","item_r22","item_r23","item_r24","_r25","toggleView","ɵɵclassProp","hasExtendedProperties","ɵɵclassMapInterpolate1","isCollapsed","SeriesMetadataDetailComponent_ng_container_0_ng_template_4_Template","SeriesMetadataDetailComponent_ng_container_0_ng_container_6_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_8_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_11_Template","SeriesMetadataDetailComponent_ng_container_0_Conditional_13_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_15_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_18_Template","ɵɵtwoWayListener","$event","_r1","i0","ɵɵtwoWayBindingSet","SeriesMetadataDetailComponent_ng_container_0_ng_template_23_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_26_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_29_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_32_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_35_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_38_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_41_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_44_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_47_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_50_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_53_Template","SeriesMetadataDetailComponent_ng_container_0_ng_template_56_Template","SeriesMetadataDetailComponent_ng_container_0_hr_59_Template","SeriesMetadataDetailComponent_ng_container_0_a_60_Template","handleGoTo","seriesSummary","utilityService","getActiveBreakpoint","Breakpoint","Desktop","ɵɵpureFunction0","_c0","WebLinks","seriesMetadata","genres","FilterField","Genres","tags","Tags","ɵɵconditional","readingLists","writers","Writers","ɵɵtwoWayProperty","coverArtists","CoverArtist","colorists","Colorist","editors","Editor","inkers","Inker","letterers","Letterer","pencillers","Penciller","characters","Characters","teams","Team","locations","Location","publishers","Publisher","imprints","Imprint","translators","Translators","hasReadingProgress","SeriesMetadataDetailComponent","constructor","inject","ImageService","UtilityService","router","Router","cdRef","ChangeDetectorRef","filterUtilityService","FilterUtilitiesService","collectionTagService","CollectionTagService","destroyRef","DestroyRef","LibraryType","MangaFormat","webLinks","split","ngOnInit","length","allCollectionsForSeries","pipe","takeUntilDestroyed","shareReplay","bufferSize","refCount","markForCheck","ngOnChanges","changes","summary","replace","event","goTo","queryParamName","filter","applyFilter","FilterComparison","Equal","subscribe","basePage","selectors","inputs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","SeriesMetadataDetailComponent_ng_container_0_Template","CommonModule","NgIf","AsyncPipe","TagBadgeComponent","SafeHtmlPipe","ExternalRatingComponent","ReadMoreComponent","A11yClickDirective","PersonBadgeComponent","NgbCollapse","SeriesInfoCardsComponent","MetadataDetailComponent","TranslocoDirective","ImageComponent","PromotedIconComponent","styles","encapsulation","changeDetection","_SeriesMetadataDetailComponent","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","info_r1","ɵɵsanitizeHtml","ɵɵelementContainerStart","ɵɵtemplate","NextExpectedCardComponent_ng_container_4_div_1_Template","NextExpectedCardComponent","constructor","cdRef","inject","ChangeDetectorRef","imageUrl","title","ngOnInit","entity","expectedDate","utcPipe","UtcToLocalTimePipe","translate","date","transform","markForCheck","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","NextExpectedCardComponent_ng_container_4_Template","ɵɵpipeBind1","ɵɵtextInterpolate","CommonModule","NgIf","ImageComponent","SafeHtmlPipe","styles","changeDetection","_NextExpectedCardComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","series","localizedName","ɵɵlistener","offcanvas_r4","ɵɵrestoreView","_r3","$implicit","ɵɵresetView","dismiss","ɵɵelement","t_r5","ɵɵproperty","pageExtrasGroup","PageLayoutMode","Cards","List","$event","_r1","ɵɵnextContext","performAction","ɵɵtemplate","SeriesDetailComponent_ng_container_0_app_side_nav_companion_bar_3_Conditional_6_Template","SeriesDetailComponent_ng_container_0_app_side_nav_companion_bar_3_ng_container_7_Template","SeriesDetailComponent_ng_container_0_app_side_nav_companion_bar_3_ng_template_8_Template","ɵɵtemplateRefExtractor","extrasDrawer_r6","seriesActions","name","ɵɵtextInterpolate1","ɵɵconditional","isLoadingExtra","isLoading","TagBadgeCursor","NotAllowed","unreadCount","ɵɵpropertyInterpolate1","ɵɵpipeBind2","pagesRead","pages","ɵɵpureFunction1","_c4","ContinuePointTitle","_r8","openEditSeriesModal","_r9","downloadSeries","SeriesDetailComponent_ng_container_0_div_5_div_32_Conditional_1_ng_container_1_Template","SeriesDetailComponent_ng_container_0_div_5_div_32_Conditional_1_ng_template_2_Template","download_r10","notDownloading_r11","_r12","SeriesDetailComponent_ng_container_0_div_5_div_32_Conditional_1_Template","SeriesDetailComponent_ng_container_0_div_5_div_32_Conditional_3_Template","tmp_14_0","ɵɵpipeBind1","download$","seriesMetadata","readingLists","libraryType","ratings","hasReadingProgress","_r13","updateOrDeleteReview","item_r14","ɵɵelementContainer","nonChapterVolumeCard_r20","ɵɵpureFunction4","_c6","item_r17","volume","scroll_r19","idx_r18","volumes","length","nonSpecialChapterCard_r21","_c7","chapter","storyChapters","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_ng_container_2_ng_container_3_ng_container_3_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_ng_container_2_ng_container_3_ng_container_4_Template","id","isChapter","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_ng_container_2_ng_container_3_Template","viewPortItems","trackByStoryLineIdentity","estimatedNextCard_r22","_c5","TabID","Storyline","nonSpecialVolumeListItem_r24","_c8","item_r23","nonSpecialChapterListItem_r25","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_ng_template_3_ng_container_0_ng_container_2_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_ng_template_3_ng_container_0_ng_container_3_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_ng_template_3_ng_container_0_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_ng_container_2_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_ng_template_3_Template","storylineItems","scrollingBlock_r27","renderMode","storylineListLayout_r26","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_ng_template_3_Template","_c9","item_r28","scroll_r30","idx_r29","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_4_ng_template_3_ng_container_2_ng_container_3_Template","trackByVolumeIdentity","Volumes","volume_r31","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_4_ng_template_3_ng_template_3_ng_container_0_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_4_ng_template_3_ng_container_2_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_4_ng_template_3_ng_template_3_Template","volumeListLayout_r32","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_4_ng_template_3_Template","UseBookLogic","item_r33","scroll_r35","idx_r34","chapters","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_5_ng_template_3_ng_container_2_div_3_Template","trackByChapterIdentity","Chapters","chapter_r36","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_5_ng_template_3_ng_template_3_div_0_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_5_ng_template_3_ng_container_2_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_5_ng_template_3_ng_template_3_Template","chapterListLayout_r37","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_5_ng_template_3_Template","utilityService","formatChapterName","specialChapterCard_r41","item_r38","scroll_r40","idx_r39","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_6_ng_template_3_ng_container_2_ng_container_3_Template","specialChapterListItem_r43","chapter_r42","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_6_ng_template_3_ng_template_3_ng_container_0_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_6_ng_template_3_ng_container_2_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_6_ng_template_3_ng_template_3_Template","specials","specialListLayout_r44","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_6_ng_template_3_Template","Specials","item_r45","libraryId","relation","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_7_ng_template_3_ng_container_4_Template","relations","scroll_r46","trackByRelatedSeriesIdentify","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_7_ng_template_3_Template","Related","item_r47","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_ng_container_2_ng_container_3_ng_container_1_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_ng_container_2_ng_container_3_ng_template_2_Template","hasOwnProperty","externalRec_r48","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_ng_container_2_ng_container_3_Template","scroll_r49","trackBySeriesIdentify","_r50","item_r51","previewSeries","stopPropagation","preventDefault","imageService","getSeriesCoverImage","summary","ɵɵpropertyInterpolate2","ɵɵsanitizeUrl","_r52","coverUrl","url","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_ng_template_3_ng_container_0_ng_container_1_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_ng_template_3_ng_container_0_ng_template_2_Template","externalRec_r53","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_ng_template_3_ng_container_0_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_ng_container_2_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_ng_template_3_Template","combinedRecs","recListLayout_r54","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_ng_template_3_Template","Recommendations","ɵɵtwoWayListener","_r15","i0","ɵɵtwoWayBindingSet","activeTabId","onNavChange","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_3_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_4_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_5_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_6_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_7_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_li_8_Template","ɵɵtwoWayProperty","ShowStorylineTab","ShowVolumeTab","ShowChaptersTab","hasSpecials","hasRelations","hasRecommendations","nav_r55","SeriesDetailComponent_ng_container_0_div_5_div_4_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_6_Template","_r7","read","toggleWantToRead","SeriesDetailComponent_ng_container_0_div_5_div_28_Template","SeriesDetailComponent_ng_container_0_div_5_div_32_Template","SeriesDetailComponent_ng_container_0_div_5_Conditional_33_Template","openReviewModal","SeriesDetailComponent_ng_container_0_div_5_ng_template_36_Template","SeriesDetailComponent_ng_container_0_div_5_ng_container_38_Template","_c2","ScrollingBlockHeight","totalCount","seriesImage","currentlyReadingChapter","isSpecial","ɵɵclassMapInterpolate1","showBook","ɵɵpropertyInterpolate","isWantToRead","isAdmin","hasDownloadingRole","_c3","getUserReview","reviews","nextExpectedChapter","SeriesDetailComponent_ng_container_0_ng_template_6_ng_container_0_ng_container_2_app_next_expected_card_1_Template","volumeNumber","SpecialVolumeNumber","chapterNumber","LooseLeafOrSpecialNumber","SeriesDetailComponent_ng_container_0_ng_template_6_ng_container_0_ng_container_2_Template","SeriesDetailComponent_ng_container_0_ng_template_6_ng_container_0_ng_container_3_Template","SeriesDetailComponent_ng_container_0_ng_template_6_ng_container_0_ng_container_4_Template","tabId_r56","SeriesDetailComponent_ng_container_0_ng_template_6_ng_container_0_Template","SeriesDetailComponent_ng_container_0_app_side_nav_companion_bar_3_Template","SeriesDetailComponent_ng_container_0_div_5_Template","SeriesDetailComponent_ng_container_0_ng_template_6_Template","undefined","bulkActionCallback","_r57","item_r58","openChapter","ctx_r58","scroll_r60","scroll","idx_r61","idx","totalLength_r62","totalLength","bulkSelectionService","handleCardSelection","viewPortInfo","startIndexWithBuffer","title","getChapterCoverImage","chapterActions","files","isCardSelected","SeriesDetailComponent_ng_template_1_app_card_item_0_Template","_r63","item_r64","openVolume","ctx_r64","scroll_r66","idx_r67","totalLength_r68","getVolumeCoverImage","volumeActions","SeriesDetailComponent_ng_template_3_app_card_item_0_Template","number","item_r70","_r69","ctx_r70","scroll_r72","idx_r73","totalLength_r74","range","_r75","item_r76","user","preferences","blurUnreadSummaries","SeriesDetailComponent_ng_template_7_app_list_item_0_Template","_r77","item_r78","SeriesDetailComponent_ng_template_9_app_list_item_0_Template","item_r80","_r79","SeriesDetailComponent","LibraryType","ComicVine","Book","LightNovel","Comic","scrollingBlock","navbar","document","querySelector","companionHeight","companionBar","nativeElement","offsetHeight","navbarHeight","vol","filter","v","volumeId","minNumber","LooseLeafOrDefaultNumber","constructor","destroyRef","inject","DestroyRef","route","ActivatedRoute","seriesService","SeriesService","metadataService","MetadataService","router","Router","modalService","NgbModal","toastr","ToastrService","accountService","AccountService","actionFactoryService","ActionFactoryService","libraryService","LibraryService","titleService","Title","downloadService","DownloadService","actionService","ActionService","messageHub","MessageHubService","readingListService","ReadingListService","offcanvasService","NgbOffcanvas","cdRef","ChangeDetectorRef","scrollService","ScrollService","deviceService","DeviceService","translocoService","TranslocoService","BulkSelectionService","UtilityService","ImageService","navService","NavService","readerService","ReaderService","Manga","downloadInProgress","index","item","maxNumber","sortingOptions","value","text","FormGroup","FormControl","action","data","seriesId","selectedVolumeIndexes","getSelectedCardsForSource","selectedChapterIndexes","selectedSpecialIndexes","chapterArray","chapterIndexModifier","selectedChapterIds","_chapter","mappedIndex","includes","selectedVolumeIds","_volume","selectedSpecials","Action","AddToReadingList","addMultipleToReadingList","success","deselectAll","markForCheck","MarkAsRead","markMultipleAsRead","setContinuePoint","MarkAsUnread","markMultipleAsUnread","routeReuseStrategy","shouldReuseRoute","currentUser$","pipe","take","subscribe","hasAdminRole","hasDownloadRole","globalPageLayoutMode","get","setValue","ngAfterContentChecked","setScrollContainer","ngOnInit","routeId","snapshot","paramMap","navigateByUrl","activeDownloads$","takeUntilDestroyed","map","events","mapToEntityType","messages$","event","EVENTS","SeriesRemoved","payload","info","translate","ScanSeries","loadSeries","parseInt","valueChanges","val","handleKeypress","key","KEY_CODES","SHIFT","isShiftDown","handleKeyUp","handleSeriesActionCallback","markSeriesAsRead","markSeriesAsUnread","Scan","scanSeries","RefreshMetadata","refreshMetdata","Delete","deleteSeries","addSeriesToReadingList","AddToCollection","addMultipleSeriesToCollectionTag","AnalyzeFiles","analyzeFilesForSeries","AddToWantToReadList","addMultipleSeriesToWantToReadList","RemoveFromWantToReadList","removeMultipleSeriesFromWantToReadList","Download","SendTo","chapterIds","c","flat","device","_extra","sendToDevice","handleVolumeActionCallback","markVolumeAsRead","markVolumeAsUnread","Edit","openViewInfo","addVolumeToReadingList","IncognitoRead","sort","sortChapters","handleChapterActionCallback","markChapterAsRead","markChapterAsUnread","addChapterToReadingList","sendTo","deviceName","__async","result","navigate","loadExternal","getMetadata","metadata","PublicationStatus","Ended","OnGoing","publicationStatus","getNextExpectedChapterDate","date","expectedDate","getReadingListsForSeries","lists","forkJoin","libType","getLibraryType","getSeries","results","loadPlusMetadata","setTitle","getSeriesActions","bind","getVolumeActions","getChapterActions","getRelatedForSeries","prequels","createRelatedSeries","RelationKind","Prequel","sequels","Sequel","sideStories","SideStory","spinOffs","SpinOff","adaptations","Adaptation","contains","Contains","characters","Character","others","Other","alternativeSettings","AlternativeSetting","alternativeVersions","AlternativeVersion","doujinshis","Doujinshi","parent","Parent","editions","Edition","annuals","Annual","getSeriesDetail","catchError","err","of","detail","storylineChapters","push","updateSelectedTab","getSeriesMetadataFromPlus","recommendations","ownedSeries","externalSeries","hasSeriesProgress","hasProgress","getCurrentChapter","incognitoMode","hasSelections","error","getNavigationArray","format","queryParams","unreadChapters","drawerRef","open","CardDetailDrawerComponent","position","componentInstance","parentName","modalRef","EditSeriesModalComponent","size","closed","closeResult","window","scrollTo","updateExternal","coverImageUpdate","r","username","isExternal","userReview","ReviewSeriesModalComponent","scrollable","review","tagline","body","ReviewSeriesModalCloseAction","Close","findIndex","callback","download","d","ref","SeriesPreviewDrawerComponent","panelClass","isExternalSeries","external","aniListId","malId","local","ɵɵdirectiveInject","DOCUMENT","selectors","viewQuery","rf","ctx","ɵɵresolveDocument","SeriesDetailComponent_ng_container_0_Template","SeriesDetailComponent_ng_template_1_Template","SeriesDetailComponent_ng_template_3_Template","SeriesDetailComponent_ng_template_5_Template","SeriesDetailComponent_ng_template_7_Template","SeriesDetailComponent_ng_template_9_Template","SeriesDetailComponent_ng_template_11_Template","NgIf","SideNavCompanionBarComponent","CardActionablesComponent","ReactiveFormsModule","ɵNgNoValidate","DefaultValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","NgStyle","TagBadgeComponent","ImageComponent","NgbTooltip","NgbProgressbar","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","NgbDropdownItem","SeriesMetadataDetailComponent","CarouselReelComponent","ReviewCardComponent","BulkOperationsComponent","NgbNav","NgbNavItem","NgbNavLink","NgbNavContent","VirtualScrollerModule","VirtualScrollerComponent","NgFor","CardItemComponent","ListItemComponent","EntityTitleComponent","SeriesCardComponent","ExternalSeriesCardComponent","ExternalListItemComponent","NgbNavOutlet","LoadingComponent","DecimalPipe","TranslocoDirective","NgTemplateOutlet","NgSwitch","NgSwitchCase","NextExpectedCardComponent","NgClass","AsyncPipe","styles","changeDetection","_SeriesDetailComponent"],"x_google_ignoreList":[24]}