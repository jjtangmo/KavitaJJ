{
  "version": 3,
  "sources": ["src/app/reading-list/_components/reading-list-detail/reading-list-detail.component.ts", "src/app/reading-list/_components/reading-list-detail/reading-list-detail.component.html", "src/app/reading-list/_components/reading-lists/reading-lists.component.ts", "src/app/reading-list/_components/reading-lists/reading-lists.component.html", "src/app/_routes/reading-list-routing.module.ts"],
  "sourcesContent": ["import {ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {take} from 'rxjs/operators';\nimport {ConfirmService} from 'src/app/shared/confirm.service';\nimport {UtilityService} from 'src/app/shared/_services/utility.service';\nimport {LibraryType} from 'src/app/_models/library/library';\nimport {MangaFormat} from 'src/app/_models/manga-format';\nimport {ReadingList, ReadingListItem} from 'src/app/_models/reading-list';\nimport {AccountService} from 'src/app/_services/account.service';\nimport {Action, ActionFactoryService, ActionItem} from 'src/app/_services/action-factory.service';\nimport {ActionService} from 'src/app/_services/action.service';\nimport {ImageService} from 'src/app/_services/image.service';\nimport {ReadingListService} from 'src/app/_services/reading-list.service';\nimport {\n  DraggableOrderedListComponent,\n  IndexUpdateEvent\n} from '../draggable-ordered-list/draggable-ordered-list.component';\nimport {forkJoin, Observable} from 'rxjs';\nimport {ReaderService} from 'src/app/_services/reader.service';\nimport {LibraryService} from 'src/app/_services/library.service';\nimport {Person} from 'src/app/_models/metadata/person';\nimport {ReadingListItemComponent} from '../reading-list-item/reading-list-item.component';\nimport {LoadingComponent} from '../../../shared/loading/loading.component';\nimport {A11yClickDirective} from '../../../shared/a11y-click.directive';\nimport {PersonBadgeComponent} from '../../../shared/person-badge/person-badge.component';\nimport {BadgeExpanderComponent} from '../../../shared/badge-expander/badge-expander.component';\nimport {ReadMoreComponent} from '../../../shared/read-more/read-more.component';\nimport {NgbDropdown, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle} from '@ng-bootstrap/ng-bootstrap';\nimport {ImageComponent} from '../../../shared/image/image.component';\nimport {AsyncPipe, DatePipe, DecimalPipe, NgClass, NgIf} from '@angular/common';\nimport {\n  SideNavCompanionBarComponent\n} from '../../../sidenav/_components/side-nav-companion-bar/side-nav-companion-bar.component';\nimport {translate, TranslocoDirective, TranslocoService} from \"@ngneat/transloco\";\nimport {CardActionablesComponent} from \"../../../_single-module/card-actionables/card-actionables.component\";\nimport {FilterUtilitiesService} from \"../../../shared/_services/filter-utilities.service\";\nimport {FilterField} from \"../../../_models/metadata/v2/filter-field\";\nimport {FilterComparison} from \"../../../_models/metadata/v2/filter-comparison\";\nimport {MetadataDetailComponent} from \"../../../series-detail/_components/metadata-detail/metadata-detail.component\";\nimport {Title} from \"@angular/platform-browser\";\n\n@Component({\n    selector: 'app-reading-list-detail',\n    templateUrl: './reading-list-detail.component.html',\n    styleUrls: ['./reading-list-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n  imports: [SideNavCompanionBarComponent, NgIf, CardActionablesComponent, ImageComponent, NgbDropdown,\n    NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, ReadMoreComponent, BadgeExpanderComponent,\n    PersonBadgeComponent, A11yClickDirective, LoadingComponent, DraggableOrderedListComponent,\n    ReadingListItemComponent, NgClass, AsyncPipe, DecimalPipe, DatePipe, TranslocoDirective,\n    MetadataDetailComponent]\n})\nexport class ReadingListDetailComponent implements OnInit {\n  items: Array<ReadingListItem> = [];\n  listId!: number;\n  readingList: ReadingList | undefined;\n  actions: Array<ActionItem<any>> = [];\n  isAdmin: boolean = false;\n  isLoading: boolean = false;\n  accessibilityMode: boolean = false;\n  readingListSummary: string = '';\n\n  libraryTypes: {[key: number]: LibraryType} = {};\n  characters$!: Observable<Person[]>;\n\n  private translocoService = inject(TranslocoService);\n  protected readonly MangaFormat = MangaFormat;\n\n  constructor(private route: ActivatedRoute, private router: Router, private readingListService: ReadingListService,\n    private actionService: ActionService, private actionFactoryService: ActionFactoryService, public utilityService: UtilityService,\n    public imageService: ImageService, private accountService: AccountService, private toastr: ToastrService,\n    private confirmService: ConfirmService, private libraryService: LibraryService, private readerService: ReaderService,\n    private readonly cdRef: ChangeDetectorRef, private filterUtilityService: FilterUtilitiesService, private titleService: Title) {\n  }\n\n  ngOnInit(): void {\n    const listId = this.route.snapshot.paramMap.get('id');\n\n    if (listId === null) {\n      this.router.navigateByUrl('/home');\n      return;\n    }\n\n    this.listId = parseInt(listId, 10);\n    this.characters$ = this.readingListService.getCharacters(this.listId);\n\n    forkJoin([\n      this.libraryService.getLibraries(),\n      this.readingListService.getReadingList(this.listId)\n    ]).subscribe(results => {\n      const libraries = results[0];\n      const readingList = results[1];\n\n      this.titleService.setTitle('Kavita - ' + readingList.title);\n\n      libraries.forEach(lib => {\n        this.libraryTypes[lib.id] = lib.type;\n      });\n\n      if (readingList == null) {\n        // The list doesn't exist\n        this.toastr.error(translate('toasts.list-doesnt-exist'));\n        this.router.navigateByUrl('library');\n        return;\n      }\n      this.readingList = readingList;\n      this.readingListSummary = (this.readingList.summary === null ? '' : this.readingList.summary).replace(/\\n/g, '<br>');\n\n      this.cdRef.markForCheck();\n\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        if (user) {\n          this.isAdmin = this.accountService.hasAdminRole(user);\n\n          this.actions = this.actionFactoryService.getReadingListActions(this.handleReadingListActionCallback.bind(this))\n            .filter(action => this.readingListService.actionListFilter(action, readingList, this.isAdmin));\n          this.cdRef.markForCheck();\n        }\n      });\n    });\n    this.getListItems();\n  }\n\n  getListItems() {\n    this.isLoading = true;\n    this.cdRef.markForCheck();\n\n    this.readingListService.getListItems(this.listId).subscribe(items => {\n      this.items = [...items];\n      this.isLoading = false;\n      this.cdRef.markForCheck();\n    });\n  }\n\n  performAction(action: ActionItem<any>) {\n    if (typeof action.callback === 'function') {\n      action.callback(action, this.readingList);\n    }\n  }\n\n  readChapter(item: ReadingListItem) {\n    if (!this.readingList) return;\n    const params = this.readerService.getQueryParamsObject(false, true, this.readingList.id);\n    this.router.navigate(this.readerService.getNavigationArray(item.libraryId, item.seriesId, item.chapterId, item.seriesFormat), {queryParams: params});\n  }\n\n  async handleReadingListActionCallback(action: ActionItem<ReadingList>, readingList: ReadingList) {\n    switch(action.action) {\n      case Action.Delete:\n        await this.deleteList(readingList);\n        break;\n      case Action.Edit:\n        this.actionService.editReadingList(readingList, (readingList: ReadingList) => {\n          // Reload information around list\n          this.readingListService.getReadingList(this.listId).subscribe(rl => {\n            this.readingList = rl;\n            this.readingListSummary = (this.readingList.summary === null ? '' : this.readingList.summary).replace(/\\n/g, '<br>');\n            this.cdRef.markForCheck();\n          })\n        });\n        break;\n    }\n  }\n\n  async deleteList(readingList: ReadingList) {\n    if (!await this.confirmService.confirm(this.translocoService.translate('toasts.confirm-delete-reading-list'))) return;\n\n    this.readingListService.delete(readingList.id).subscribe(() => {\n      this.toastr.success(this.translocoService.translate('toasts.reading-list-deleted'));\n      this.router.navigateByUrl('/lists');\n    });\n  }\n\n  orderUpdated(event: IndexUpdateEvent) {\n    if (!this.readingList) return;\n    this.readingListService.updatePosition(this.readingList.id, event.item.id, event.fromPosition, event.toPosition).subscribe(() => {\n      this.getListItems();\n    });\n  }\n\n  itemRemoved(item: ReadingListItem, position: number) {\n    if (!this.readingList) return;\n    this.readingListService.deleteItem(this.readingList.id, item.id).subscribe(() => {\n      this.items.splice(position, 1);\n      this.items = [...this.items];\n      this.cdRef.markForCheck();\n      this.toastr.success(this.translocoService.translate('toasts.item-removed'));\n    });\n  }\n\n  removeRead() {\n    if (!this.readingList) return;\n    this.isLoading = true;\n    this.cdRef.markForCheck();\n    this.readingListService.removeRead(this.readingList.id).subscribe((resp) => {\n      if (resp === 'Nothing to remove') {\n        this.toastr.info(this.translocoService.translate('toasts.nothing-to-remove'));\n        return;\n      }\n      this.getListItems();\n    });\n  }\n\n  read(incognitoMode: boolean = false) {\n    if (!this.readingList) return;\n    const firstItem = this.items[0];\n    this.router.navigate(\n      this.readerService.getNavigationArray(firstItem.libraryId, firstItem.seriesId, firstItem.chapterId, firstItem.seriesFormat),\n      {queryParams: {readingListId: this.readingList.id, incognitoMode: incognitoMode}});\n  }\n\n  continue(incognitoMode: boolean = false) {\n    // TODO: Can I do this in the backend?\n    if (!this.readingList) return;\n    let currentlyReadingChapter = this.items[0];\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].pagesRead >= this.items[i].pagesTotal) {\n        continue;\n      }\n      currentlyReadingChapter = this.items[i];\n      break;\n    }\n\n    this.router.navigate(\n      this.readerService.getNavigationArray(currentlyReadingChapter.libraryId, currentlyReadingChapter.seriesId, currentlyReadingChapter.chapterId, currentlyReadingChapter.seriesFormat),\n      {queryParams: {readingListId: this.readingList.id, incognitoMode: incognitoMode}});\n  }\n\n  updateAccessibilityMode() {\n    this.accessibilityMode = !this.accessibilityMode;\n    this.cdRef.markForCheck();\n  }\n\n  goToCharacter(character: Person) {\n    this.filterUtilityService.applyFilter(['all-series'], FilterField.Characters, FilterComparison.Contains, character.id + '').subscribe();\n  }\n}\n", "<ng-container *transloco=\"let t; read: 'reading-list-detail'\">\n  <app-side-nav-companion-bar [hasExtras]=\"readingList !== undefined\" [extraDrawer]=\"extrasDrawer\">\n    <h2 title>\n      <app-card-actionables (actionHandler)=\"performAction($event)\" [actions]=\"actions\" [attr.aria-labelledby]=\"readingList?.title\" *ngIf=\"actions.length > 0\"></app-card-actionables>\n      {{readingList?.title}}\n      <span *ngIf=\"readingList?.promoted\" class=\"ms-1\">(<i class=\"fa fa-angle-double-up\" aria-hidden=\"true\"></i>)</span>\n    </h2>\n    <h6 subtitle class=\"subtitle-with-actionables\">{{t('item-count', {num: items.length | number})}}</h6>\n\n    <ng-template #extrasDrawer let-offcanvas>\n      <div style=\"margin-top: 56px\" *ngIf=\"readingList\">\n        <div class=\"offcanvas-header\">\n          <h4 class=\"offcanvas-title\" id=\"offcanvas-basic-title\">{{t('page-settings-title')}}</h4>\n          <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"offcanvas.dismiss()\"></button>\n        </div>\n        <div class=\"offcanvas-body\">\n          <div class=\"row g-0\">\n            <div class=\"col-md-12 col-sm-12 pe-2 mb-3\">\n              <button class=\"btn btn-danger\" (click)=\"removeRead()\" [disabled]=\"readingList.promoted && !this.isAdmin\">\n                  <span>\n                      <i class=\"fa fa-check\"></i>\n                  </span>\n                <span class=\"read-btn--text\">&nbsp;{{t('remove-read')}}</span>\n              </button>\n\n              <div class=\"col-auto ms-2 mt-2\" *ngIf=\"!(readingList?.promoted && !this.isAdmin)\">\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"accessibility-mode\" [value]=\"accessibilityMode\" (change)=\"updateAccessibilityMode()\">\n                  <label class=\"form-check-label\" for=\"accessibility-mode\">{{t('order-numbers-label')}}</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </app-side-nav-companion-bar>\n  <div class=\"container-fluid mt-2\" *ngIf=\"readingList\" >\n\n    <div class=\"row mb-2\">\n      <div class=\"col-md-2 col-xs-4 col-sm-6 d-none d-sm-block\">\n        <app-image maxWidth=\"300px\" maxHeight=\"400px\" [imageUrl]=\"imageService.getReadingListCoverImage(readingList.id)\"></app-image>\n      </div>\n      <div class=\"col-md-10 col-xs-8 col-sm-6 mt-2\">\n        <div class=\"row g-0 mb-3\">\n          <div class=\"col-auto me-2\">\n            <!-- Action row-->\n            <div class=\"btn-group me-3\">\n              <button type=\"button\" class=\"btn btn-primary\" (click)=\"continue()\">\n              <span>\n                <i class=\"fa fa-book-open me-1\" aria-hidden=\"true\"></i>\n                <span class=\"read-btn--text\">{{t('continue')}}</span>\n              </span>\n              </button>\n              <div class=\"btn-group\" ngbDropdown role=\"group\" [attr.aria-label]=\"t('read-options-alt')\">\n                <button type=\"button\" class=\"btn btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                <div class=\"dropdown-menu\" ngbDropdownMenu>\n                  <button ngbDropdownItem (click)=\"read()\">\n                  <span>\n                    <i class=\"fa fa-book\" aria-hidden=\"true\"></i>\n                    <span class=\"read-btn--text\">&nbsp;{{t('read')}}</span>\n                  </span>\n                  </button>\n                  <button ngbDropdownItem (click)=\"continue(true)\">\n                  <span>\n                    <i class=\"fa fa-book-open me-1\" aria-hidden=\"true\"></i>\n                    <span class=\"read-btn--text\">{{t('continue')}}</span>\n                    (<i class=\"fa fa-glasses ms-1\" aria-hidden=\"true\"></i>)\n                    <span class=\"visually-hidden\">{{t('incognito-alt')}}</span>\n                  </span>\n                  </button>\n                  <button ngbDropdownItem (click)=\"read(true)\">\n                  <span>\n                    <i class=\"fa fa-book me-1\" aria-hidden=\"true\"></i>\n                    <span class=\"read-btn--text\">&nbsp;{{t('read')}}</span>\n                    (<i class=\"fa fa-glasses ms-1\" aria-hidden=\"true\"></i>)\n                    <span class=\"visually-hidden\">{{t('incognito-alt')}}</span>\n                  </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row g-0 mt-2\" *ngIf=\"readingList.startingYear !== 0\">\n          <h4 class=\"reading-list-years\">\n            <ng-container *ngIf=\"readingList.startingMonth > 0\">{{(readingList.startingMonth +'/01/2020')| date:'MMM'}}</ng-container>\n            <ng-container *ngIf=\"readingList.startingMonth > 0 && readingList.startingYear > 0\">, </ng-container>\n            <ng-container *ngIf=\"readingList.startingYear > 0\">{{readingList.startingYear}}</ng-container>\n            —\n            <ng-container *ngIf=\"readingList.endingYear > 0\">\n              <ng-container *ngIf=\"readingList.endingMonth > 0\">{{(readingList.endingMonth +'/01/2020') | date:'MMM'}}</ng-container>\n              <ng-container *ngIf=\"readingList.endingMonth > 0 && readingList.endingYear > 0\">, </ng-container>\n              <ng-container *ngIf=\"readingList.endingYear > 0\">{{readingList.endingYear}}</ng-container>\n            </ng-container>\n\n          </h4>\n        </div>\n        <!-- Summary row-->\n        <div class=\"row g-0 mt-2\">\n          <app-read-more [text]=\"readingListSummary\" [maxLength]=\"250\"></app-read-more>\n        </div>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"characters$ | async as characters\">\n      <div class=\"row mb-2\">\n        <div class=\"row\" *ngIf=\"characters && characters.length > 0\">\n          <h5>{{t('characters-title')}}</h5>\n          <app-badge-expander [items]=\"characters\">\n            <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n              <app-person-badge a11y-click=\"13,32\" class=\"col-auto\" [person]=\"item\" (click)=\"goToCharacter(item)\"></app-person-badge>\n            </ng-template>\n          </app-badge-expander>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"row mb-1 scroll-container\" #scrollingBlock>\n      <ng-container *ngIf=\"items.length === 0 && !isLoading; else loading\">\n        <div class=\"mx-auto\" style=\"width: 200px;\">\n          {{t('no-data')}}\n        </div>\n      </ng-container>\n      <ng-template #loading>\n        <app-loading *ngIf=\"isLoading\" [loading]=\"isLoading\"></app-loading>\n      </ng-template>\n\n      <app-draggable-ordered-list [items]=\"items\" (orderUpdated)=\"orderUpdated($event)\" [accessibilityMode]=\"accessibilityMode\"\n                                  [showRemoveButton]=\"false\">\n        <ng-template #draggableItem let-item let-position=\"idx\">\n          <app-reading-list-item [ngClass]=\"{'content-container': items.length < 100, 'non-virtualized-container': items.length >= 100}\" [item]=\"item\" [position]=\"position\" [libraryTypes]=\"libraryTypes\"\n                                 [promoted]=\"item.promoted\" (read)=\"readChapter($event)\" (remove)=\"itemRemoved($event, position)\"></app-reading-list-item>\n        </ng-template>\n      </app-draggable-ordered-list>\n    </div>\n  </div>\n\n</ng-container>\n", "import {ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, OnInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { JumpKey } from 'src/app/_models/jumpbar/jump-key';\nimport { PaginatedResult, Pagination } from 'src/app/_models/pagination';\nimport { ReadingList } from 'src/app/_models/reading-list';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { Action, ActionFactoryService, ActionItem } from 'src/app/_services/action-factory.service';\nimport { ActionService } from 'src/app/_services/action.service';\nimport { ImageService } from 'src/app/_services/image.service';\nimport { JumpbarService } from 'src/app/_services/jumpbar.service';\nimport { ReadingListService } from 'src/app/_services/reading-list.service';\nimport { ImportCblModalComponent } from '../../_modals/import-cbl-modal/import-cbl-modal.component';\nimport { CardItemComponent } from '../../../cards/card-item/card-item.component';\nimport { CardDetailLayoutComponent } from '../../../cards/card-detail-layout/card-detail-layout.component';\nimport { NgIf, DecimalPipe } from '@angular/common';\nimport { SideNavCompanionBarComponent } from '../../../sidenav/_components/side-nav-companion-bar/side-nav-companion-bar.component';\nimport {translate, TranslocoDirective, TranslocoService} from \"@ngneat/transloco\";\nimport {CardActionablesComponent} from \"../../../_single-module/card-actionables/card-actionables.component\";\nimport {Title} from \"@angular/platform-browser\";\nimport {WikiLink} from \"../../../_models/wiki\";\n\n@Component({\n    selector: 'app-reading-lists',\n    templateUrl: './reading-lists.component.html',\n    styleUrls: ['./reading-lists.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n  imports: [SideNavCompanionBarComponent, CardActionablesComponent, NgIf, CardDetailLayoutComponent, CardItemComponent, DecimalPipe, TranslocoDirective]\n})\nexport class ReadingListsComponent implements OnInit {\n\n  protected readonly WikiLink = WikiLink;\n\n  lists: ReadingList[] = [];\n  loadingLists = false;\n  pagination!: Pagination;\n  isAdmin: boolean = false;\n  jumpbarKeys: Array<JumpKey> = [];\n  actions: {[key: number]: Array<ActionItem<ReadingList>>} = {};\n  globalActions: Array<ActionItem<any>> = [{action: Action.Import, title: 'import-cbl', children: [], requiresAdmin: true, callback: this.importCbl.bind(this)}];\n  trackByIdentity = (index: number, item: ReadingList) => `${item.id}_${item.title}`;\n\n  translocoService = inject(TranslocoService);\n  constructor(private readingListService: ReadingListService, public imageService: ImageService, private actionFactoryService: ActionFactoryService,\n    private accountService: AccountService, private toastr: ToastrService, private router: Router, private actionService: ActionService,\n    private jumpbarService: JumpbarService, private readonly cdRef: ChangeDetectorRef, private ngbModal: NgbModal, private titleService: Title) { }\n\n  ngOnInit(): void {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      if (user) {\n        this.isAdmin = this.accountService.hasAdminRole(user);\n        this.loadPage();\n        this.titleService.setTitle('Kavita - ' + translate('side-nav.reading-lists'));\n      }\n    });\n  }\n\n  getActions(readingList: ReadingList) {\n    return this.actionFactoryService.getReadingListActions(this.handleReadingListActionCallback.bind(this))\n      .filter(action => this.readingListService.actionListFilter(action, readingList, this.isAdmin));\n  }\n\n  performAction(action: ActionItem<ReadingList>, readingList: ReadingList) {\n    if (typeof action.callback === 'function') {\n      action.callback(action, readingList);\n    }\n  }\n\n  performGlobalAction(action: ActionItem<any>) {\n    if (typeof action.callback === 'function') {\n      action.callback(action, undefined);\n    }\n  }\n\n  importCbl() {\n    const ref = this.ngbModal.open(ImportCblModalComponent, {size: 'xl', fullscreen: 'md'});\n    ref.closed.subscribe(result => this.loadPage());\n    ref.dismissed.subscribe(_ => this.loadPage());\n  }\n\n  handleReadingListActionCallback(action: ActionItem<ReadingList>, readingList: ReadingList) {\n    switch(action.action) {\n      case Action.Delete:\n        this.readingListService.delete(readingList.id).subscribe(() => {\n          this.toastr.success(this.translocoService.translate('toasts.reading-list-deleted'));\n          this.loadPage();\n        });\n        break;\n      case Action.Edit:\n        this.actionService.editReadingList(readingList, (updatedList: ReadingList) => {\n          // Reload information around list\n          readingList = updatedList;\n          this.cdRef.markForCheck();\n        });\n        break;\n    }\n  }\n\n  getPage() {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('page');\n  }\n\n  loadPage() {\n    const page = this.getPage();\n    if (page != null) {\n      this.pagination.currentPage = parseInt(page, 10);\n    }\n    this.loadingLists = true;\n    this.cdRef.markForCheck();\n\n    this.readingListService.getReadingLists(true, false).pipe(take(1)).subscribe((readingLists: PaginatedResult<ReadingList[]>) => {\n      this.lists = readingLists.result;\n      this.pagination = readingLists.pagination;\n      this.jumpbarKeys = this.jumpbarService.getJumpKeys(readingLists.result, (rl: ReadingList) => rl.title);\n      this.loadingLists = false;\n      this.actions = {};\n      this.lists.forEach(l => this.actions[l.id] = this.getActions(l));\n      this.cdRef.markForCheck();\n    });\n  }\n\n  handleClick(list: ReadingList) {\n    this.router.navigateByUrl('lists/' + list.id);\n  }\n}\n", "<ng-container *transloco=\"let t; read: 'reading-lists'\">\n  <app-side-nav-companion-bar>\n    <h2 title>\n      <app-card-actionables [actions]=\"globalActions\" (actionHandler)=\"performGlobalAction($event)\"></app-card-actionables>\n      <span>{{t('title')}}</span>\n    </h2>\n    <h6 subtitle class=\"subtitle-with-actionables\" *ngIf=\"pagination\">{{t('item-count', {num: pagination.totalItems | number})}}</h6>\n  </app-side-nav-companion-bar>\n\n  <app-card-detail-layout\n    [isLoading]=\"loadingLists\"\n    [items]=\"lists\"\n    [pagination]=\"pagination\"\n    [jumpBarKeys]=\"jumpbarKeys\"\n    [filteringDisabled]=\"true\"\n    [trackByIdentity]=\"trackByIdentity\"\n  >\n    <ng-template #cardItem let-item let-position=\"idx\" >\n      <app-card-item [title]=\"item.title\" [entity]=\"item\" [actions]=\"actions[item.id]\"\n                     [suppressLibraryLink]=\"true\" [imageUrl]=\"imageService.getReadingListCoverImage(item.id)\"\n                     (clicked)=\"handleClick(item)\"></app-card-item>\n    </ng-template>\n\n    <ng-template #noData>\n      {{t('no-data')}} {{t('create-one-part-1')}} <a [href]=\"WikiLink.ReadingLists\" rel=\"noopener noreferrer\" target=\"_blank\">{{t('create-one-part-2')}}<i class=\"fa fa-external-link-alt ms-1\" aria-hidden=\"true\"></i></a>.\n    </ng-template>\n  </app-card-detail-layout>\n\n</ng-container>\n", "import { Routes } from \"@angular/router\";\nimport { ReadingListDetailComponent } from \"../reading-list/_components/reading-list-detail/reading-list-detail.component\";\nimport { ReadingListsComponent } from \"../reading-list/_components/reading-lists/reading-lists.component\";\n\n\nexport const routes: Routes = [\n  {path: '', component: ReadingListsComponent, pathMatch: 'full'},\n  {path: ':id', component: ReadingListDetailComponent, pathMatch: 'full'},\n];\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "performAction", "\u0275\u0275elementEnd", "\u0275\u0275property", "actions", "\u0275\u0275text", "\u0275\u0275element", "_r5", "updateAccessibilityMode", "\u0275\u0275advance", "accessibilityMode", "\u0275\u0275textInterpolate", "t_r6", "_r3", "offcanvas_r4", "$implicit", "dismiss", "removeRead", "\u0275\u0275template", "ReadingListDetailComponent_ng_container_0_ng_template_9_div_0_div_13_Template", "readingList", "promoted", "isAdmin", "\u0275\u0275textInterpolate1", "ReadingListDetailComponent_ng_container_0_ng_template_9_div_0_Template", "\u0275\u0275elementContainerStart", "\u0275\u0275pipeBind2", "startingMonth", "startingYear", "endingMonth", "endingYear", "ReadingListDetailComponent_ng_container_0_div_11_div_41_ng_container_6_ng_container_1_Template", "ReadingListDetailComponent_ng_container_0_div_11_div_41_ng_container_6_ng_container_2_Template", "ReadingListDetailComponent_ng_container_0_div_11_div_41_ng_container_6_ng_container_3_Template", "ReadingListDetailComponent_ng_container_0_div_11_div_41_ng_container_2_Template", "ReadingListDetailComponent_ng_container_0_div_11_div_41_ng_container_3_Template", "ReadingListDetailComponent_ng_container_0_div_11_div_41_ng_container_4_Template", "ReadingListDetailComponent_ng_container_0_div_11_div_41_ng_container_6_Template", "item_r9", "_r8", "goToCharacter", "ReadingListDetailComponent_ng_container_0_div_11_ng_container_44_div_2_ng_template_4_Template", "\u0275\u0275templateRefExtractor", "characters_r10", "ReadingListDetailComponent_ng_container_0_div_11_ng_container_44_div_2_Template", "length", "isLoading", "ReadingListDetailComponent_ng_container_0_div_11_ng_template_49_app_loading_0_Template", "_r11", "readChapter", "position_r12", "idx", "itemRemoved", "\u0275\u0275pureFunction2", "_c1", "items", "item_r13", "libraryTypes", "_r7", "continue", "read", "ReadingListDetailComponent_ng_container_0_div_11_div_41_Template", "ReadingListDetailComponent_ng_container_0_div_11_ng_container_44_Template", "ReadingListDetailComponent_ng_container_0_div_11_ng_container_48_Template", "ReadingListDetailComponent_ng_container_0_div_11_ng_template_49_Template", "orderUpdated", "ReadingListDetailComponent_ng_container_0_div_11_ng_template_52_Template", "imageService", "getReadingListCoverImage", "id", "readingListSummary", "\u0275\u0275pipeBind1", "characters$", "loading_r14", "ReadingListDetailComponent_ng_container_0_app_card_actionables_3_Template", "ReadingListDetailComponent_ng_container_0_span_5_Template", "ReadingListDetailComponent_ng_container_0_ng_template_9_Template", "ReadingListDetailComponent_ng_container_0_div_11_Template", "undefined", "extrasDrawer_r15", "title", "\u0275\u0275pureFunction1", "_c0", "ReadingListDetailComponent", "constructor", "route", "router", "readingListService", "actionService", "actionFactoryService", "utilityService", "accountService", "toastr", "confirmService", "libraryService", "readerService", "cdRef", "filterUtilityService", "titleService", "translocoService", "inject", "TranslocoService", "MangaFormat", "ngOnInit", "listId", "snapshot", "paramMap", "get", "navigateByUrl", "parseInt", "getCharacters", "forkJoin", "getLibraries", "getReadingList", "subscribe", "results", "libraries", "setTitle", "forEach", "lib", "type", "error", "translate", "summary", "replace", "markForCheck", "currentUser$", "pipe", "take", "user", "hasAdminRole", "getReadingListActions", "handleReadingListActionCallback", "bind", "filter", "action", "actionListFilter", "getListItems", "callback", "item", "params", "getQueryParamsObject", "navigate", "getNavigationArray", "libraryId", "seriesId", "chapterId", "seriesFormat", "queryParams", "__async", "Action", "Delete", "deleteList", "Edit", "editReadingList", "rl", "confirm", "delete", "success", "event", "updatePosition", "fromPosition", "toPosition", "position", "deleteItem", "splice", "resp", "info", "incognitoMode", "firstItem", "readingListId", "currentlyReadingChapter", "i", "pagesRead", "pagesTotal", "character", "applyFilter", "FilterField", "Characters", "FilterComparison", "Contains", "\u0275\u0275directiveInject", "ActivatedRoute", "Router", "ReadingListService", "ActionService", "ActionFactoryService", "UtilityService", "ImageService", "AccountService", "ToastrService", "ConfirmService", "LibraryService", "ReaderService", "ChangeDetectorRef", "FilterUtilitiesService", "Title", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ReadingListDetailComponent_ng_container_0_Template", "SideNavCompanionBarComponent", "NgIf", "CardActionablesComponent", "ImageComponent", "NgbDropdown", "NgbDropdownToggle", "NgbDropdownMenu", "NgbDropdownItem", "ReadMoreComponent", "BadgeExpanderComponent", "PersonBadgeComponent", "A11yClickDirective", "LoadingComponent", "DraggableOrderedListComponent", "ReadingListItemComponent", "NgClass", "AsyncPipe", "DecimalPipe", "DatePipe", "TranslocoDirective", "styles", "changeDetection", "_ReadingListDetailComponent", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "t_r3", "\u0275\u0275pureFunction1", "_c0", "\u0275\u0275pipeBind1", "ctx_r1", "pagination", "totalItems", "\u0275\u0275listener", "item_r5", "\u0275\u0275restoreView", "_r4", "$implicit", "\u0275\u0275nextContext", "\u0275\u0275resetView", "handleClick", "\u0275\u0275property", "title", "actions", "id", "imageService", "getReadingListCoverImage", "\u0275\u0275element", "\u0275\u0275textInterpolate2", "WikiLink", "ReadingLists", "\u0275\u0275sanitizeUrl", "\u0275\u0275elementContainerStart", "$event", "_r1", "performGlobalAction", "\u0275\u0275template", "ReadingListsComponent_ng_container_0_h6_6_Template", "ReadingListsComponent_ng_container_0_ng_template_8_Template", "\u0275\u0275templateRefExtractor", "ReadingListsComponent_ng_container_0_ng_template_10_Template", "globalActions", "loadingLists", "lists", "jumpbarKeys", "trackByIdentity", "ReadingListsComponent", "constructor", "readingListService", "actionFactoryService", "accountService", "toastr", "router", "actionService", "jumpbarService", "cdRef", "ngbModal", "titleService", "isAdmin", "action", "Action", "Import", "children", "requiresAdmin", "callback", "importCbl", "bind", "index", "item", "translocoService", "inject", "TranslocoService", "ngOnInit", "currentUser$", "pipe", "take", "subscribe", "user", "hasAdminRole", "loadPage", "setTitle", "translate", "getActions", "readingList", "getReadingListActions", "handleReadingListActionCallback", "filter", "actionListFilter", "performAction", "undefined", "ref", "open", "ImportCblModalComponent", "size", "fullscreen", "closed", "result", "dismissed", "_", "Delete", "delete", "success", "Edit", "editReadingList", "updatedList", "markForCheck", "getPage", "URLSearchParams", "window", "location", "search", "get", "page", "currentPage", "parseInt", "getReadingLists", "readingLists", "getJumpKeys", "rl", "forEach", "l", "list", "navigateByUrl", "\u0275\u0275directiveInject", "ReadingListService", "ImageService", "ActionFactoryService", "AccountService", "ToastrService", "Router", "ActionService", "JumpbarService", "ChangeDetectorRef", "NgbModal", "Title", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ReadingListsComponent_ng_container_0_Template", "SideNavCompanionBarComponent", "CardActionablesComponent", "NgIf", "CardDetailLayoutComponent", "CardItemComponent", "DecimalPipe", "TranslocoDirective", "styles", "changeDetection", "_ReadingListsComponent", "routes", "path", "component", "ReadingListsComponent", "pathMatch", "ReadingListDetailComponent"]
}
