{
  "version": 3,
  "sources": ["src/app/all-filters/all-filters.component.ts", "src/app/all-filters/all-filters.component.html", "src/app/_routes/all-filters-routing.module.ts"],
  "sourcesContent": ["import {ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, inject, OnInit} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {JumpKey} from \"../_models/jumpbar/jump-key\";\nimport {EVENTS, Message, MessageHubService} from \"../_services/message-hub.service\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {CardItemComponent} from \"../cards/card-item/card-item.component\";\nimport {\n  SideNavCompanionBarComponent\n} from \"../sidenav/_components/side-nav-companion-bar/side-nav-companion-bar.component\";\nimport {SmartFilter} from \"../_models/metadata/v2/smart-filter\";\nimport {FilterService} from \"../_services/filter.service\";\nimport {CardDetailLayoutComponent} from \"../cards/card-detail-layout/card-detail-layout.component\";\nimport {SafeHtmlPipe} from \"../_pipes/safe-html.pipe\";\nimport {Router} from \"@angular/router\";\nimport {Series} from \"../_models/series\";\nimport {JumpbarService} from \"../_services/jumpbar.service\";\n\n@Component({\n  selector: 'app-all-filters',\n  standalone: true,\n  imports: [CommonModule, TranslocoDirective, CardItemComponent, SideNavCompanionBarComponent, CardDetailLayoutComponent, SafeHtmlPipe],\n  templateUrl: './all-filters.component.html',\n  styleUrl: './all-filters.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AllFiltersComponent implements OnInit {\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly jumpbarService = inject(JumpbarService);\n  private readonly router = inject(Router);\n  private readonly filterService = inject(FilterService);\n\n  jumpbarKeys: Array<JumpKey> = [];\n  filters: SmartFilter[] = [];\n  isLoading = true;\n  trackByIdentity = (index: number, item: SmartFilter) => item.name;\n\n  ngOnInit() {\n    this.filterService.getAllFilters().subscribe(filters => {\n      this.filters = filters;\n      this.jumpbarKeys = this.jumpbarService.getJumpKeys(this.filters, (s: Series) => s.name);\n      this.isLoading = false;\n      this.cdRef.markForCheck();\n    });\n  }\n\n  async loadSmartFilter(filter: SmartFilter) {\n    await this.router.navigateByUrl('all-series?' + filter.filter);\n  }\n\n  isErrored(filter: SmartFilter) {\n    return !decodeURIComponent(filter.filter).includes('Â¦');\n  }\n\n}\n", "<ng-container *transloco=\"let t; read: 'all-filters'\">\n  <app-side-nav-companion-bar [hasFilter]=\"false\">\n    <h2 title>\n      {{t('title')}}\n    </h2>\n    <h6 subtitle >{{t('count', {count: filters.length | number})}}</h6>\n  </app-side-nav-companion-bar>\n  <app-card-detail-layout\n                          [isLoading]=\"isLoading\"\n                          [items]=\"filters\"\n                          [trackByIdentity]=\"trackByIdentity\"\n                          [jumpBarKeys]=\"jumpbarKeys\"\n  >\n    <ng-template #cardItem let-item let-position=\"idx\">\n      <!-- TODO: figure a way to get a hover effect -->\n      <div class=\"card-item-container card clickable\" (click)=\"loadSmartFilter(item)\">\n        <div class=\"overlay\">\n          <div class=\"card-overlay\"></div>\n          <div class=\"overlay-information overlay-information--centered\">\n            <div class=\"position-relative\">\n            <span class=\"card-title library mx-auto\" style=\"width: auto;\">\n              <i class=\"fa-solid fa-filter\" style=\"font-size: 26px;\" [ngClass]=\"{'error': isErrored(item)}\" aria-hidden=\"true\"></i>\n            </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <span class=\"card-title\">{{item.name}}</span>\n        </div>\n      </div>\n    </ng-template>\n  </app-card-detail-layout>\n\n</ng-container>\n", "import {Routes} from \"@angular/router\";\nimport {AllFiltersComponent} from \"../all-filters/all-filters.component\";\n\n\nexport const routes: Routes = [\n  {path: '', component: AllFiltersComponent, pathMatch: 'full'},\n];\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275listener", "item_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "loadSmartFilter", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c1", "isErrored", "\u0275\u0275textInterpolate", "name", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "AllFiltersComponent_ng_container_0_ng_template_8_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275textInterpolate1", "t_r4", "_c0", "\u0275\u0275pipeBind1", "filters", "length", "isLoading", "trackByIdentity", "jumpbarKeys", "AllFiltersComponent", "constructor", "cdRef", "inject", "ChangeDetectorRef", "jumpbarService", "JumpbarService", "router", "Router", "filterService", "FilterService", "index", "item", "ngOnInit", "getAllFilters", "subscribe", "getJumpKeys", "s", "markForCheck", "filter", "__async", "navigateByUrl", "decodeURIComponent", "includes", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "AllFiltersComponent_ng_container_0_Template", "CommonModule", "NgClass", "DecimalPipe", "TranslocoDirective", "SideNavCompanionBarComponent", "CardDetailLayoutComponent", "styles", "changeDetection", "_AllFiltersComponent", "routes", "path", "component", "AllFiltersComponent", "pathMatch"]
}
