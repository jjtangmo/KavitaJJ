{
  "version": 3,
  "sources": ["src/app/announcements/_components/changelog/changelog.component.ts", "src/app/announcements/_components/changelog/changelog.component.html"],
  "sourcesContent": ["import {ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, OnInit} from '@angular/core';\nimport {UpdateVersionEvent} from 'src/app/_models/events/update-version-event';\nimport {ServerService} from 'src/app/_services/server.service';\nimport {LoadingComponent} from '../../../shared/loading/loading.component';\nimport {ReadMoreComponent} from '../../../shared/read-more/read-more.component';\nimport {DatePipe, NgFor, NgIf} from '@angular/common';\nimport {TranslocoDirective} from \"@ngneat/transloco\";\n\n@Component({\n  selector: 'app-changelog',\n  templateUrl: './changelog.component.html',\n  styleUrls: ['./changelog.component.scss'],\n  standalone: true,\n  imports: [NgFor, NgIf, ReadMoreComponent, LoadingComponent, DatePipe, TranslocoDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChangelogComponent implements OnInit {\n\n  private readonly serverService = inject(ServerService);\n  private readonly cdRef = inject(ChangeDetectorRef);\n  updates: Array<UpdateVersionEvent> = [];\n  isLoading: boolean = true;\n\n  ngOnInit(): void {\n    this.serverService.getChangelog().subscribe(updates => {\n      this.updates = updates;\n      this.isLoading = false;\n      this.cdRef.markForCheck();\n    });\n  }\n}\n", "<ng-container *transloco=\"let t; read: 'changelog'\">\n  <div class=\"changelog\">\n    <p class=\"pb-2\">\n      {{t('description', {installed: ''})}}\n      <span class=\"badge bg-secondary\">{{t('installed')}}</span>\n      {{t('description-continued', {installed: ''})}}\n    </p>\n    <ng-container *ngFor=\"let update of updates; let indx = index;\">\n      <div class=\"card w-100 mb-2\" style=\"width: 18rem;\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title\">{{update.updateTitle}}&nbsp;\n            @if (update.isOnNightlyInRelease) {\n              <span class=\"badge bg-secondary\">{{t('nightly', {version: update.currentVersion})}}</span>\n            } @else if (update.isReleaseEqual) {\n              <span class=\"badge bg-secondary\">{{t('installed')}}</span>\n            } @else if (update.isReleaseNewer && indx === 0) {\n              <span class=\"badge bg-secondary\">{{t('available')}}</span>\n            }\n          </h4>\n          <h6 class=\"card-subtitle mb-1 mt-1 text-muted\">{{t('published-label')}}{{update.publishDate | date: 'short'}}</h6>\n\n\n          <pre class=\"card-text update-body\">\n            <app-read-more [text]=\"update.updateBody\" [maxLength]=\"500\"></app-read-more>\n          </pre>\n          <a *ngIf=\"!update.isDocker && update.updateVersion === update.currentVersion\" href=\"{{update.updateUrl}}\" class=\"btn disabled btn-{{indx === 0 ? 'primary' : 'secondary'}} float-end\" target=\"_blank\" rel=\"noopener noreferrer\">{{t('installed')}}</a>\n          <a *ngIf=\"!update.isDocker && update.updateVersion !== update.currentVersion\" href=\"{{update.updateUrl}}\" class=\"btn btn-{{indx === 0 ? 'primary' : 'secondary'}} float-end\" target=\"_blank\" rel=\"noopener noreferrer\">{{t('download')}}</a>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n\n  <app-loading [loading]=\"isLoading\"></app-loading>\n\n</ng-container>\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "t_r2", "\u0275\u0275pureFunction1", "_c1", "update_r1", "currentVersion", "\u0275\u0275classMapInterpolate1", "indx_r4", "\u0275\u0275propertyInterpolate", "updateUrl", "\u0275\u0275sanitizeUrl", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "ChangelogComponent_ng_container_0_ng_container_7_Conditional_5_Template", "ChangelogComponent_ng_container_0_ng_container_7_Conditional_6_Template", "ChangelogComponent_ng_container_0_ng_container_7_Conditional_7_Template", "\u0275\u0275element", "ChangelogComponent_ng_container_0_ng_container_7_a_15_Template", "ChangelogComponent_ng_container_0_ng_container_7_a_16_Template", "\u0275\u0275textInterpolate1", "updateTitle", "\u0275\u0275conditional", "isOnNightlyInRelease", "isReleaseEqual", "isReleaseNewer", "\u0275\u0275textInterpolate2", "\u0275\u0275pipeBind2", "publishDate", "\u0275\u0275property", "updateBody", "isDocker", "updateVersion", "ChangelogComponent_ng_container_0_ng_container_7_Template", "\u0275\u0275pureFunction0", "_c0", "ctx_r4", "updates", "isLoading", "ChangelogComponent", "constructor", "serverService", "inject", "ServerService", "cdRef", "ChangeDetectorRef", "ngOnInit", "getChangelog", "subscribe", "markForCheck", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ChangelogComponent_ng_container_0_Template", "NgFor", "NgIf", "ReadMoreComponent", "LoadingComponent", "DatePipe", "TranslocoDirective", "styles", "changeDetection", "_ChangelogComponent"]
}
