{
  "version": 3,
  "sources": ["src/app/_models/device/device-platform.ts", "src/app/_pipes/device-platform.pipe.ts", "src/app/user-settings/edit-device/edit-device.component.ts", "src/app/user-settings/edit-device/edit-device.component.html", "src/app/user-settings/manage-devices/manage-devices.component.ts", "src/app/user-settings/manage-devices/manage-devices.component.html"],
  "sourcesContent": ["export enum DevicePlatform {\n    Custom = 0,\n    PocketBook = 1,\n    Kindle = 2,\n    Kobo = 3\n}\n\nexport const devicePlatforms = [DevicePlatform.Custom, DevicePlatform.Kindle, DevicePlatform.Kobo, DevicePlatform.PocketBook];", "import {inject, Pipe, PipeTransform} from '@angular/core';\nimport { DevicePlatform } from 'src/app/_models/device/device-platform';\nimport {TranslocoService} from \"@ngneat/transloco\";\n\n@Pipe({\n    name: 'devicePlatform',\n    standalone: true\n})\nexport class DevicePlatformPipe implements PipeTransform {\n\n  translocoService = inject(TranslocoService);\n\n  transform(value: DevicePlatform): string {\n    switch(value) {\n      case DevicePlatform.Kindle: return 'Kindle';\n      case DevicePlatform.Kobo: return 'Kobo';\n      case DevicePlatform.PocketBook: return 'PocketBook';\n      case DevicePlatform.Custom: return this.translocoService.translate('device-platform-pipe.custom');\n      default: return value + '';\n    }\n  }\n\n}\n", "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  EventEmitter,\n  inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Device } from 'src/app/_models/device/device';\nimport { DevicePlatform, devicePlatforms } from 'src/app/_models/device/device-platform';\nimport { DeviceService } from 'src/app/_services/device.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport { DevicePlatformPipe } from '../../_pipes/device-platform.pipe';\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\nimport {NgIf, NgFor, NgTemplateOutlet} from '@angular/common';\nimport {translate, TranslocoModule} from \"@ngneat/transloco\";\n\n@Component({\n    selector: 'app-edit-device',\n    templateUrl: './edit-device.component.html',\n    styleUrls: ['./edit-device.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n  imports: [ReactiveFormsModule, NgIf, NgbTooltip, NgFor, DevicePlatformPipe, TranslocoModule, NgTemplateOutlet]\n})\nexport class EditDeviceComponent implements OnInit, OnChanges {\n\n  @Input() device: Device | undefined;\n\n  @Output() deviceAdded: EventEmitter<void> = new EventEmitter();\n  @Output() deviceUpdated: EventEmitter<Device> = new EventEmitter();\n  private readonly destroyRef = inject(DestroyRef);\n\n  settingsForm: FormGroup = new FormGroup({});\n  devicePlatforms = devicePlatforms;\n\n\n  constructor(public deviceService: DeviceService, private toastr: ToastrService,\n    private readonly cdRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n\n    this.settingsForm.addControl('name', new FormControl(this.device?.name || '', [Validators.required]));\n    this.settingsForm.addControl('email', new FormControl(this.device?.emailAddress || '', [Validators.required, Validators.email]));\n    this.settingsForm.addControl('platform', new FormControl(this.device?.platform || DevicePlatform.Custom, [Validators.required]));\n\n    // If user has filled in email and the platform hasn't been explicitly updated, try to update it for them\n    this.settingsForm.get('email')?.valueChanges.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(email => {\n      if (this.settingsForm.get('platform')?.dirty) return;\n      if (email === null || email === undefined || email === '') return;\n      if (email.endsWith('@kindle.com')) this.settingsForm.get('platform')?.setValue(DevicePlatform.Kindle);\n      else if (email.endsWith('@pbsync.com')) this.settingsForm.get('platform')?.setValue(DevicePlatform.PocketBook);\n      else this.settingsForm.get('platform')?.setValue(DevicePlatform.Custom);\n      this.cdRef.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.device) {\n      this.settingsForm.get('name')?.setValue(this.device.name);\n      this.settingsForm.get('email')?.setValue(this.device.emailAddress);\n      this.settingsForm.get('platform')?.setValue(this.device.platform);\n      this.cdRef.markForCheck();\n      this.settingsForm.markAsPristine();\n    }\n  }\n\n  addDevice() {\n    if (this.device !== undefined) {\n      this.deviceService.updateDevice(this.device.id, this.settingsForm.value.name, parseInt(this.settingsForm.value.platform, 10), this.settingsForm.value.email).subscribe(() => {\n        this.settingsForm.reset();\n        this.toastr.success(translate('toasts.device-updated'));\n        this.cdRef.markForCheck();\n        this.deviceUpdated.emit();\n      })\n      return;\n    }\n\n    this.deviceService.createDevice(this.settingsForm.value.name, parseInt(this.settingsForm.value.platform, 10), this.settingsForm.value.email).subscribe(() => {\n      this.settingsForm.reset();\n      this.toastr.success(translate('toasts.device-created'));\n      this.cdRef.markForCheck();\n      this.deviceAdded.emit();\n    });\n  }\n\n}\n", "<ng-container *transloco=\"let t; read:'edit-device'\">\n  <div class=\"card\">\n    <form [formGroup]=\"settingsForm\" class=\"card-body\">\n      <div class=\"row g-0 mb-2\">\n        <div class=\"col-md-3 col-sm-12 pe-2\">\n          <label for=\"settings-name\" class=\"form-label\">{{t('device-name-label')}}</label>\n          <input id=\"settings-name\" class=\"form-control\" formControlName=\"name\" type=\"text\" [class.is-invalid]=\"settingsForm.get('name')?.invalid && settingsForm.get('name')?.touched\">\n          <ng-container *ngIf=\"settingsForm.get('name')?.errors as errors\">\n            <p class=\"invalid-feedback\" *ngIf=\"errors.required\">\n              {{t('required-field')}}\n            </p>\n          </ng-container>\n        </div>\n\n        <div class=\"col-md-3 col-sm-12 pe-2\">\n          <label for=\"email\" class=\"form-label\">{{t('email-label')}}</label><i class=\"fa fa-info-circle ms-1\" placement=\"right\" [ngbTooltip]=\"emailTooltip\" role=\"button\" tabindex=\"0\"></i>\n          <ng-template #emailTooltip>{{t('email-tooltip')}}</ng-template>\n          <span class=\"visually-hidden\" id=\"email-help\">\n            <ng-container [ngTemplateOutlet]=\"emailTooltip\"></ng-container>\n          </span>\n\n          <input id=\"email\" aria-describedby=\"email-help\"\n                 class=\"form-control\" formControlName=\"email\" type=\"email\" inputmode=\"email\"\n                 placeholder=\"id@kindle.com\" [class.is-invalid]=\"settingsForm.get('email')?.invalid && settingsForm.get('email')?.touched\">\n          <ng-container *ngIf=\"settingsForm.get('email')?.errors as errors\">\n            <p class=\"invalid-feedback\" *ngIf=\"errors.email\">\n              {{t('valid-email')}}\n            </p>\n            <p class=\"invalid-feedback\" *ngIf=\"errors.required\">\n              {{t('required-field')}}\n            </p>\n          </ng-container>\n        </div>\n\n        <div class=\"col-md-3 col-sm-12 pe-2\">\n          <label for=\"device-platform\" class=\"form-label\">{{t('device-platform-label')}}</label>\n          <select id=\"device-platform\" aria-describedby=\"device-platform-help\" class=\"form-select\" formControlName=\"platform\"\n                  [class.is-invalid]=\"settingsForm.get('platform')?.invalid && settingsForm.get('platform')?.touched\">\n            <option *ngFor=\"let platform of devicePlatforms\" [value]=\"platform\">{{platform | devicePlatform}}</option>\n          </select>\n          <ng-container *ngIf=\"settingsForm.get('platform')?.errors as errors\">\n            <p class=\"invalid-feedback\" *ngIf=\"errors.required\">\n              {{t('required-field')}}\n            </p>\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"col-auto d-flex d-md-block justify-content-sm-center text-md-end\">\n        <button type=\"submit\" class=\"flex-fill btn btn-primary\" (click)=\"addDevice()\" [disabled]=\"!settingsForm.dirty\">{{t('save')}}</button>\n      </div>\n    </form>\n  </div>\n</ng-container>\n", "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  inject,\n  OnInit\n} from '@angular/core';\nimport { Device } from 'src/app/_models/device/device';\nimport { DeviceService } from 'src/app/_services/device.service';\nimport { DevicePlatformPipe } from '../../_pipes/device-platform.pipe';\nimport { SentenceCasePipe } from '../../_pipes/sentence-case.pipe';\nimport { NgIf, NgFor } from '@angular/common';\nimport { EditDeviceComponent } from '../edit-device/edit-device.component';\nimport { NgbCollapse } from '@ng-bootstrap/ng-bootstrap';\nimport {translate, TranslocoDirective} from \"@ngneat/transloco\";\nimport {SettingsService} from \"../../admin/settings.service\";\nimport {ConfirmService} from \"../../shared/confirm.service\";\n\n@Component({\n    selector: 'app-manage-devices',\n    templateUrl: './manage-devices.component.html',\n    styleUrls: ['./manage-devices.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [NgbCollapse, EditDeviceComponent, NgIf, NgFor, SentenceCasePipe, DevicePlatformPipe, TranslocoDirective]\n})\nexport class ManageDevicesComponent implements OnInit {\n\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly deviceService = inject(DeviceService);\n  private readonly settingsService = inject(SettingsService);\n  private readonly confirmService = inject(ConfirmService);\n\n  devices: Array<Device> = [];\n  addDeviceIsCollapsed: boolean = true;\n  device: Device | undefined;\n  hasEmailSetup = false;\n\n  ngOnInit(): void {\n    this.settingsService.isEmailSetup().subscribe(res => {\n      this.hasEmailSetup = res;\n      this.cdRef.markForCheck();\n    });\n    this.loadDevices();\n  }\n\n\n  loadDevices() {\n    this.addDeviceIsCollapsed = true;\n    this.device = undefined;\n    this.cdRef.markForCheck();\n    this.deviceService.getDevices().subscribe(devices => {\n      this.devices = devices;\n      this.cdRef.markForCheck();\n    });\n  }\n\n  async deleteDevice(device: Device) {\n    if (!await this.confirmService.confirm(translate('toasts.delete-device'))) return;\n    this.deviceService.deleteDevice(device.id).subscribe(() => {\n      const index = this.devices.indexOf(device);\n      this.devices.splice(index, 1);\n      this.cdRef.markForCheck();\n    });\n  }\n\n  editDevice(device: Device) {\n    this.device = device;\n    this.addDeviceIsCollapsed = false;\n    this.cdRef.markForCheck();\n  }\n}\n", "<ng-container *transloco=\"let t; read:'manage-devices'\">\n  <div class=\"container-fluid\">\n    <div class=\"row mb-2\">\n      <div class=\"col-8\"><h3>{{t('title')}}</h3></div>\n      <div class=\"col-4\">\n        <button class=\"btn btn-primary float-end\" (click)=\"collapse.toggle()\" [attr.aria-expanded]=\"!addDeviceIsCollapsed\"\n                aria-controls=\"collapseExample\">\n          <i class=\"fa fa-plus me-1\" aria-hidden=\"true\"></i>{{t('add')}}\n        </button>\n      </div>\n    </div>\n\n    <p>\n      {{t('description')}}\n    </p>\n\n    @if(hasEmailSetup) {\n      <div class=\"alert alert-warning\" role=\"alert\">{{t('email-setup-alert')}}</div>\n    }\n\n    <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"addDeviceIsCollapsed\">\n      <app-edit-device [device]=\"device\" (deviceAdded)=\"loadDevices()\" (deviceUpdated)=\"loadDevices()\"></app-edit-device>\n    </div>\n\n    <div class=\"row g-0 mt-2\">\n      <h4>{{t('devices-title')}}</h4>\n      <p *ngIf=\"devices.length === 0\">\n        {{t('no-devices')}}\n      </p>\n      <ng-container *ngFor=\"let device of devices\">\n        <div class=\"card col-auto me-3 mb-3\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{device.name | sentenceCase}}</h5>\n            {{t('platform-label')}}<h6 class=\"card-subtitle mb-2 text-muted\">{{device.platform | devicePlatform}}</h6>\n            {{t('email-label')}}<h6 class=\"card-subtitle mb-2 text-muted\">{{device.emailAddress}}</h6>\n\n            <button class=\"btn btn-danger me-2\" (click)=\"deleteDevice(device)\">{{t('delete')}}</button>\n            <button class=\"btn btn-primary\" (click)=\"editDevice(device)\">{{t('edit')}}</button>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n\n</ng-container>\n"],
  "mappings": "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",
  "names": ["DevicePlatform", "devicePlatforms", "Custom", "Kindle", "Kobo", "PocketBook", "DevicePlatformPipe", "constructor", "translocoService", "inject", "TranslocoService", "transform", "value", "DevicePlatform", "Kindle", "Kobo", "PocketBook", "Custom", "translate", "pure", "standalone", "_DevicePlatformPipe", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "t_r2", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "EditDeviceComponent_ng_container_0_ng_container_8_p_1_Template", "\u0275\u0275property", "errors_r3", "required", "\u0275\u0275textInterpolate", "EditDeviceComponent_ng_container_0_ng_container_18_p_1_Template", "EditDeviceComponent_ng_container_0_ng_container_18_p_2_Template", "errors_r4", "email", "platform_r5", "\u0275\u0275pipeBind1", "EditDeviceComponent_ng_container_0_ng_container_24_p_1_Template", "errors_r6", "\u0275\u0275element", "EditDeviceComponent_ng_container_0_ng_container_8_Template", "EditDeviceComponent_ng_container_0_ng_template_13_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275elementContainer", "EditDeviceComponent_ng_container_0_ng_container_18_Template", "EditDeviceComponent_ng_container_0_option_23_Template", "EditDeviceComponent_ng_container_0_ng_container_24_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r6", "\u0275\u0275nextContext", "\u0275\u0275resetView", "addDevice", "settingsForm", "\u0275\u0275classProp", "tmp_5_0", "get", "invalid", "touched", "tmp_6_0", "errors", "emailTooltip_r8", "tmp_10_0", "tmp_11_0", "tmp_13_0", "devicePlatforms", "tmp_15_0", "dirty", "EditDeviceComponent", "constructor", "deviceService", "toastr", "cdRef", "deviceAdded", "EventEmitter", "deviceUpdated", "destroyRef", "inject", "DestroyRef", "FormGroup", "ngOnInit", "addControl", "FormControl", "device", "name", "Validators", "emailAddress", "platform", "DevicePlatform", "Custom", "valueChanges", "pipe", "takeUntilDestroyed", "subscribe", "endsWith", "setValue", "Kindle", "PocketBook", "markForCheck", "ngOnChanges", "changes", "markAsPristine", "undefined", "updateDevice", "id", "value", "parseInt", "reset", "success", "translate", "emit", "createDevice", "\u0275\u0275directiveInject", "DeviceService", "ToastrService", "ChangeDetectorRef", "selectors", "inputs", "outputs", "standalone", "features", "\u0275\u0275NgOnChangesFeature", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "EditDeviceComponent_ng_container_0_Template", "ReactiveFormsModule", "\u0275NgNoValidate", "NgSelectOption", "\u0275NgSelectMultipleOption", "DefaultValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "NgIf", "NgbTooltip", "NgFor", "DevicePlatformPipe", "TranslocoModule", "TranslocoDirective", "NgTemplateOutlet", "styles", "changeDetection", "_EditDeviceComponent", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "t_r3", "\u0275\u0275textInterpolate1", "\u0275\u0275elementContainerStart", "\u0275\u0275listener", "device_r6", "\u0275\u0275restoreView", "_r5", "$implicit", "ctx_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "deleteDevice", "editDevice", "\u0275\u0275pipeBind1", "name", "platform", "emailAddress", "_r1", "collapse_r2", "\u0275\u0275reference", "toggle", "\u0275\u0275element", "\u0275\u0275template", "ManageDevicesComponent_ng_container_0_Conditional_12_Template", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "addDeviceIsCollapsed", "loadDevices", "ManageDevicesComponent_ng_container_0_p_19_Template", "ManageDevicesComponent_ng_container_0_ng_container_20_Template", "\u0275\u0275conditional", "hasEmailSetup", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "device", "devices", "length", "ManageDevicesComponent", "constructor", "cdRef", "inject", "ChangeDetectorRef", "deviceService", "DeviceService", "settingsService", "SettingsService", "confirmService", "ConfirmService", "ngOnInit", "isEmailSetup", "subscribe", "res", "markForCheck", "undefined", "getDevices", "__async", "confirm", "translate", "id", "index", "indexOf", "splice", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ManageDevicesComponent_ng_container_0_Template", "NgbCollapse", "EditDeviceComponent", "NgIf", "NgFor", "SentenceCasePipe", "DevicePlatformPipe", "TranslocoDirective", "styles", "changeDetection", "_ManageDevicesComponent"]
}
