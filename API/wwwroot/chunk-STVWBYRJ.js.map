{"version":3,"sources":["src/app/_pipes/default-value.pipe.ts","node_modules/@ngneat/transloco-locale/fesm2022/ngneat-transloco-locale.mjs"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'defaultValue',\n  pure: true,\n  standalone: true\n})\nexport class DefaultValuePipe implements PipeTransform {\n\n  transform(value: any, replacementString = 'â€”'): string {\n    if (value === null || value === undefined || value === '' || value === Infinity || Number.isNaN(value)) return replacementString;\n    return value;\n  }\n\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injectable, ChangeDetectorRef, Pipe, NgModule, makeEnvironmentProviders } from '@angular/core';\nimport { toNumber, TranslocoService, isNil } from '@ngneat/transloco';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, filter, distinctUntilChanged } from 'rxjs/operators';\nconst ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n/**\n * check if a given value is in BCP 47 language tag.\n *\n * isLocaleFormat('en') // false,\n * isLocaleFormat('En-us') // false\n * isLocaleFormat('en-US') // true\n */\nfunction isLocaleFormat(val) {\n  const irregulars = `en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE|art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang`;\n  const BCPFormat = `[a-z]{2}-[A-Z]{2}`;\n  const scriptFormat = `[a-z]{2}-[A-Za-z]{4}`;\n  return typeof val === 'string' && !!val.match(RegExp(`(${irregulars})|(${BCPFormat})|(${scriptFormat})`));\n}\nfunction localizeNumber(value, locale, options) {\n  const number = toNumber(value);\n  return number !== null ? new Intl.NumberFormat(locale, options).format(number) : '';\n}\nfunction localizeDate(date, locale, options) {\n  if (isDate(date)) {\n    return new Intl.DateTimeFormat(locale, options).format(date);\n  }\n  return '';\n}\nfunction isDate(value) {\n  return value instanceof Date && !isNaN(value);\n}\nfunction toDate(value) {\n  let match;\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n  if (isDate(value)) {\n    return value;\n  }\n  if (!isNaN(value - parseFloat(value))) {\n    return new Date(parseFloat(value));\n  }\n  if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n    const [y, m, d] = value.split('-').map(val => parseInt(val, 10));\n    return new Date(y, m - 1, d);\n  }\n  if (typeof value === 'string' && (match = value.match(ISO8601_DATE_REGEX))) {\n    return isoStringToDate(match);\n  }\n  return new Date(value);\n}\nfunction isoStringToDate(match) {\n  const date = new Date(0);\n  let tzHour = 0;\n  let tzMin = 0;\n  const dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n  const timeSetter = match[8] ? date.setUTCHours : date.setHours;\n  if (match[9]) {\n    tzHour = +(match[9] + match[10]);\n    tzMin = +(match[9] + match[11]);\n  }\n  dateSetter.call(date, +match[1], +match[2] - 1, +match[3]);\n  const h = +(match[4] || '0') - tzHour;\n  const m = +(match[5] || '0') - tzMin;\n  const s = +(match[6] || '0');\n  const ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n  timeSetter.call(date, h, m, s, ms);\n  return date;\n}\nfunction getDefaultOptions(locale, style, localeConfig) {\n  const defaultConfig = localeConfig.global?.[style] ?? {};\n  const settings = localeConfig.localeBased?.[locale] ?? {};\n  return Reflect.has(settings, style) ? {\n    ...defaultConfig,\n    ...settings[style]\n  } : defaultConfig;\n}\nvar LOCALE_CURRENCY = {\n  'aa-DJ': 'DJF',\n  'aa-ER': 'ERN',\n  'aa-ET': 'ETB',\n  'ab-GE': 'ETB',\n  'ab-TR': 'ETB',\n  'af-BW': 'ETB',\n  'af-NA': 'ETB',\n  'af-ZA': 'ZAR',\n  'ak-GH': 'ZAR',\n  'am-ET': 'ETB',\n  'am-IL': 'ETB',\n  'ar-AE': 'AED',\n  'ar-AR': 'AED',\n  'ar-BH': 'BHD',\n  'ar-CM': 'BHD',\n  'ar-CY': 'BHD',\n  'ar-DJ': 'BHD',\n  'ar-DZ': 'DZD',\n  'ar-EG': 'EGP',\n  'ar-EH': 'EGP',\n  'ar-ER': 'EGP',\n  'ar-IL': 'EGP',\n  'ar-IQ': 'IQD',\n  'ar-IR': 'IQD',\n  'ar-JO': 'JOD',\n  'ar-KE': 'JOD',\n  'ar-KM': 'JOD',\n  'ar-KW': 'KWD',\n  'ar-LB': 'LBP',\n  'ar-LY': 'LYD',\n  'ar-MA': 'MAD',\n  'ar-ML': 'MAD',\n  'ar-MR': 'MAD',\n  'ar-NE': 'MAD',\n  'ar-NG': 'MAD',\n  'ar-OM': 'OMR',\n  'ar-PS': 'OMR',\n  'ar-QA': 'QAR',\n  'ar-SA': 'SAR',\n  'ar-SD': 'SDD',\n  'ar-SS': 'SDD',\n  'ar-SY': 'SYP',\n  'ar-TD': 'SYP',\n  'ar-TJ': 'SYP',\n  'ar-TN': 'TND',\n  'ar-TR': 'TND',\n  'ar-YE': 'YER',\n  'as-IN': 'INR',\n  'av-RU': 'INR',\n  'ay-BO': 'INR',\n  'ay-PE': 'INR',\n  'az-AZ': 'AZM',\n  'ba-RU': 'AZM',\n  'be-BY': 'BYR',\n  'be-PL': 'BYR',\n  'be-UA': 'BYR',\n  'bg-BG': 'BGN',\n  'bg-GR': 'BGN',\n  'bg-MD': 'BGN',\n  'bg-RO': 'BGN',\n  'bg-TR': 'BGN',\n  'bg-UA': 'BGN',\n  'bi-VU': 'BGN',\n  'bm-ML': 'BGN',\n  'bn-BD': 'BDT',\n  'bn-GB': 'BDT',\n  'bn-IN': 'INR',\n  'bn-NP': 'INR',\n  'bo-CN': 'CNY',\n  'bo-IN': 'INR',\n  'bo-NP': 'INR',\n  'br-FR': 'EUR',\n  'bs-BA': 'BAM',\n  'ca-AD': 'EUR',\n  'ca-ES': 'EUR',\n  'ca-FR': 'EUR',\n  'ca-IT': 'EUR',\n  'ce-RU': 'EUR',\n  'ch-GU': 'EUR',\n  'ch-MP': 'EUR',\n  'co-FR': 'EUR',\n  'cs-CZ': 'CZK',\n  'cv-RU': 'RUB',\n  'cy-AR': 'RUB',\n  'cy-GB': 'GBP',\n  'da-DE': 'GBP',\n  'da-DK': 'DKK',\n  'da-GL': 'DKK',\n  'da-IS': 'DKK',\n  'de-AT': 'EUR',\n  'de-BE': 'EUR',\n  'de-BR': 'EUR',\n  'de-CA': 'EUR',\n  'de-CH': 'CHF',\n  'de-CZ': 'CHF',\n  'de-DE': 'EUR',\n  'de-DK': 'EUR',\n  'de-HU': 'EUR',\n  'de-IT': 'EUR',\n  'de-KZ': 'EUR',\n  'de-LI': 'EUR',\n  'de-LU': 'EUR',\n  'de-NA': 'EUR',\n  'de-PL': 'EUR',\n  'de-PY': 'EUR',\n  'de-RO': 'EUR',\n  'de-SK': 'EUR',\n  'de-US': 'EUR',\n  'dv-IN': 'EUR',\n  'dv-MV': 'MVR',\n  'dz-BT': 'BTN',\n  'dz-IN': 'BTN',\n  'ee-GH': 'BTN',\n  'ee-TG': 'BTN',\n  'el-AL': 'BTN',\n  'el-CY': 'EUR',\n  'el-DE': 'EUR',\n  'el-EG': 'EUR',\n  'el-GB': 'EUR',\n  'el-GR': 'EUR',\n  'el-IT': 'EUR',\n  'el-RO': 'EUR',\n  'el-TR': 'EUR',\n  'el-UA': 'EUR',\n  'en-AC': 'EUR',\n  'en-AG': 'XCD',\n  'en-AI': 'XCD',\n  'en-AS': 'XCD',\n  'en-AU': 'AUD',\n  'en-AW': 'AUD',\n  'en-BB': 'AUD',\n  'en-BE': 'AUD',\n  'en-BM': 'AUD',\n  'en-BN': 'AUD',\n  'en-BS': 'AUD',\n  'en-BW': 'BWP',\n  'en-BZ': 'BWP',\n  'en-CA': 'CAD',\n  'en-CC': 'CAD',\n  'en-CK': 'CAD',\n  'en-CM': 'CAD',\n  'en-CN': 'CAD',\n  'en-CX': 'CAD',\n  'en-DE': 'CAD',\n  'en-DG': 'CAD',\n  'en-DM': 'CAD',\n  'en-DO': 'CAD',\n  'en-ES': 'CAD',\n  'en-ET': 'CAD',\n  'en-FI': 'CAD',\n  'en-FJ': 'CAD',\n  'en-FK': 'CAD',\n  'en-FM': 'CAD',\n  'en-FR': 'CAD',\n  'en-GB': 'GBP',\n  'en-GD': 'GBP',\n  'en-GG': 'GBP',\n  'en-GH': 'GBP',\n  'en-GI': 'GBP',\n  'en-GM': 'GBP',\n  'en-GU': 'GBP',\n  'en-GY': 'GBP',\n  'en-HK': 'HKD',\n  'en-HN': 'HKD',\n  'en-IE': 'EUR',\n  'en-IL': 'EUR',\n  'en-IM': 'EUR',\n  'en-IN': 'INR',\n  'en-IO': 'INR',\n  'en-IT': 'INR',\n  'en-JE': 'INR',\n  'en-JM': 'INR',\n  'en-KE': 'INR',\n  'en-KI': 'INR',\n  'en-KN': 'INR',\n  'en-KY': 'INR',\n  'en-LB': 'INR',\n  'en-LC': 'INR',\n  'en-LK': 'INR',\n  'en-LR': 'INR',\n  'en-LS': 'INR',\n  'en-MG': 'INR',\n  'en-MH': 'INR',\n  'en-MP': 'INR',\n  'en-MS': 'INR',\n  'en-MT': 'INR',\n  'en-MU': 'INR',\n  'en-MW': 'INR',\n  'en-MY': 'INR',\n  'en-NA': 'INR',\n  'en-NF': 'INR',\n  'en-NG': 'NGN',\n  'en-NL': 'NGN',\n  'en-NR': 'NGN',\n  'en-NU': 'NGN',\n  'en-NZ': 'NZD',\n  'en-PA': 'NZD',\n  'en-PG': 'NZD',\n  'en-PH': 'PHP',\n  'en-PI': 'PHP',\n  'en-PK': 'PHP',\n  'en-PM': 'PHP',\n  'en-PN': 'PHP',\n  'en-PR': 'PHP',\n  'en-PW': 'PHP',\n  'en-RW': 'PHP',\n  'en-SB': 'PHP',\n  'en-SC': 'PHP',\n  'en-SG': 'SGD',\n  'en-SH': 'SGD',\n  'en-SL': 'SGD',\n  'en-SS': 'SGD',\n  'en-SZ': 'SGD',\n  'en-TA': 'SGD',\n  'en-TC': 'SGD',\n  'en-TK': 'SGD',\n  'en-TO': 'SGD',\n  'en-TT': 'SGD',\n  'en-TV': 'SGD',\n  'en-TZ': 'SGD',\n  'en-UD': 'SGD',\n  'en-UG': 'SGD',\n  'en-UM': 'SGD',\n  'en-US': 'USD',\n  'en-VC': 'USD',\n  'en-VG': 'USD',\n  'en-VI': 'USD',\n  'en-VU': 'USD',\n  'en-WS': 'USD',\n  'en-ZA': 'ZAR',\n  'en-ZM': 'ZAR',\n  'en-ZW': 'ZWD',\n  'eo-EO': 'ZWD',\n  'eo-SM': 'ZWD',\n  'es-AD': 'ZWD',\n  'es-AR': 'ARS',\n  'es-BO': 'BOB',\n  'es-BZ': 'BOB',\n  'es-CL': 'CLP',\n  'es-CO': 'COP',\n  'es-CR': 'CRC',\n  'es-CU': 'CRC',\n  'es-DE': 'CRC',\n  'es-DO': 'DOP',\n  'es-EA': 'DOP',\n  'es-EC': 'USD',\n  'es-ES': 'EUR',\n  'es-GQ': 'EUR',\n  'es-GT': 'GTQ',\n  'es-HN': 'HNL',\n  'es-IC': 'HNL',\n  'es-LA': 'HNL',\n  'es-MA': 'HNL',\n  'es-MX': 'MXN',\n  'es-NI': 'NIO',\n  'es-PA': 'PAB',\n  'es-PE': 'PEN',\n  'es-PH': 'PEN',\n  'es-PR': 'USD',\n  'es-PY': 'PYG',\n  'es-SV': 'SVC',\n  'es-TT': 'SVC',\n  'es-US': 'USD',\n  'es-UY': 'UYU',\n  'es-VE': 'VEB',\n  'et-EE': 'EEK',\n  'et-FI': 'EEK',\n  'eu-ES': 'EUR',\n  'eu-FR': 'EUR',\n  'fa-AE': 'EUR',\n  'fa-AF': 'EUR',\n  'fa-IQ': 'EUR',\n  'fa-IR': 'IRR',\n  'fa-OM': 'IRR',\n  'fa-PK': 'IRR',\n  'fa-QA': 'IRR',\n  'fa-TJ': 'IRR',\n  'fb-LT': 'IRR',\n  'ff-GN': 'IRR',\n  'ff-MR': 'IRR',\n  'ff-SN': 'IRR',\n  'fi-FI': 'EUR',\n  'fi-RU': 'EUR',\n  'fi-SE': 'EUR',\n  'fj-FJ': 'EUR',\n  'fo-FO': 'DKK',\n  'fr-AD': 'DKK',\n  'fr-BE': 'EUR',\n  'fr-BF': 'EUR',\n  'fr-BI': 'EUR',\n  'fr-BJ': 'EUR',\n  'fr-BL': 'EUR',\n  'fr-CA': 'CAD',\n  'fr-CD': 'CAD',\n  'fr-CF': 'CAD',\n  'fr-CG': 'CAD',\n  'fr-CH': 'CHF',\n  'fr-CI': 'CHF',\n  'fr-CM': 'CHF',\n  'fr-CP': 'CHF',\n  'fr-DJ': 'CHF',\n  'fr-DZ': 'CHF',\n  'fr-FR': 'EUR',\n  'fr-GA': 'EUR',\n  'fr-GB': 'EUR',\n  'fr-GF': 'EUR',\n  'fr-GN': 'EUR',\n  'fr-GP': 'EUR',\n  'fr-GQ': 'EUR',\n  'fr-HT': 'EUR',\n  'fr-IT': 'EUR',\n  'fr-KM': 'EUR',\n  'fr-LB': 'EUR',\n  'fr-LU': 'EUR',\n  'fr-MA': 'EUR',\n  'fr-MC': 'EUR',\n  'fr-MF': 'EUR',\n  'fr-MG': 'EUR',\n  'fr-ML': 'EUR',\n  'fr-MQ': 'EUR',\n  'fr-MR': 'EUR',\n  'fr-MU': 'EUR',\n  'fr-NC': 'EUR',\n  'fr-NE': 'EUR',\n  'fr-PF': 'EUR',\n  'fr-PM': 'EUR',\n  'fr-RE': 'EUR',\n  'fr-RW': 'EUR',\n  'fr-SC': 'EUR',\n  'fr-SN': 'EUR',\n  'fr-SY': 'EUR',\n  'fr-TD': 'EUR',\n  'fr-TF': 'EUR',\n  'fr-TG': 'EUR',\n  'fr-TN': 'EUR',\n  'fr-US': 'EUR',\n  'fr-VU': 'EUR',\n  'fr-WF': 'EUR',\n  'fr-YT': 'EUR',\n  'fy-NL': 'EUR',\n  'ga-GB': 'EUR',\n  'ga-IE': 'EUR',\n  'gd-GB': 'GBP',\n  'gl-ES': 'EUR',\n  'gl-PT': 'EUR',\n  'gn-AR': 'EUR',\n  'gn-BO': 'EUR',\n  'gn-PY': 'EUR',\n  'gu-IN': 'INR',\n  'gu-KE': 'INR',\n  'gv-IM': 'INR',\n  'he-IL': 'ILS',\n  'hi-FJ': 'ILS',\n  'hi-IN': 'INR',\n  'hi-NP': 'INR',\n  'hi-UG': 'INR',\n  'hi-ZA': 'INR',\n  'ho-PG': 'INR',\n  'hr-AT': 'INR',\n  'hr-BA': 'INR',\n  'hr-DE': 'INR',\n  'hr-HR': 'HRK',\n  'hr-HU': 'HRK',\n  'hr-IT': 'HRK',\n  'ht-HT': 'HTG',\n  'hu-AT': 'HTG',\n  'hu-HU': 'HUF',\n  'hu-IL': 'HUF',\n  'hu-RO': 'HUF',\n  'hu-RS': 'HUF',\n  'hu-SI': 'HUF',\n  'hu-SK': 'HUF',\n  'hu-UA': 'HUF',\n  'hy-AM': 'AMD',\n  'hy-CY': 'AMD',\n  'hy-GE': 'AMD',\n  'hy-IR': 'AMD',\n  'hy-LB': 'AMD',\n  'hy-SY': 'AMD',\n  'hy-TR': 'AMD',\n  'ia-SE': 'AMD',\n  'id-ID': 'IDR',\n  'id-NL': 'IDR',\n  'ig-NG': 'NGN',\n  'ii-CN': 'NGN',\n  'ik-US': 'NGN',\n  'is-IS': 'ISK',\n  'it-AU': 'ISK',\n  'it-BR': 'ISK',\n  'it-CA': 'ISK',\n  'it-CH': 'CHF',\n  'it-DE': 'CHF',\n  'it-FR': 'CHF',\n  'it-GB': 'CHF',\n  'it-HR': 'CHF',\n  'it-IT': 'EUR',\n  'it-SI': 'EUR',\n  'it-SM': 'EUR',\n  'it-US': 'EUR',\n  'it-VA': 'EUR',\n  'iu-GL': 'EUR',\n  'ja-BR': 'EUR',\n  'ja-JP': 'JPY',\n  'jv-ID': 'JPY',\n  'jv-MY': 'JPY',\n  'ka-GE': 'GEL',\n  'ka-IR': 'GEL',\n  'ka-TR': 'GEL',\n  'kg-CD': 'GEL',\n  'ki-KE': 'GEL',\n  'kj-NA': 'GEL',\n  'kl-DK': 'GEL',\n  'kl-GL': 'DKK',\n  'km-KH': 'KHR',\n  'kn-IN': 'INR',\n  'ko-BR': 'INR',\n  'ko-CN': 'INR',\n  'ko-JP': 'INR',\n  'ko-KP': 'INR',\n  'ko-KR': 'KRW',\n  'ko-US': 'KRW',\n  'ks-GB': 'KRW',\n  'ks-IN': 'INR',\n  'ks-PK': 'INR',\n  'ku-TR': 'TRY',\n  'kw-GB': 'GBP',\n  'la-VA': 'GBP',\n  'lb-LU': 'GBP',\n  'lg-UG': 'UGX',\n  'li-NL': 'EUR',\n  'ln-CD': 'EUR',\n  'ln-CG': 'EUR',\n  'lo-LA': 'LAK',\n  'lt-LT': 'LTL',\n  'lu-CD': 'LTL',\n  'lv-LV': 'LVL',\n  'mg-MG': 'MGA',\n  'mh-MH': 'MGA',\n  'mi-NZ': 'NZD',\n  'mk-AL': 'NZD',\n  'mk-GR': 'NZD',\n  'mk-MK': 'MKD',\n  'ml-AE': 'MKD',\n  'ml-BH': 'MKD',\n  'ml-GB': 'MKD',\n  'ml-IL': 'MKD',\n  'ml-IN': 'INR',\n  'ml-MY': 'INR',\n  'ml-QA': 'INR',\n  'ml-SG': 'INR',\n  'mr-IN': 'INR',\n  'ms-BN': 'INR',\n  'ms-CC': 'INR',\n  'ms-ID': 'INR',\n  'ms-MY': 'MYR',\n  'ms-SG': 'MYR',\n  'mt-MT': 'EUR',\n  'my-BD': 'EUR',\n  'my-MM': 'MMK',\n  'na-NR': 'MMK',\n  'nb-NO': 'NOK',\n  'nb-SJ': 'NOK',\n  'nd-ZW': 'NOK',\n  'ne-BT': 'NOK',\n  'ne-IN': 'NOK',\n  'ne-NP': 'INR',\n  'ng-NA': 'INR',\n  'nl-AW': 'AWG',\n  'nl-BE': 'EUR',\n  'nl-DE': 'EUR',\n  'nl-FR': 'EUR',\n  'nl-NL': 'EUR',\n  'nl-SR': 'EUR',\n  'nn-NO': 'NOK',\n  'nr-ZA': 'ZAR',\n  'nv-US': 'ZAR',\n  'ny-MW': 'ZAR',\n  'ny-MZ': 'ZAR',\n  'ny-ZM': 'ZAR',\n  'ny-ZW': 'ZAR',\n  'oc-FR': 'EUR',\n  'om-ET': 'ETB',\n  'om-KE': 'KES',\n  'om-SO': 'KES',\n  'or-IN': 'INR',\n  'os-GE': 'INR',\n  'pa-IN': 'INR',\n  'pl-CZ': 'INR',\n  'pl-DE': 'INR',\n  'pl-IL': 'INR',\n  'pl-PL': 'PLN',\n  'pl-RO': 'PLN',\n  'pl-SK': 'PLN',\n  'pl-UA': 'PLN',\n  'ps-AE': 'PLN',\n  'ps-AF': 'AFN',\n  'ps-IR': 'AFN',\n  'ps-PK': 'AFN',\n  'pt-AG': 'AFN',\n  'pt-AO': 'AFN',\n  'pt-BR': 'BRL',\n  'pt-CV': 'BRL',\n  'pt-FR': 'BRL',\n  'pt-GW': 'BRL',\n  'pt-MO': 'BRL',\n  'pt-MZ': 'BRL',\n  'pt-PT': 'EUR',\n  'pt-ST': 'EUR',\n  'pt-TL': 'EUR',\n  'qu-BO': 'EUR',\n  'qu-PE': 'EUR',\n  'rm-CH': 'EUR',\n  'rn-BI': 'EUR',\n  'ro-HU': 'EUR',\n  'ro-IL': 'EUR',\n  'ro-MD': 'EUR',\n  'ro-RO': 'RON',\n  'ro-RS': 'RON',\n  'ro-UA': 'RON',\n  'ru-BY': 'RON',\n  'ru-CN': 'RON',\n  'ru-DE': 'RON',\n  'ru-EE': 'RON',\n  'ru-FI': 'RON',\n  'ru-GE': 'RON',\n  'ru-IL': 'RON',\n  'ru-KG': 'RON',\n  'ru-KZ': 'RON',\n  'ru-LT': 'RON',\n  'ru-LV': 'RON',\n  'ru-MD': 'RON',\n  'ru-MN': 'RON',\n  'ru-RU': 'RUB',\n  'ru-SJ': 'RUB',\n  'ru-TM': 'RUB',\n  'ru-UA': 'UAH',\n  'ru-US': 'UAH',\n  'ru-UZ': 'UAH',\n  'rw-CD': 'UAH',\n  'rw-RW': 'RWF',\n  'rw-UG': 'RWF',\n  'sa-IN': 'INR',\n  'se-FI': 'INR',\n  'se-NO': 'NOK',\n  'se-SE': 'NOK',\n  'sg-CF': 'NOK',\n  'si-LK': 'LKR',\n  'sk-HU': 'LKR',\n  'sk-RS': 'LKR',\n  'sk-SK': 'EUR',\n  'sl-AT': 'EUR',\n  'sl-HU': 'EUR',\n  'sl-IT': 'EUR',\n  'sl-SI': 'EUR',\n  'sm-AS': 'EUR',\n  'sm-WS': 'EUR',\n  'sn-ZW': 'EUR',\n  'so-DJ': 'DJF',\n  'so-ET': 'ETB',\n  'so-KE': 'ETB',\n  'so-SO': 'SOS',\n  'sq-AL': 'ALL',\n  'sq-GR': 'ALL',\n  'sq-ME': 'ALL',\n  'sq-MK': 'MKD',\n  'sq-RS': 'MKD',\n  'sq-TR': 'MKD',\n  'sr-RS': 'RSD',\n  'ss-LS': 'RSD',\n  'ss-SZ': 'RSD',\n  'ss-ZA': 'ZAR',\n  'st-LS': 'ZAR',\n  'st-ZA': 'ZAR',\n  'su-ID': 'ZAR',\n  'sv-AX': 'ZAR',\n  'sv-FI': 'EUR',\n  'sv-SE': 'SEK',\n  'sw-BI': 'SEK',\n  'sw-CD': 'SEK',\n  'sw-KE': 'SEK',\n  'sw-MZ': 'SEK',\n  'sw-SO': 'SEK',\n  'sw-TZ': 'SEK',\n  'sw-UG': 'SEK',\n  'sw-YT': 'SEK',\n  'sw-ZA': 'SEK',\n  'ta-IN': 'INR',\n  'ta-LK': 'INR',\n  'ta-MU': 'INR',\n  'ta-MY': 'INR',\n  'ta-RE': 'INR',\n  'ta-SG': 'INR',\n  'te-IN': 'INR',\n  'th-TH': 'THB',\n  'ti-ER': 'ERN',\n  'ti-ET': 'ETB',\n  'ti-IL': 'ETB',\n  'tk-AF': 'ETB',\n  'tk-IR': 'ETB',\n  'tk-TM': 'TMM',\n  'tl-PH': 'PHP',\n  'tl-US': 'PHP',\n  'tn-BW': 'PHP',\n  'tn-NA': 'PHP',\n  'tn-ZA': 'ZAR',\n  'tn-ZW': 'ZAR',\n  'to-TO': 'ZAR',\n  'tr-BG': 'ZAR',\n  'tr-CY': 'TRY',\n  'tr-DE': 'TRY',\n  'tr-GR': 'TRY',\n  'tr-MK': 'TRY',\n  'tr-NL': 'TRY',\n  'tr-RO': 'TRY',\n  'tr-TR': 'TRY',\n  'tr-UA': 'TRY',\n  'tr-UZ': 'TRY',\n  'ts-MZ': 'TRY',\n  'ts-SZ': 'TRY',\n  'ts-ZA': 'ZAR',\n  'tt-RU': 'RUB',\n  'ty-PF': 'RUB',\n  'uk-PL': 'RUB',\n  'uk-SK': 'RUB',\n  'uk-UA': 'UAH',\n  'ur-IN': 'UAH',\n  'ur-MU': 'UAH',\n  'ur-PK': 'PKR',\n  've-ZA': 'ZAR',\n  've-ZW': 'ZAR',\n  'vi-CN': 'ZAR',\n  'vi-US': 'ZAR',\n  'vi-VN': 'VND',\n  'wa-BE': 'EUR',\n  'xh-LS': 'EUR',\n  'xh-ZA': 'ZAR',\n  'yi-UA': 'ZAR',\n  'yo-BJ': 'ZAR',\n  'yo-NG': 'NGN',\n  'za-CN': 'NGN',\n  'zh-CN': 'CNY',\n  'zh-HK': 'HKD',\n  'zh-TW': 'TWD',\n  'zu-LS': 'TWD',\n  'zu-MW': 'TWD',\n  'zu-MZ': 'TWD',\n  'zu-SZ': 'TWD',\n  'zu-ZA': 'ZAR'\n};\nconst defaultConfig = {\n  localeConfig: {\n    global: {},\n    localeBased: {}\n  },\n  defaultLocale: 'en-US',\n  defaultCurrency: 'USD',\n  localeToCurrencyMapping: LOCALE_CURRENCY,\n  langToLocaleMapping: {}\n};\nconst TRANSLOCO_LOCALE_DEFAULT_LOCALE = new InjectionToken('TRANSLOCO_LOCALE_DEFAULT_LOCALE');\nconst TRANSLOCO_LOCALE_DEFAULT_CURRENCY = new InjectionToken('TRANSLOCO_LOCALE_DEFAULT_CURRENCY');\nconst TRANSLOCO_LOCALE_LANG_MAPPING = new InjectionToken('TRANSLOCO_LOCALE_LANG_MAPPING');\nconst TRANSLOCO_LOCALE_CONFIG = new InjectionToken('TRANSLOCO_LOCALE_CONFIG');\nconst TRANSLOCO_LOCALE_CURRENCY_MAPPING = new InjectionToken('TRANSLOCO_LOCALE_CURRENCY_MAPPING');\nconst TRANSLOCO_DATE_TRANSFORMER = new InjectionToken('TRANSLOCO_DATE_TRANSFORMER');\nconst TRANSLOCO_NUMBER_TRANSFORMER = new InjectionToken('TRANSLOCO_NUMBER_TRANSFORMER');\nclass DefaultDateTransformer {\n  transform(date, locale, options) {\n    return localizeDate(date, locale, options);\n  }\n}\nclass DefaultNumberTransformer {\n  transform(value, type, locale, options) {\n    return localizeNumber(value, locale, {\n      ...options,\n      style: type\n    });\n  }\n}\nlet TranslocoLocaleService = /*#__PURE__*/(() => {\n  class TranslocoLocaleService {\n    translocoService = inject(TranslocoService);\n    langLocaleMapping = inject(TRANSLOCO_LOCALE_LANG_MAPPING);\n    defaultLocale = inject(TRANSLOCO_LOCALE_DEFAULT_LOCALE);\n    defaultCurrency = inject(TRANSLOCO_LOCALE_DEFAULT_CURRENCY);\n    localeCurrencyMapping = inject(TRANSLOCO_LOCALE_CURRENCY_MAPPING);\n    numberTransformer = inject(TRANSLOCO_NUMBER_TRANSFORMER);\n    dateTransformer = inject(TRANSLOCO_DATE_TRANSFORMER);\n    localeConfig = inject(TRANSLOCO_LOCALE_CONFIG);\n    _locale = this.defaultLocale || this.toLocale(this.translocoService.getActiveLang());\n    locale = new BehaviorSubject(this._locale);\n    subscription = this.translocoService.langChanges$.pipe(map(lang => this.toLocale(lang)), filter(Boolean)).subscribe(locale => this.setLocale(locale));\n    localeChanges$ = this.locale.asObservable().pipe(distinctUntilChanged());\n    getLocale() {\n      return this._locale;\n    }\n    setLocale(locale) {\n      if (!isLocaleFormat(locale)) {\n        console.error(`${locale} isn't a valid locale format`);\n        return;\n      }\n      this.locale.next(locale);\n      this._locale = locale;\n    }\n    /**\n     * Get the currency symbol for the currently set locale.\n     */\n    getCurrencySymbol(locale = this.getLocale()) {\n      const currency = this.localeCurrencyMapping[locale];\n      const numberFormat = new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currencyDisplay: 'symbol',\n        currency,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      });\n      const pivot = 0;\n      return numberFormat.format(pivot).split(pivot.toString()).map(element => element.trim()).find(element => !!element);\n    }\n    /**\n     * Transform a date into the locale's date format.\n     *\n     * The date expression: a `Date` object, a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     *\n     * @example\n     *\n     * localizeDate(new Date(2019, 9, 7, 12, 0, 0)) // 10/7/2019\n     * localizeDate(date, 'en-US', { dateStyle: 'medium', timeStyle: 'medium' }) // Sep 10, 2019, 10:46:12 PM\n     * localizeDate(date) 'en-US', { timeZone: 'UTC', timeStyle: 'full' } // 7:40:32 PM Coordinated Universal Time\n     * localizeDate(1, 'en-US', { dateStyle: 'medium' }) // Jan 1, 1970\n     * localizeDate('2019-02-08', 'en-US', { dateStyle: 'medium' }) // Feb 8, 2019\n     */\n    localizeDate(date, locale = this.getLocale(), options = {}) {\n      const resolved = options ?? getDefaultOptions(locale, 'date', this.localeConfig);\n      return this.dateTransformer.transform(toDate(date), locale, resolved);\n    }\n    /**\n     * Transform a number into the locale's number format according to the number type.\n     *\n     * localizeNumber(1234567890, 'decimal') // 1,234,567,890\n     * localizeNumber(0.5, 'percent') // 50%\n     * localizeNumber(1000, 'currency') // $1,000.00\n     */\n    localizeNumber(value, style, locale = this.getLocale(), options) {\n      let resolved = options ?? getDefaultOptions(locale, style, this.localeConfig);\n      if (style === 'currency') {\n        resolved = {\n          ...resolved,\n          currency: resolved.currency || this._resolveCurrencyCode(locale)\n        };\n      }\n      return this.numberTransformer.transform(value, style, locale, resolved);\n    }\n    /**\n     * @internal\n     */\n    _resolveCurrencyCode(locale = this.getLocale()) {\n      return this.localeCurrencyMapping[locale] || this.defaultCurrency;\n    }\n    ngOnDestroy() {\n      this.subscription?.unsubscribe();\n      // Caretaker note: it's important to clean up references to subscriptions since they save the `next`\n      // callback within its `destination` property, preventing classes from being GC'd.\n      this.subscription = null;\n    }\n    toLocale(val) {\n      if (this.langLocaleMapping[val]) {\n        return this.langLocaleMapping[val];\n      }\n      if (isLocaleFormat(val)) {\n        return val;\n      }\n      return '';\n    }\n    static Éµfac = function TranslocoLocaleService_Factory(t) {\n      return new (t || TranslocoLocaleService)();\n    };\n    static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: TranslocoLocaleService,\n      factory: TranslocoLocaleService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n  return TranslocoLocaleService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BaseLocalePipe = /*#__PURE__*/(() => {\n  class BaseLocalePipe {\n    localeService = inject(TranslocoLocaleService);\n    cdr = inject(ChangeDetectorRef);\n    localeChangeSub = this.localeService.localeChanges$.subscribe(() => this.cdr.markForCheck());\n    getLocale(locale) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return locale || this.localeService.getLocale();\n    }\n    ngOnDestroy() {\n      this.localeChangeSub?.unsubscribe();\n      // Caretaker note: it's important to clean up references to subscriptions since they save the `next`\n      // callback within its `destination` property, preventing classes from being GC'd.\n      this.localeChangeSub = null;\n    }\n    static Éµfac = function BaseLocalePipe_Factory(t) {\n      return new (t || BaseLocalePipe)();\n    };\n    static Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: BaseLocalePipe,\n      factory: BaseLocalePipe.Éµfac\n    });\n  }\n  return BaseLocalePipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TranslocoCurrencyPipe = /*#__PURE__*/(() => {\n  class TranslocoCurrencyPipe extends BaseLocalePipe {\n    localeConfig = inject(TRANSLOCO_LOCALE_CONFIG);\n    /**\n     * Transform a given number into the locale's currency format.\n     *\n     * @example\n     *\n     * 1000000 | translocoCurrency: 'symbol' : {} : USD // $1,000,000.00\n     * 1000000 | translocoCurrency: 'name' : {} : USD // 1,000,000.00 US dollars\n     * 1000000 | translocoCurrency: 'symbol' : {minimumFractionDigits: 0 } : USD // $1,000,000\n     * 1000000 | translocoCurrency: 'symbol' : {minimumFractionDigits: 0 } : CAD // CA$1,000,000\n     * 1000000 | translocoCurrency: 'narrowSymbol' : {minimumFractionDigits: 0 } : CAD // $1,000,000\n     *\n     */\n    transform(value, display = 'symbol', numberFormatOptions = {}, currencyCode, locale) {\n      if (isNil(value)) return '';\n      locale = this.getLocale(locale);\n      const options = {\n        ...getDefaultOptions(locale, 'currency', this.localeConfig),\n        ...numberFormatOptions,\n        currencyDisplay: display,\n        currency: currencyCode || this.localeService._resolveCurrencyCode()\n      };\n      return this.localeService.localizeNumber(value, 'currency', locale, options);\n    }\n    static Éµfac = /* @__PURE__ */(() => {\n      let ÉµTranslocoCurrencyPipe_BaseFactory;\n      return function TranslocoCurrencyPipe_Factory(t) {\n        return (ÉµTranslocoCurrencyPipe_BaseFactory || (ÉµTranslocoCurrencyPipe_BaseFactory = i0.ÉµÉµgetInheritedFactory(TranslocoCurrencyPipe)))(t || TranslocoCurrencyPipe);\n      };\n    })();\n    static Éµpipe = /* @__PURE__ */i0.ÉµÉµdefinePipe({\n      name: \"translocoCurrency\",\n      type: TranslocoCurrencyPipe,\n      pure: false,\n      standalone: true\n    });\n  }\n  return TranslocoCurrencyPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TranslocoDatePipe = /*#__PURE__*/(() => {\n  class TranslocoDatePipe extends BaseLocalePipe {\n    localeConfig = inject(TRANSLOCO_LOCALE_CONFIG);\n    /**\n     * Transform a date into the locale's date format.\n     *\n     * The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     *\n     * @example\n     *\n     * date | translocoDate: {} : en-US // 9/10/2019\n     * date | translocoDate: { dateStyle: 'medium', timeStyle: 'medium' } : en-US // Sep 10, 2019, 10:46:12 PM\n     * date | translocoDate: { timeZone: 'UTC', timeStyle: 'full' } : en-US // 7:40:32 PM Coordinated Universal Time\n     * 1 | translocoDate: { dateStyle: 'medium' } // Jan 1, 1970\n     * '2019-02-08' | translocoDate: { dateStyle: 'medium' } // Feb 8, 2019\n     */\n    transform(date, options = {}, locale) {\n      if (isNil(date)) return '';\n      locale = this.getLocale(locale);\n      return this.localeService.localizeDate(date, locale, {\n        ...getDefaultOptions(locale, 'date', this.localeConfig),\n        ...options\n      });\n    }\n    static Éµfac = /* @__PURE__ */(() => {\n      let ÉµTranslocoDatePipe_BaseFactory;\n      return function TranslocoDatePipe_Factory(t) {\n        return (ÉµTranslocoDatePipe_BaseFactory || (ÉµTranslocoDatePipe_BaseFactory = i0.ÉµÉµgetInheritedFactory(TranslocoDatePipe)))(t || TranslocoDatePipe);\n      };\n    })();\n    static Éµpipe = /* @__PURE__ */i0.ÉµÉµdefinePipe({\n      name: \"translocoDate\",\n      type: TranslocoDatePipe,\n      pure: false,\n      standalone: true\n    });\n  }\n  return TranslocoDatePipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TranslocoDecimalPipe = /*#__PURE__*/(() => {\n  class TranslocoDecimalPipe extends BaseLocalePipe {\n    localeConfig = inject(TRANSLOCO_LOCALE_CONFIG);\n    /**\n     * Transform a given number into the locale's currency format.\n     *\n     * @example\n     *\n     * 1234567890 | translocoDecimal: {} : en-US // 1,234,567,890\n     * 1234567890 | translocoDecimal: {useGrouping: false}: en-US // 1234567890\n     *\n     */\n    transform(value, numberFormatOptions = {}, locale) {\n      if (isNil(value)) return '';\n      locale = this.getLocale(locale);\n      const options = {\n        ...getDefaultOptions(locale, 'decimal', this.localeConfig),\n        ...numberFormatOptions\n      };\n      return this.localeService.localizeNumber(value, 'decimal', locale, options);\n    }\n    static Éµfac = /* @__PURE__ */(() => {\n      let ÉµTranslocoDecimalPipe_BaseFactory;\n      return function TranslocoDecimalPipe_Factory(t) {\n        return (ÉµTranslocoDecimalPipe_BaseFactory || (ÉµTranslocoDecimalPipe_BaseFactory = i0.ÉµÉµgetInheritedFactory(TranslocoDecimalPipe)))(t || TranslocoDecimalPipe);\n      };\n    })();\n    static Éµpipe = /* @__PURE__ */i0.ÉµÉµdefinePipe({\n      name: \"translocoDecimal\",\n      type: TranslocoDecimalPipe,\n      pure: false,\n      standalone: true\n    });\n  }\n  return TranslocoDecimalPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TranslocoPercentPipe = /*#__PURE__*/(() => {\n  class TranslocoPercentPipe extends BaseLocalePipe {\n    localeConfig = inject(TRANSLOCO_LOCALE_CONFIG);\n    /**\n     * Transform a given number into the locale's currency format.\n     *\n     * @example\n     *\n     * 1 | translocoPercent : {} : en-US // 100%\n     * \"1\" | translocoPercent : {} : en-US // 100%\n     *\n     */\n    transform(value, numberFormatOptions = {}, locale) {\n      if (isNil(value)) return '';\n      locale = this.getLocale(locale);\n      const options = {\n        ...getDefaultOptions(locale, 'percent', this.localeConfig),\n        ...numberFormatOptions\n      };\n      return this.localeService.localizeNumber(value, 'percent', locale, options);\n    }\n    static Éµfac = /* @__PURE__ */(() => {\n      let ÉµTranslocoPercentPipe_BaseFactory;\n      return function TranslocoPercentPipe_Factory(t) {\n        return (ÉµTranslocoPercentPipe_BaseFactory || (ÉµTranslocoPercentPipe_BaseFactory = i0.ÉµÉµgetInheritedFactory(TranslocoPercentPipe)))(t || TranslocoPercentPipe);\n      };\n    })();\n    static Éµpipe = /* @__PURE__ */i0.ÉµÉµdefinePipe({\n      name: \"translocoPercent\",\n      type: TranslocoPercentPipe,\n      pure: false,\n      standalone: true\n    });\n  }\n  return TranslocoPercentPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst decl = [TranslocoCurrencyPipe, TranslocoDatePipe, TranslocoDecimalPipe, TranslocoPercentPipe];\nlet TranslocoLocaleModule = /*#__PURE__*/(() => {\n  class TranslocoLocaleModule {\n    static Éµfac = function TranslocoLocaleModule_Factory(t) {\n      return new (t || TranslocoLocaleModule)();\n    };\n    static Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: TranslocoLocaleModule\n    });\n    static Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({});\n  }\n  return TranslocoLocaleModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction provideTranslocoLocale(config) {\n  const merged = {\n    ...defaultConfig,\n    ...config\n  };\n  return [provideTranslocoLocaleConfig(merged.localeConfig), provideTranslocoDefaultLocale(merged.defaultLocale), provideTranslocoDefaultCurrency(merged.defaultCurrency), provideTranslocoLocaleLangMapping(merged.langToLocaleMapping), provideTranslocoLocaleCurrencyMapping(merged.localeToCurrencyMapping), provideTranslocoDateTransformer(DefaultDateTransformer), provideTranslocoNumberTransformer(DefaultNumberTransformer)];\n}\nfunction provideTranslocoLocaleConfig(config) {\n  return makeEnvironmentProviders([{\n    provide: TRANSLOCO_LOCALE_CONFIG,\n    useValue: config\n  }]);\n}\nfunction provideTranslocoLocaleLangMapping(langToLocale) {\n  return makeEnvironmentProviders([{\n    provide: TRANSLOCO_LOCALE_LANG_MAPPING,\n    useValue: langToLocale\n  }]);\n}\nfunction provideTranslocoLocaleCurrencyMapping(localeToCurrency) {\n  return makeEnvironmentProviders([{\n    provide: TRANSLOCO_LOCALE_CURRENCY_MAPPING,\n    useValue: localeToCurrency\n  }]);\n}\nfunction provideTranslocoDefaultLocale(defaultLocale) {\n  return makeEnvironmentProviders([{\n    provide: TRANSLOCO_LOCALE_DEFAULT_LOCALE,\n    useValue: defaultLocale\n  }]);\n}\nfunction provideTranslocoDefaultCurrency(defaultCurrency) {\n  return makeEnvironmentProviders([{\n    provide: TRANSLOCO_LOCALE_DEFAULT_CURRENCY,\n    useValue: defaultCurrency\n  }]);\n}\nfunction provideTranslocoDateTransformer(transformer) {\n  return makeEnvironmentProviders([{\n    provide: TRANSLOCO_DATE_TRANSFORMER,\n    useClass: transformer\n  }]);\n}\nfunction provideTranslocoNumberTransformer(transformer) {\n  return makeEnvironmentProviders([{\n    provide: TRANSLOCO_NUMBER_TRANSFORMER,\n    useClass: transformer\n  }]);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseLocalePipe, DefaultDateTransformer, DefaultNumberTransformer, TRANSLOCO_DATE_TRANSFORMER, TRANSLOCO_LOCALE_CONFIG, TRANSLOCO_LOCALE_CURRENCY_MAPPING, TRANSLOCO_LOCALE_DEFAULT_CURRENCY, TRANSLOCO_LOCALE_DEFAULT_LOCALE, TRANSLOCO_LOCALE_LANG_MAPPING, TRANSLOCO_NUMBER_TRANSFORMER, TranslocoCurrencyPipe, TranslocoDatePipe, TranslocoDecimalPipe, TranslocoLocaleModule, TranslocoLocaleService, TranslocoPercentPipe, provideTranslocoDateTransformer, provideTranslocoDefaultCurrency, provideTranslocoDefaultLocale, provideTranslocoLocale, provideTranslocoLocaleConfig, provideTranslocoLocaleCurrencyMapping, provideTranslocoLocaleLangMapping, provideTranslocoNumberTransformer };\n"],"mappings":"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","names":["DefaultValuePipe","transform","value","replacementString","Infinity","Number","isNaN","pure","standalone","_DefaultValuePipe","ISO8601_DATE_REGEX","isLocaleFormat","val","localizeNumber","value","locale","options","number","toNumber","localizeDate","date","isDate","toDate","match","y","m","d","isoStringToDate","tzHour","tzMin","dateSetter","timeSetter","h","s","ms","getDefaultOptions","style","localeConfig","defaultConfig","settings","__spreadValues","LOCALE_CURRENCY","TRANSLOCO_LOCALE_DEFAULT_LOCALE","InjectionToken","TRANSLOCO_LOCALE_DEFAULT_CURRENCY","TRANSLOCO_LOCALE_LANG_MAPPING","TRANSLOCO_LOCALE_CONFIG","TRANSLOCO_LOCALE_CURRENCY_MAPPING","TRANSLOCO_DATE_TRANSFORMER","TRANSLOCO_NUMBER_TRANSFORMER","DefaultDateTransformer","DefaultNumberTransformer","type","__spreadProps","TranslocoLocaleService","inject","TranslocoService","BehaviorSubject","map","lang","filter","distinctUntilChanged","currency","numberFormat","pivot","element","resolved","t","ÉµÉµdefineInjectable","BaseLocalePipe","ChangeDetectorRef","TranslocoDatePipe","BaseLocalePipe","inject","TRANSLOCO_LOCALE_CONFIG","date","options","locale","isNil","__spreadValues","getDefaultOptions","ÉµTranslocoDatePipe_BaseFactory","t","ÉµÉµgetInheritedFactory","ÉµÉµdefinePipe","TranslocoLocaleModule","t","ÉµÉµdefineNgModule","ÉµÉµdefineInjector","provideTranslocoLocale","config","merged","__spreadValues","defaultConfig","provideTranslocoLocaleConfig","provideTranslocoDefaultLocale","provideTranslocoDefaultCurrency","provideTranslocoLocaleLangMapping","provideTranslocoLocaleCurrencyMapping","provideTranslocoDateTransformer","DefaultDateTransformer","provideTranslocoNumberTransformer","DefaultNumberTransformer","makeEnvironmentProviders","TRANSLOCO_LOCALE_CONFIG","langToLocale","TRANSLOCO_LOCALE_LANG_MAPPING","localeToCurrency","TRANSLOCO_LOCALE_CURRENCY_MAPPING","defaultLocale","TRANSLOCO_LOCALE_DEFAULT_LOCALE","defaultCurrency","TRANSLOCO_LOCALE_DEFAULT_CURRENCY","transformer","TRANSLOCO_DATE_TRANSFORMER","TRANSLOCO_NUMBER_TRANSFORMER"],"x_google_ignoreList":[1]}