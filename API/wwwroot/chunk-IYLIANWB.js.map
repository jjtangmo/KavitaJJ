{
  "version": 3,
  "sources": ["src/app/_services/device.service.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject, shareReplay, tap } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Device } from '../_models/device/device';\nimport { DevicePlatform } from '../_models/device/device-platform';\nimport { TextResonse } from '../_types/text-response';\nimport { AccountService } from './account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceService {\n\n  baseUrl = environment.apiUrl;\n\n  private devicesSource: ReplaySubject<Device[]> = new ReplaySubject<Device[]>(1);\n  public devices$ = this.devicesSource.asObservable().pipe(shareReplay());\n\n\n  constructor(private httpClient: HttpClient, private accountService: AccountService) {\n    // Ensure we are authenticated before we make an authenticated api call.\n    this.accountService.currentUser$.subscribe(user => {\n      if (!user) {\n        this.devicesSource.next([]);\n        return;\n      }\n\n      this.httpClient.get<Device[]>(this.baseUrl + 'device', {}).subscribe(data => {\n        this.devicesSource.next(data);\n      });\n    });\n  }\n\n  createDevice(name: string, platform: DevicePlatform, emailAddress: string) {\n    return this.httpClient.post(this.baseUrl + 'device/create', {name, platform, emailAddress}, TextResonse);\n  }\n\n  updateDevice(id: number, name: string, platform: DevicePlatform, emailAddress: string) {\n    return this.httpClient.post(this.baseUrl + 'device/update', {id, name, platform, emailAddress}, TextResonse);\n  }\n\n  deleteDevice(id: number) {\n    return this.httpClient.delete(this.baseUrl + 'device?deviceId=' + id);\n  }\n\n  getDevices() {\n    return this.httpClient.get<Device[]>(this.baseUrl + 'device', {}).pipe(tap(data => {\n      this.devicesSource.next(data);\n    }));\n  }\n\n  sendTo(chapterIds: Array<number>, deviceId: number) {\n    return this.httpClient.post(this.baseUrl + 'device/send-to', {deviceId, chapterIds}, TextResonse);\n  }\n\n  sendSeriesTo(seriesId: number, deviceId: number) {\n    return this.httpClient.post(this.baseUrl + 'device/send-series-to', {deviceId, seriesId}, TextResonse);\n  }\n\n\n}\n"],
  "mappings": "uIAYA,IAAaA,GAAa,IAAA,CAApB,IAAOA,EAAP,MAAOA,CAAa,CAQxBC,YAAoBC,EAAgCC,EAA8B,CAA9D,KAAAD,WAAAA,EAAgC,KAAAC,eAAAA,EANpD,KAAAC,QAAUC,EAAYC,OAEd,KAAAC,cAAyC,IAAIC,EAAwB,CAAC,EACvE,KAAAC,SAAW,KAAKF,cAAcG,aAAY,EAAGC,KAAKC,EAAW,CAAE,EAKpE,KAAKT,eAAeU,aAAaC,UAAUC,GAAO,CAChD,GAAI,CAACA,EAAM,CACT,KAAKR,cAAcS,KAAK,CAAA,CAAE,EAC1B,OAGF,KAAKd,WAAWe,IAAc,KAAKb,QAAU,SAAU,CAAA,CAAE,EAAEU,UAAUI,GAAO,CAC1E,KAAKX,cAAcS,KAAKE,CAAI,CAC9B,CAAC,CACH,CAAC,CACH,CAEAC,aAAaC,EAAcC,EAA0BC,EAAoB,CACvE,OAAO,KAAKpB,WAAWqB,KAAK,KAAKnB,QAAU,gBAAiB,CAACgB,KAAAA,EAAMC,SAAAA,EAAUC,aAAAA,CAAY,EAAGE,CAAW,CACzG,CAEAC,aAAaC,EAAYN,EAAcC,EAA0BC,EAAoB,CACnF,OAAO,KAAKpB,WAAWqB,KAAK,KAAKnB,QAAU,gBAAiB,CAACsB,GAAAA,EAAIN,KAAAA,EAAMC,SAAAA,EAAUC,aAAAA,CAAY,EAAGE,CAAW,CAC7G,CAEAG,aAAaD,EAAU,CACrB,OAAO,KAAKxB,WAAW0B,OAAO,KAAKxB,QAAU,mBAAqBsB,CAAE,CACtE,CAEAG,YAAU,CACR,OAAO,KAAK3B,WAAWe,IAAc,KAAKb,QAAU,SAAU,CAAA,CAAE,EAAEO,KAAKmB,EAAIZ,GAAO,CAChF,KAAKX,cAAcS,KAAKE,CAAI,CAC9B,CAAC,CAAC,CACJ,CAEAa,OAAOC,EAA2BC,EAAgB,CAChD,OAAO,KAAK/B,WAAWqB,KAAK,KAAKnB,QAAU,iBAAkB,CAAC6B,SAAAA,EAAUD,WAAAA,CAAU,EAAGR,CAAW,CAClG,CAEAU,aAAaC,EAAkBF,EAAgB,CAC7C,OAAO,KAAK/B,WAAWqB,KAAK,KAAKnB,QAAU,wBAAyB,CAAC6B,SAAAA,EAAUE,SAAAA,CAAQ,EAAGX,CAAW,CACvG,yCA9CWxB,GAAaoC,EAAAC,CAAA,EAAAD,EAAAE,CAAA,CAAA,CAAA,wBAAbtC,EAAauC,QAAbvC,EAAawC,UAAAC,WAFZ,MAAM,CAAA,EAEd,IAAOzC,EAAP0C,SAAO1C,CAAa,GAAA",
  "names": ["DeviceService", "constructor", "httpClient", "accountService", "baseUrl", "environment", "apiUrl", "devicesSource", "ReplaySubject", "devices$", "asObservable", "pipe", "shareReplay", "currentUser$", "subscribe", "user", "next", "get", "data", "createDevice", "name", "platform", "emailAddress", "post", "TextResonse", "updateDevice", "id", "deleteDevice", "delete", "getDevices", "tap", "sendTo", "chapterIds", "deviceId", "sendSeriesTo", "seriesId", "\u0275\u0275inject", "HttpClient", "AccountService", "factory", "\u0275fac", "providedIn", "_DeviceService"]
}
