{
  "version": 3,
  "sources": ["src/app/_pipes/provider-image.pipe.ts", "src/app/shared/a11y-click.directive.ts", "src/app/shared/badge-expander/badge-expander.component.ts", "src/app/shared/badge-expander/badge-expander.component.html", "src/app/series-detail/_components/metadata-detail/metadata-detail.component.ts", "src/app/series-detail/_components/metadata-detail/metadata-detail.component.html", "src/app/shared/person-badge/person-badge.component.ts", "src/app/shared/person-badge/person-badge.component.html", "src/app/_single-module/series-preview-drawer/series-preview-drawer.component.ts", "src/app/_single-module/series-preview-drawer/series-preview-drawer.component.html", "src/app/cards/series-card/series-card.component.ts", "src/app/cards/series-card/series-card.component.html"],
  "sourcesContent": ["import {Pipe, PipeTransform} from '@angular/core';\nimport {ScrobbleProvider} from \"../_services/scrobbling.service\";\n\n@Pipe({\n  name: 'providerImage',\n  standalone: true\n})\nexport class ProviderImagePipe implements PipeTransform {\n\n  transform(value: ScrobbleProvider): string {\n    switch (value) {\n      case ScrobbleProvider.AniList:\n        return 'assets/images/ExternalServices/AniList.png';\n      case ScrobbleProvider.Mal:\n        return 'assets/images/ExternalServices/MAL.png';\n      case ScrobbleProvider.GoogleBooks:\n        return 'assets/images/ExternalServices/GoogleBooks.png';\n      case ScrobbleProvider.Kavita:\n        return 'assets/images/logo-32.png';\n    }\n  }\n\n}\n", "import { Directive, Input, HostListener, OnInit, ElementRef, Inject } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[a11y-click]',\n  standalone: true\n})\nexport class A11yClickDirective implements OnInit {\n  @Input('a11y-click') keyCodes!: string;\n  keyCodeArray!: string[];\n\n  constructor(@Inject(ElementRef) private element : ElementRef){}\n\n  ngOnInit(){\n    if(this.keyCodes) {\n      this.keyCodeArray = this.keyCodes.split(',');\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onEvent(event: any) {\n    var keyCodeCondition = function (that: any) {\n      var flag = false;\n      if (!(event.keyCode)) {\n        if (event.which) {\n          event.keyCode = event.which;\n        } else if (event.charCode) {\n          event.keyCode = event.charCode;\n        }\n      }\n      if ((event.keyCode && that.keyCodeArray.indexOf(event.keyCode.toString()) > -1)) {\n        flag = true;\n      }\n      return flag;\n    };\n    const that = this;\n    if (this.keyCodeArray.length > 0 && keyCodeCondition(that)) {\n      this.element.nativeElement.click();\n      event.preventDefault();\n    }\n\n  }\n\n}\n", "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  inject,\n  Input,\n  OnInit,\n  TemplateRef\n} from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\n\n@Component({\n  selector: 'app-badge-expander',\n  standalone: true,\n  imports: [CommonModule, TranslocoDirective],\n  templateUrl: './badge-expander.component.html',\n  styleUrls: ['./badge-expander.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BadgeExpanderComponent implements OnInit {\n\n  private readonly cdRef = inject(ChangeDetectorRef);\n\n  @Input() items: Array<any> = [];\n  @Input() itemsTillExpander: number = 4;\n  @ContentChild('badgeExpanderItem') itemTemplate!: TemplateRef<any>;\n\n\n  visibleItems: Array<any> = [];\n  isCollapsed: boolean = false;\n\n  get itemsLeft() {\n    return Math.max(this.items.length - this.itemsTillExpander, 0);\n  }\n\n  ngOnInit(): void {\n    this.visibleItems = this.items.slice(0, this.itemsTillExpander);\n    this.cdRef.markForCheck();\n  }\n\n  toggleVisible() {\n    this.isCollapsed = !this.isCollapsed;\n    this.visibleItems = this.items;\n    this.cdRef.markForCheck();\n  }\n\n}\n", "<ng-container *transloco=\"let t; read: 'badge-expander'\">\n  <div class=\"badge-expander\">\n    <div class=\"content\">\n      <ng-container *ngFor=\"let item of visibleItems; index as i;\" [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, idx: i }\"></ng-container>\n      <button type=\"button\" *ngIf=\"!isCollapsed && itemsLeft !== 0\" class=\"btn btn-sm btn-outline-primary\" (click)=\"toggleVisible()\" [attr.aria-expanded]=\"!isCollapsed\">\n        {{t('more-items', {count: itemsLeft})}}\n      </button>\n    </div>\n  </div>\n</ng-container>\n", "import {ChangeDetectionStrategy, Component, ContentChild, inject, Input, TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {A11yClickDirective} from \"../../../shared/a11y-click.directive\";\nimport {BadgeExpanderComponent} from \"../../../shared/badge-expander/badge-expander.component\";\nimport {TagBadgeComponent, TagBadgeCursor} from \"../../../shared/tag-badge/tag-badge.component\";\nimport {FilterUtilitiesService} from \"../../../shared/_services/filter-utilities.service\";\nimport {FilterComparison} from \"../../../_models/metadata/v2/filter-comparison\";\nimport {FilterField} from \"../../../_models/metadata/v2/filter-field\";\nimport {Breakpoint, UtilityService} from \"../../../shared/_services/utility.service\";\n\n@Component({\n  selector: 'app-metadata-detail',\n  standalone: true,\n  imports: [CommonModule, A11yClickDirective, BadgeExpanderComponent, TagBadgeComponent],\n  templateUrl: './metadata-detail.component.html',\n  styleUrls: ['./metadata-detail.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MetadataDetailComponent {\n\n  private readonly filterUtilityService = inject(FilterUtilitiesService);\n  public readonly utilityService = inject(UtilityService);\n\n  protected readonly TagBadgeCursor = TagBadgeCursor;\n  protected readonly Breakpoint = Breakpoint;\n\n  @Input({required: true}) tags: Array<any> = [];\n  @Input({required: true}) libraryId!: number;\n  @Input({required: true}) heading!: string;\n  @Input() queryParam: FilterField = FilterField.None;\n  @ContentChild('titleTemplate') titleTemplate!: TemplateRef<any>;\n  @ContentChild('itemTemplate') itemTemplate?: TemplateRef<any>;\n\n\n  goTo(queryParamName: FilterField, filter: any) {\n    if (queryParamName === FilterField.None) return;\n    this.filterUtilityService.applyFilter(['library', this.libraryId], queryParamName, FilterComparison.Equal, filter).subscribe();\n  }\n\n\n}\n", "<div class=\"row g-0 mb-1\" *ngIf=\"tags && tags.length > 0\">\n  <div class=\"col-lg-3 col-md-4 col-sm-12\">\n    <h5>{{heading}}</h5>\n  </div>\n  <div class=\"col-lg-9 col-md-8 col-sm-12\">\n    <app-badge-expander [items]=\"tags\" [itemsTillExpander]=\"utilityService.getActiveBreakpoint() >= Breakpoint.Desktop ? 30 : 4\">\n      <ng-template #badgeExpanderItem let-item let-position=\"idx\">\n        <ng-container *ngIf=\"itemTemplate; else useTitle\">\n          <span (click)=\"goTo(queryParam, item.id)\">\n            <ng-container [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, idx: position }\"></ng-container>\n          </span>\n        </ng-container>\n        <ng-template #useTitle>\n          <app-tag-badge a11y-click=\"13,32\" class=\"col-auto\" (click)=\"goTo(queryParam, item.id)\" [selectionMode]=\"TagBadgeCursor.Clickable\">\n            <ng-container [ngTemplateOutlet]=\"titleTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, idx: position }\"></ng-container>\n          </app-tag-badge>\n        </ng-template>\n      </ng-template>\n    </app-badge-expander>\n  </div>\n</div>\n", "import {ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, Input, OnInit} from '@angular/core';\nimport { Person } from '../../_models/metadata/person';\nimport {CommonModule} from \"@angular/common\";\nimport {SeriesStaff} from \"../../_models/series-detail/external-series-detail\";\nimport {ImageComponent} from \"../image/image.component\";\n\n@Component({\n  selector: 'app-person-badge',\n  standalone: true,\n  imports: [CommonModule, ImageComponent],\n  templateUrl: './person-badge.component.html',\n  styleUrls: ['./person-badge.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PersonBadgeComponent implements OnInit {\n\n  @Input({required: true}) person!: Person | SeriesStaff;\n  @Input() isStaff = false;\n\n  private readonly cdRef = inject(ChangeDetectorRef);\n\n  staff!: SeriesStaff;\n\n  ngOnInit() {\n    this.staff = this.person as SeriesStaff;\n    this.cdRef.markForCheck();\n  }\n}\n", "<div class=\"tagbadge cursor clickable\" *ngIf=\"person !== undefined\">\n    <div class=\"d-flex\">\n        <ng-container *ngIf=\"isStaff && staff.imageUrl && !staff.imageUrl.endsWith('default.jpg'); else localPerson\">\n          <app-image height=\"24px\" width=\"24px\" objectFit=\"contain\" [imageUrl]=\"staff.imageUrl\"></app-image>\n        </ng-container>\n        <ng-template #localPerson>\n          <i class=\"fa fa-user-circle align-self-center me-2\" aria-hidden=\"true\"></i>\n        </ng-template>\n        <div class=\"flex-grow-1\">\n          <span class=\"mt-0 mb-0\">\n            {{person.name}}\n          </span>\n        </div>\n    </div>\n</div>\n", "import {ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, Input, OnInit} from '@angular/core';\nimport {CommonModule, NgOptimizedImage} from '@angular/common';\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {NgbActiveOffcanvas, NgbTooltip} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ExternalSeriesDetail, SeriesStaff} from \"../../_models/series-detail/external-series-detail\";\nimport {SeriesService} from \"../../_services/series.service\";\nimport {ImageComponent} from \"../../shared/image/image.component\";\nimport {LoadingComponent} from \"../../shared/loading/loading.component\";\nimport {SafeHtmlPipe} from \"../../_pipes/safe-html.pipe\";\nimport {A11yClickDirective} from \"../../shared/a11y-click.directive\";\nimport {MetadataDetailComponent} from \"../../series-detail/_components/metadata-detail/metadata-detail.component\";\nimport {PersonBadgeComponent} from \"../../shared/person-badge/person-badge.component\";\nimport {TagBadgeComponent} from \"../../shared/tag-badge/tag-badge.component\";\nimport {ImageService} from \"../../_services/image.service\";\nimport {PublicationStatusPipe} from \"../../_pipes/publication-status.pipe\";\nimport {SeriesMetadata} from \"../../_models/metadata/series-metadata\";\nimport {ReadMoreComponent} from \"../../shared/read-more/read-more.component\";\nimport {ActionService} from \"../../_services/action.service\";\nimport {ProviderImagePipe} from \"../../_pipes/provider-image.pipe\";\nimport {ScrobbleProvider} from \"../../_services/scrobbling.service\";\n\n@Component({\n  selector: 'app-series-preview-drawer',\n  standalone: true,\n    imports: [CommonModule, TranslocoDirective, ImageComponent, LoadingComponent, SafeHtmlPipe, A11yClickDirective, MetadataDetailComponent, PersonBadgeComponent, TagBadgeComponent, PublicationStatusPipe, ReadMoreComponent, NgbTooltip, NgOptimizedImage, ProviderImagePipe],\n  templateUrl: './series-preview-drawer.component.html',\n  styleUrls: ['./series-preview-drawer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SeriesPreviewDrawerComponent implements OnInit {\n  @Input({required: true}) name!: string;\n  @Input() aniListId?: number;\n  @Input() malId?: number;\n  @Input() seriesId?: number;\n  @Input() libraryId: number = 0;\n  @Input({required: true}) isExternalSeries: boolean = true;\n\n  isLoading: boolean = true;\n  localStaff: Array<SeriesStaff> = [];\n  externalSeries: ExternalSeriesDetail | undefined;\n  localSeries: SeriesMetadata | undefined;\n  url: string = '';\n  wantToRead: boolean = false;\n\n  private readonly activeOffcanvas = inject(NgbActiveOffcanvas);\n  private readonly seriesService = inject(SeriesService);\n  private readonly imageService = inject(ImageService);\n  private readonly actionService = inject(ActionService);\n  private readonly cdRef = inject(ChangeDetectorRef);\n\n  get CoverUrl() {\n    if (this.isExternalSeries) {\n      if (this.externalSeries) return this.externalSeries.coverUrl;\n      return this.imageService.placeholderImage;\n    }\n    return this.imageService.getSeriesCoverImage(this.seriesId!);\n  }\n\n\n  ngOnInit() {\n    if (this.isExternalSeries) {\n      this.seriesService.getExternalSeriesDetails(this.aniListId, this.malId).subscribe(externalSeries => {\n        this.externalSeries = externalSeries;\n        this.isLoading = false;\n        if (this.externalSeries.siteUrl) {\n          this.url = this.externalSeries.siteUrl;\n        }\n\n        this.cdRef.markForCheck();\n      });\n    } else {\n      this.seriesService.getMetadata(this.seriesId!).subscribe(data => {\n        this.localSeries = data;\n\n        // Consider the localSeries has no metadata, try to merge the external Series metadata\n        if (this.localSeries.summary === '' && this.localSeries.genres.length === 0) {\n          this.seriesService.getExternalSeriesDetails(0, 0, this.seriesId).subscribe(externalSeriesData => {\n            this.isExternalSeries = true;\n            this.externalSeries = externalSeriesData;\n            this.cdRef.markForCheck();\n          })\n        }\n\n        this.seriesService.isWantToRead(this.seriesId!).subscribe(wantToRead => {\n          this.wantToRead = wantToRead;\n          this.cdRef.markForCheck();\n        });\n\n        this.isLoading = false;\n        this.url = 'library/' + this.libraryId + '/series/' + this.seriesId;\n        this.localStaff = data.writers.map(p => {\n          return {name: p.name, role: 'Story & Art'} as SeriesStaff;\n        });\n        this.cdRef.markForCheck();\n      });\n    }\n\n  }\n\n  toggleWantToRead() {\n    if (this.wantToRead) {\n      this.actionService.removeMultipleSeriesFromWantToReadList([this.seriesId!]);\n    } else {\n      this.actionService.addMultipleSeriesToWantToReadList([this.seriesId!]);\n    }\n\n    this.wantToRead = !this.wantToRead;\n    this.cdRef.markForCheck();\n  }\n\n  close() {\n    this.activeOffcanvas.close();\n  }\n}\n", "<ng-container *transloco=\"let t\">\n  <div class=\"offcanvas-header\">\n    <h5 class=\"offcanvas-title\">\n      {{name}}\n\n    </h5>\n    <button type=\"button\" class=\"btn-close text-reset\" [attr.aria-label]=\"t('common.close')\" (click)=\"close()\"></button>\n  </div>\n\n  <div class=\"offcanvas-body\">\n    <ng-container *ngIf=\"CoverUrl as coverUrl\">\n      <div style=\"width: 160px\" class=\"mx-auto mb-3\">\n        <app-image *ngIf=\"coverUrl\" height=\"230px\" width=\"160px\" maxHeight=\"230px\" objectFit=\"contain\" [imageUrl]=\"coverUrl\"></app-image>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"externalSeries; else localSeriesBody\">\n      <div *ngIf=\"(externalSeries.volumeCount || 0) > 0 || (externalSeries.chapterCount || 0) > 0\" class=\"text-muted muted mb-2\">\n        {{t('series-preview-drawer.vols-and-chapters', {volCount: externalSeries.volumeCount, chpCount: externalSeries.chapterCount})}}\n      </div>\n\n      @if(isExternalSeries && externalSeries) {\n        <div class=\"text-muted muted mb-2\">\n          {{t('series-preview-drawer.provided-by-label')}}\n          <img class=\"ms-1\" [ngSrc]=\"externalSeries.provider | providerImage\" width=\"20\" height=\"20\" alt=\"\">\n        </div>\n      }\n\n      <app-read-more *ngIf=\"externalSeries.summary\" [maxLength]=\"300\" [text]=\"externalSeries.summary\"></app-read-more>\n\n      <div class=\"mt-3\">\n        <app-metadata-detail [tags]=\"externalSeries.genres\" [libraryId]=\"0\"  [heading]=\"t('series-preview-drawer.genres-label')\">\n          <ng-template #itemTemplate let-item>\n            <app-tag-badge>\n              {{item}}\n            </app-tag-badge>\n          </ng-template>\n        </app-metadata-detail>\n      </div>\n\n      <div class=\"mt-3\">\n        <app-metadata-detail [tags]=\"externalSeries.tags\" [libraryId]=\"0\"  [heading]=\"t('series-preview-drawer.tags-label')\">\n          <ng-template #itemTemplate let-item>\n            <app-tag-badge>\n              {{item.name}}\n            </app-tag-badge>\n          </ng-template>\n        </app-metadata-detail>\n      </div>\n\n      <div class=\"mt-3\">\n        <app-metadata-detail [tags]=\"externalSeries.staff\" [libraryId]=\"0\"  [heading]=\"t('series-preview-drawer.staff-label')\">\n          <ng-template #itemTemplate let-item>\n            <div class=\"card mb-3\" style=\"max-width: 180px;\">\n              <div class=\"row g-0\">\n                <div class=\"col-md-4\">\n                  <ng-container *ngIf=\"item.imageUrl && !item.imageUrl.endsWith('default.jpg'); else localPerson\">\n                    <app-image height=\"24px\" width=\"24px\" objectFit=\"contain\" [imageUrl]=\"item.imageUrl\" classes=\"person-img\"></app-image>\n                  </ng-container>\n                  <ng-template #localPerson>\n                    <i class=\"fa fa-user-circle align-self-center person-img\" style=\"font-size: 28px;\" aria-hidden=\"true\"></i>\n                  </ng-template>\n                </div>\n                <div class=\"col-md-8\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title\">{{item.name}}</h6>\n                    <p class=\"card-text\" style=\"font-size: 14px\"><small class=\"text-muted\">{{item.role}}</small></p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </app-metadata-detail>\n      </div>\n    </ng-container>\n\n    <ng-template #localSeriesBody>\n      <ng-container *ngIf=\"localSeries\">\n        <div class=\"d-inline-block mb-2\" style=\"width: 100%\">\n          <span class=\"text-muted muted\">{{localSeries.publicationStatus | publicationStatus}}</span>\n          <button class=\"btn btn-secondary btn-sm float-end me-3\"\n                  (click)=\"toggleWantToRead()\"\n                  ngbTooltip=\"{{wantToRead ? t('series-preview-drawer.remove-from-want-to-read') : t('series-preview-drawer.add-to-want-to-read')}}\">\n            <i class=\"{{wantToRead ? 'fa-solid' : 'fa-regular'}} fa-star\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n        <app-read-more [maxLength]=\"300\" [text]=\"localSeries.summary\"></app-read-more>\n\n        <div class=\"mt-3\">\n          <app-metadata-detail [tags]=\"localSeries.genres\" [libraryId]=\"0\"  [heading]=\"t('series-preview-drawer.genres-label')\">\n            <ng-template #itemTemplate let-item>\n              <app-tag-badge>\n                {{item.title}}\n              </app-tag-badge>\n            </ng-template>\n          </app-metadata-detail>\n        </div>\n\n        <div class=\"mt-3\">\n          <app-metadata-detail [tags]=\"localSeries.tags\" [libraryId]=\"0\" [heading]=\"t('series-preview-drawer.tags-label')\">\n            <ng-template #itemTemplate let-item>\n              <app-tag-badge>\n                {{item.title}}\n              </app-tag-badge>\n            </ng-template>\n          </app-metadata-detail>\n        </div>\n\n        <div class=\"mt-3\">\n          <app-metadata-detail [tags]=\"localStaff\" [libraryId]=\"0\" [heading]=\"t('series-preview-drawer.staff-label')\">\n            <ng-template #itemTemplate let-item>\n              <div class=\"card mb-3\" style=\"max-width: 180px;\">\n                <div class=\"row g-0\">\n                  <div class=\"col-md-4\">\n                    <i class=\"fa fa-user-circle align-self-center\" style=\"font-size: 28px; margin-top: 24px; margin-left: 24px\" aria-hidden=\"true\"></i>\n                  </div>\n                  <div class=\"col-md-8\">\n                    <div class=\"card-body\">\n                      <h6 class=\"card-title\">{{item.name}}</h6>\n                      <p class=\"card-text\" style=\"font-size: 14px\"><small class=\"text-muted\">{{item.role}}</small></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </app-metadata-detail>\n        </div>\n\n      </ng-container>\n    </ng-template>\n\n    <app-loading [loading]=\"isLoading\"></app-loading>\n\n    <a class=\"btn btn-primary col-12 mt-2\" [href]=\"url\" target=\"_blank\" rel=\"noopener noreferrer\">\n      {{t('series-preview-drawer.view-series')}}\n    </a>\n  </div>\n</ng-container>\n", "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter, inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NgbModal, NgbOffcanvas} from '@ng-bootstrap/ng-bootstrap';\nimport {ToastrService} from 'ngx-toastr';\nimport {Series} from 'src/app/_models/series';\nimport {ImageService} from 'src/app/_services/image.service';\nimport {Action, ActionFactoryService, ActionItem} from 'src/app/_services/action-factory.service';\nimport {SeriesService} from 'src/app/_services/series.service';\nimport {ActionService} from 'src/app/_services/action.service';\nimport {EditSeriesModalComponent} from '../_modals/edit-series-modal/edit-series-modal.component';\nimport {RelationKind} from 'src/app/_models/series-detail/relation-kind';\nimport {CommonModule} from \"@angular/common\";\nimport {CardItemComponent} from \"../card-item/card-item.component\";\nimport {RelationshipPipe} from \"../../_pipes/relationship.pipe\";\nimport {Device} from \"../../_models/device/device\";\nimport {translate, TranslocoService} from \"@ngneat/transloco\";\nimport {SeriesPreviewDrawerComponent} from \"../../_single-module/series-preview-drawer/series-preview-drawer.component\";\n\nfunction deepClone(obj: any): any {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (obj instanceof Array) {\n    return obj.map(item => deepClone(item));\n  }\n\n  const clonedObj: any = {};\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        clonedObj[key] = deepClone(obj[key]);\n      } else {\n        clonedObj[key] = obj[key];\n      }\n    }\n  }\n\n  return clonedObj;\n}\n\n@Component({\n  selector: 'app-series-card',\n  standalone: true,\n  imports: [CommonModule, CardItemComponent, RelationshipPipe],\n  templateUrl: './series-card.component.html',\n  styleUrls: ['./series-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SeriesCardComponent implements OnInit, OnChanges {\n  @Input({required: true}) data!: Series;\n  @Input() libraryId = 0;\n  @Input() suppressLibraryLink = false;\n  /**\n   * If the entity is selected or not.\n   */\n  @Input() selected: boolean = false;\n  /**\n   * If the entity should show selection code\n   */\n  @Input() allowSelection: boolean = false;\n  /**\n   * If the Series has a relationship to display\n   */\n  @Input() relation: RelationKind | undefined = undefined;\n  /**\n   * When a series card is shown on deck, a special actionable is added to the list\n   */\n  @Input() isOnDeck: boolean = false;\n  /**\n   * Opens a drawer with a preview of the metadata for this series\n   */\n  @Input() previewOnClick: boolean = false;\n\n  @Output() clicked = new EventEmitter<Series>();\n  /**\n   * Emits when a reload needs to occur and the id of the entity\n   */\n  @Output() reload = new EventEmitter<number>();\n  @Output() dataChanged = new EventEmitter<Series>();\n  /**\n   * When the card is selected.\n   */\n  @Output() selection = new EventEmitter<boolean>();\n\n  actions: ActionItem<Series>[] = [];\n  imageUrl: string = '';\n\n  private readonly offcanvasService = inject(NgbOffcanvas);\n\n  constructor(private router: Router, private cdRef: ChangeDetectorRef,\n              private seriesService: SeriesService, private toastr: ToastrService,\n              private modalService: NgbModal, private imageService: ImageService,\n              private actionFactoryService: ActionFactoryService,\n              private actionService: ActionService) {}\n\n\n  ngOnInit(): void {\n    if (this.data) {\n      this.imageUrl = this.imageService.getSeriesCoverImage(this.data.id);\n      this.cdRef.markForCheck();\n    }\n  }\n\n  ngOnChanges(changes: any) {\n    if (this.data) {\n      this.actions = [...this.actionFactoryService.getSeriesActions((action: ActionItem<Series>, series: Series) => this.handleSeriesActionCallback(action, series))];\n      if (this.isOnDeck) {\n        const othersIndex = this.actions.findIndex(obj => obj.title === 'others');\n        const othersAction = deepClone(this.actions[othersIndex]) as ActionItem<Series>;\n        if (othersAction.children.findIndex(o => o.action === Action.RemoveFromOnDeck) < 0) {\n          othersAction.children.push({\n            action: Action.RemoveFromOnDeck,\n            title: 'remove-from-on-deck',\n            callback: (action: ActionItem<Series>, series: Series) => this.handleSeriesActionCallback(action, series),\n            class: 'danger',\n            requiresAdmin: false,\n            children: [],\n          });\n          this.actions[othersIndex] = othersAction;\n        }\n      }\n      this.cdRef.markForCheck();\n    }\n  }\n\n  handleSeriesActionCallback(action: ActionItem<Series>, series: Series) {\n    switch (action.action) {\n      case(Action.MarkAsRead):\n        this.markAsRead(series);\n        break;\n      case(Action.MarkAsUnread):\n        this.markAsUnread(series);\n        break;\n      case(Action.Scan):\n        this.scanLibrary(series);\n        break;\n      case(Action.RefreshMetadata):\n        this.refreshMetadata(series);\n        break;\n      case(Action.Delete):\n        this.deleteSeries(series);\n        break;\n      case(Action.Edit):\n        this.openEditModal(series);\n        break;\n      case(Action.AddToReadingList):\n        this.actionService.addSeriesToReadingList(series);\n        break;\n      case Action.AddToWantToReadList:\n        this.actionService.addMultipleSeriesToWantToReadList([series.id]);\n        break;\n      case Action.RemoveFromWantToReadList:\n        this.actionService.removeMultipleSeriesFromWantToReadList([series.id]);\n        if (this.router.url.startsWith('/want-to-read')) {\n          this.reload.emit(series.id);\n        }\n        break;\n      case(Action.AddToCollection):\n        this.actionService.addMultipleSeriesToCollectionTag([series]);\n        break;\n      case (Action.AnalyzeFiles):\n        this.actionService.analyzeFilesForSeries(series);\n        break;\n      case Action.SendTo:\n        const device = (action._extra!.data as Device);\n        this.actionService.sendSeriesToDevice(series.id, device);\n        break;\n      case Action.RemoveFromOnDeck:\n        this.seriesService.removeFromOnDeck(series.id).subscribe(() => this.reload.emit(series.id));\n        break;\n      default:\n        break;\n    }\n  }\n\n  openEditModal(data: Series) {\n    const modalRef = this.modalService.open(EditSeriesModalComponent, {  size: 'lg' });\n    modalRef.componentInstance.series = data;\n    modalRef.closed.subscribe((closeResult: {success: boolean, series: Series, coverImageUpdate: boolean}) => {\n      if (closeResult.success) {\n        this.seriesService.getSeries(data.id).subscribe(series => {\n          this.data = series;\n          this.cdRef.markForCheck();\n          this.reload.emit(series.id);\n          this.dataChanged.emit(series);\n        });\n      }\n    });\n  }\n\n  async refreshMetadata(series: Series) {\n    await this.actionService.refreshMetdata(series);\n  }\n\n  async scanLibrary(series: Series) {\n    this.seriesService.scan(series.libraryId, series.id).subscribe((res: any) => {\n      this.toastr.success(translate('toasts.scan-queued', {name: series.name}));\n    });\n  }\n\n  async deleteSeries(series: Series) {\n    await this.actionService.deleteSeries(series, (result: boolean) => {\n      if (result) {\n        this.reload.emit(series.id);\n      }\n    });\n  }\n\n  markAsUnread(series: Series) {\n    this.actionService.markSeriesAsUnread(series, () => {\n      if (this.data) {\n        this.data.pagesRead = 0;\n        this.cdRef.markForCheck();\n      }\n\n      this.dataChanged.emit(series);\n    });\n  }\n\n  markAsRead(series: Series) {\n    this.actionService.markSeriesAsRead(series, () => {\n      if (this.data) {\n        this.data.pagesRead = series.pages;\n        this.cdRef.markForCheck();\n      }\n      this.dataChanged.emit(series);\n    });\n  }\n\n  handleClick() {\n    if (this.previewOnClick) {\n      const ref = this.offcanvasService.open(SeriesPreviewDrawerComponent, {position: 'end', panelClass: 'navbar-offset'});\n      ref.componentInstance.isExternalSeries = false;\n      ref.componentInstance.seriesId = this.data.id;\n      ref.componentInstance.libraryId = this.data.libraryId;\n      ref.componentInstance.name = this.data.name;\n      return;\n    }\n    this.clicked.emit(this.data);\n    this.router.navigate(['library', this.libraryId, 'series', this.data?.id]);\n  }\n\n}\n", "<ng-container *ngIf=\"data !== undefined\">\n    <app-card-item [title]=\"data.name\" [actions]=\"actions\" [suppressLibraryLink]=\"suppressLibraryLink\" [imageUrl]=\"imageUrl\" \n    [entity]=\"data\" [total]=\"data.pages\" [read]=\"data.pagesRead\" (clicked)=\"handleClick()\"\n    [allowSelection]=\"allowSelection\" (selection)=\"selection.emit(selected)\" [selected]=\"selected\"\n    [overlayInformation]=\"(relation | relationship)\"\n    ></app-card-item>\n</ng-container>"],
  "mappings": "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",
  "names": ["ProviderImagePipe", "transform", "value", "ScrobbleProvider", "AniList", "Mal", "GoogleBooks", "Kavita", "pure", "standalone", "_ProviderImagePipe", "A11yClickDirective", "constructor", "element", "ngOnInit", "keyCodes", "keyCodeArray", "split", "onEvent", "event", "keyCodeCondition", "that", "flag", "keyCode", "which", "charCode", "indexOf", "toString", "length", "nativeElement", "click", "preventDefault", "\u0275\u0275directiveInject", "ElementRef", "selectors", "hostBindings", "rf", "ctx", "\u0275\u0275listener", "$event", "_A11yClickDirective", "\u0275\u0275elementContainer", "\u0275\u0275property", "ctx_r2", "itemTemplate", "\u0275\u0275pureFunction2", "_c1", "item_r1", "i_r2", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r4", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleVisible", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "t_r5", "\u0275\u0275pureFunction1", "_c2", "itemsLeft", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "BadgeExpanderComponent_ng_container_0_ng_container_3_Template", "BadgeExpanderComponent_ng_container_0_button_4_Template", "visibleItems", "isCollapsed", "BadgeExpanderComponent", "constructor", "cdRef", "inject", "ChangeDetectorRef", "items", "itemsTillExpander", "Math", "max", "length", "ngOnInit", "slice", "markForCheck", "selectors", "contentQueries", "rf", "ctx", "dirIndex", "BadgeExpanderComponent_ng_container_0_Template", "CommonModule", "NgForOf", "NgIf", "NgTemplateOutlet", "TranslocoDirective", "styles", "changeDetection", "_BadgeExpanderComponent", "\u0275\u0275elementContainerStart", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "item_r2", "\u0275\u0275nextContext", "$implicit", "ctx_r2", "\u0275\u0275resetView", "goTo", "queryParam", "id", "\u0275\u0275elementContainer", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "itemTemplate", "\u0275\u0275pureFunction2", "_c2", "position_r5", "_r6", "TagBadgeCursor", "Clickable", "titleTemplate", "\u0275\u0275template", "MetadataDetailComponent_div_0_ng_template_6_ng_container_0_Template", "MetadataDetailComponent_div_0_ng_template_6_ng_template_1_Template", "\u0275\u0275templateRefExtractor", "useTitle_r7", "\u0275\u0275text", "MetadataDetailComponent_div_0_ng_template_6_Template", "\u0275\u0275textInterpolate", "heading", "tags", "utilityService", "getActiveBreakpoint", "Breakpoint", "Desktop", "MetadataDetailComponent", "constructor", "filterUtilityService", "inject", "FilterUtilitiesService", "UtilityService", "FilterField", "None", "queryParamName", "filter", "applyFilter", "libraryId", "FilterComparison", "Equal", "subscribe", "selectors", "contentQueries", "rf", "ctx", "dirIndex", "MetadataDetailComponent_div_0_Template", "length", "CommonModule", "NgIf", "NgTemplateOutlet", "A11yClickDirective", "BadgeExpanderComponent", "TagBadgeComponent", "styles", "changeDetection", "_MetadataDetailComponent", "\u0275\u0275elementContainerStart", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "staff", "imageUrl", "\u0275\u0275elementStart", "\u0275\u0275template", "PersonBadgeComponent_div_0_ng_container_2_Template", "PersonBadgeComponent_div_0_ng_template_3_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275text", "\u0275\u0275elementEnd", "isStaff", "endsWith", "localPerson_r2", "\u0275\u0275textInterpolate1", "person", "name", "PersonBadgeComponent", "constructor", "cdRef", "inject", "ChangeDetectorRef", "ngOnInit", "markForCheck", "selectors", "inputs", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "PersonBadgeComponent_div_0_Template", "undefined", "CommonModule", "NgIf", "ImageComponent", "styles", "changeDetection", "_PersonBadgeComponent", "\u0275\u0275element", "\u0275\u0275property", "coverUrl_r3", "\u0275\u0275elementContainerStart", "\u0275\u0275elementStart", "\u0275\u0275template", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_6_app_image_2_Template", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275text", "\u0275\u0275textInterpolate1", "t_r4", "\u0275\u0275pureFunction2", "_c0", "ctx_r1", "externalSeries", "volumeCount", "chapterCount", "\u0275\u0275pipeBind1", "provider", "summary", "item_r5", "item_r6", "name", "item_r7", "imageUrl", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_ng_template_14_ng_container_3_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_ng_template_14_ng_template_4_Template", "\u0275\u0275templateRefExtractor", "endsWith", "localPerson_r8", "\u0275\u0275textInterpolate", "role", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_div_1_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_Conditional_2_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_app_read_more_3_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_ng_template_6_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_ng_template_10_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_ng_template_14_Template", "\u0275\u0275conditional", "isExternalSeries", "genres", "tags", "staff", "item_r10", "title", "item_r11", "item_r12", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r9", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleWantToRead", "SeriesPreviewDrawerComponent_ng_container_0_ng_template_8_ng_container_0_ng_template_10_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_template_8_ng_container_0_ng_template_14_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_template_8_ng_container_0_ng_template_18_Template", "localSeries", "publicationStatus", "\u0275\u0275propertyInterpolate", "wantToRead", "\u0275\u0275classMapInterpolate1", "localStaff", "SeriesPreviewDrawerComponent_ng_container_0_ng_template_8_ng_container_0_Template", "_r1", "close", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_6_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_container_7_Template", "SeriesPreviewDrawerComponent_ng_container_0_ng_template_8_Template", "CoverUrl", "localSeriesBody_r13", "isLoading", "url", "\u0275\u0275sanitizeUrl", "SeriesPreviewDrawerComponent", "constructor", "libraryId", "activeOffcanvas", "inject", "NgbActiveOffcanvas", "seriesService", "SeriesService", "imageService", "ImageService", "actionService", "ActionService", "cdRef", "ChangeDetectorRef", "coverUrl", "placeholderImage", "getSeriesCoverImage", "seriesId", "ngOnInit", "getExternalSeriesDetails", "aniListId", "malId", "subscribe", "siteUrl", "markForCheck", "getMetadata", "data", "length", "externalSeriesData", "isWantToRead", "writers", "map", "p", "removeMultipleSeriesFromWantToReadList", "addMultipleSeriesToWantToReadList", "selectors", "inputs", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "SeriesPreviewDrawerComponent_ng_container_0_Template", "CommonModule", "NgIf", "TranslocoDirective", "ImageComponent", "LoadingComponent", "MetadataDetailComponent", "TagBadgeComponent", "PublicationStatusPipe", "ReadMoreComponent", "NgbTooltip", "NgOptimizedImage", "ProviderImagePipe", "styles", "changeDetection", "_SeriesPreviewDrawerComponent", "\u0275\u0275elementContainerStart", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "handleClick", "selection", "emit", "selected", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "data", "name", "actions", "suppressLibraryLink", "imageUrl", "pages", "pagesRead", "allowSelection", "\u0275\u0275pipeBind1", "relation", "deepClone", "obj", "Array", "map", "item", "clonedObj", "key", "Object", "prototype", "hasOwnProperty", "call", "SeriesCardComponent", "constructor", "router", "cdRef", "seriesService", "toastr", "modalService", "imageService", "actionFactoryService", "actionService", "libraryId", "undefined", "isOnDeck", "previewOnClick", "clicked", "EventEmitter", "reload", "dataChanged", "offcanvasService", "inject", "NgbOffcanvas", "ngOnInit", "getSeriesCoverImage", "id", "markForCheck", "ngOnChanges", "changes", "getSeriesActions", "action", "series", "handleSeriesActionCallback", "othersIndex", "findIndex", "title", "othersAction", "children", "o", "Action", "RemoveFromOnDeck", "push", "callback", "class", "requiresAdmin", "MarkAsRead", "markAsRead", "MarkAsUnread", "markAsUnread", "Scan", "scanLibrary", "RefreshMetadata", "refreshMetadata", "Delete", "deleteSeries", "Edit", "openEditModal", "AddToReadingList", "addSeriesToReadingList", "AddToWantToReadList", "addMultipleSeriesToWantToReadList", "RemoveFromWantToReadList", "removeMultipleSeriesFromWantToReadList", "url", "startsWith", "AddToCollection", "addMultipleSeriesToCollectionTag", "AnalyzeFiles", "analyzeFilesForSeries", "SendTo", "device", "_extra", "sendSeriesToDevice", "removeFromOnDeck", "subscribe", "modalRef", "open", "EditSeriesModalComponent", "size", "componentInstance", "closed", "closeResult", "success", "getSeries", "__async", "refreshMetdata", "scan", "res", "translate", "result", "markSeriesAsUnread", "markSeriesAsRead", "ref", "SeriesPreviewDrawerComponent", "position", "panelClass", "isExternalSeries", "seriesId", "navigate", "\u0275\u0275directiveInject", "Router", "ChangeDetectorRef", "SeriesService", "ToastrService", "NgbModal", "ImageService", "ActionFactoryService", "ActionService", "selectors", "inputs", "outputs", "standalone", "features", "\u0275\u0275NgOnChangesFeature", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "SeriesCardComponent_ng_container_0_Template", "CommonModule", "NgIf", "CardItemComponent", "RelationshipPipe", "styles", "changeDetection", "_SeriesCardComponent"]
}
