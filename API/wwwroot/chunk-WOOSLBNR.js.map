{
  "version": 3,
  "sources": ["src/app/user-settings/user-holds/user-holds.component.ts", "src/app/user-settings/user-holds/user-holds.component.html"],
  "sourcesContent": ["import {ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ScrobblingService} from \"../../_services/scrobbling.service\";\nimport {shareReplay} from \"rxjs/operators\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {ScrobbleEventTypePipe} from \"../../_single-module/scrobble-event-type.pipe\";\n\nimport {\n  NgbAccordionBody,\n  NgbAccordionCollapse,\n  NgbAccordionDirective, NgbAccordionHeader,\n  NgbAccordionItem\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\n\n@Component({\n  selector: 'app-user-holds',\n  standalone: true,\n    imports: [CommonModule, ScrobbleEventTypePipe, NgbAccordionDirective, NgbAccordionCollapse, NgbAccordionBody, NgbAccordionItem, NgbAccordionHeader, TranslocoDirective],\n  templateUrl: './user-holds.component.html',\n  styleUrls: ['./user-holds.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserHoldsComponent {\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly scrobblingService = inject(ScrobblingService);\n  private readonly destroyRef = inject(DestroyRef);\n  holds$ = this.scrobblingService.getHolds().pipe(takeUntilDestroyed(this.destroyRef), shareReplay());\n}\n", "<ng-container *transloco=\"let t; read:'user-holds'\">\n  <h5>{{t('title')}}</h5>\n  <p>{{t('description')}}</p>\n\n  <div class=\"row g-0\">\n    <ul class=\"list-group mb-2\">\n      <li class=\"list-group-item list-group-item-light\" *ngFor=\"let hold of holds$ | async\">\n        <a class=\"btn-link\" href=\"/library/{{hold.libraryId}}/series/{{hold.seriesId}}\" target=\"_blank\">{{hold.seriesName}}</a>\n      </li>\n    </ul>\n  </div>\n\n</ng-container>\n"],
  "mappings": "6XCMMA,EAAA,EAAA,KAAA,CAAA,EAAsF,EAAA,IAAA,CAAA,EACYC,EAAA,CAAA,EAAmBC,EAAA,EAAI,0BAAnGC,EAAA,EAAAC,EAAA,OAAA,YAAAC,EAAAC,UAAA,WAAAD,EAAAE,SAAA,GAAAC,CAAA,EAA4EL,EAAA,EAAAM,EAAAJ,EAAAK,UAAA,4BAPxGC,EAAA,CAAA,EACEX,EAAA,EAAA,IAAA,EAAIC,EAAA,CAAA,EAAcC,EAAA,EAClBF,EAAA,EAAA,GAAA,EAAGC,EAAA,CAAA,EAAoBC,EAAA,EAEvBF,EAAA,EAAA,MAAA,CAAA,EAAqB,EAAA,KAAA,CAAA,EAEjBY,EAAA,EAAAC,EAAA,EAAA,EAAA,KAAA,CAAA,eAGFX,EAAA,EAAK,oCARHC,EAAA,CAAA,EAAAM,EAAAK,EAAA,OAAA,CAAA,EACDX,EAAA,CAAA,EAAAM,EAAAK,EAAA,aAAA,CAAA,EAIoEX,EAAA,CAAA,EAAAY,EAAA,UAAAC,EAAA,EAAA,EAAAC,EAAAC,MAAA,CAAA,GDiBzE,IAAaC,GAAkB,IAAA,CAAzB,IAAOA,EAAP,MAAOA,CAAkB,CAR/BC,aAAA,CASmB,KAAAC,MAAQC,EAAOC,CAAiB,EAChC,KAAAC,kBAAoBF,EAAOG,CAAiB,EAC5C,KAAAC,WAAaJ,EAAOK,CAAU,EAC/C,KAAAT,OAAS,KAAKM,kBAAkBI,SAAQ,EAAGC,KAAKC,EAAmB,KAAKJ,UAAU,EAAGK,EAAW,CAAE,0CAJvFZ,EAAkB,sBAAlBA,EAAkBa,UAAA,CAAA,CAAA,gBAAA,CAAA,EAAAC,WAAA,GAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,YAAA,eAAA,EAAA,CAAA,EAAA,MAAA,KAAA,EAAA,CAAA,EAAA,aAAA,MAAA,EAAA,CAAA,QAAA,wCAAA,EAAA,QAAA,SAAA,EAAA,CAAA,EAAA,kBAAA,uBAAA,EAAA,CAAA,SAAA,SAAA,EAAA,WAAA,EAAA,MAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCvB/B5B,EAAA,EAAA8B,EAAA,EAAA,EAAA,eAAA,CAAA,OAAiC3B,EAAA,gBAAA,YAAA,iBDkBnB4B,EAAYC,EAAAC,EAA8HC,CAAkB,EAAAC,OAAA,CAAA,+DAAA,EAAAC,gBAAA,CAAA,CAAA,EAKpK,IAAO7B,EAAP8B,SAAO9B,CAAkB,GAAA",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate2", "hold_r1", "libraryId", "seriesId", "\u0275\u0275sanitizeUrl", "\u0275\u0275textInterpolate", "seriesName", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "UserHoldsComponent_ng_container_0_li_7_Template", "t_r2", "\u0275\u0275property", "\u0275\u0275pipeBind1", "ctx_r2", "holds$", "UserHoldsComponent", "constructor", "cdRef", "inject", "ChangeDetectorRef", "scrobblingService", "ScrobblingService", "destroyRef", "DestroyRef", "getHolds", "pipe", "takeUntilDestroyed", "shareReplay", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "UserHoldsComponent_ng_container_0_Template", "CommonModule", "NgForOf", "AsyncPipe", "TranslocoDirective", "styles", "changeDetection", "_UserHoldsComponent"]
}
