{
  "version": 3,
  "sources": ["src/app/_services/dashboard.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport {TextResonse} from \"../_types/text-response\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {DashboardStream} from \"../_models/dashboard/dashboard-stream\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  baseUrl = environment.apiUrl;\n  constructor(private httpClient: HttpClient) { }\n\n  getDashboardStreams(visibleOnly = true) {\n    return this.httpClient.get<Array<DashboardStream>>(this.baseUrl + 'stream/dashboard?visibleOnly=' + visibleOnly);\n  }\n\n  updateDashboardStreamPosition(streamName: string, dashboardStreamId: number, fromPosition: number, toPosition: number) {\n    return this.httpClient.post(this.baseUrl + 'stream/update-dashboard-position', {streamName, id: dashboardStreamId, fromPosition, toPosition}, TextResonse);\n  }\n\n  updateDashboardStream(stream: DashboardStream) {\n    return this.httpClient.post(this.baseUrl + 'stream/update-dashboard-stream', stream, TextResonse);\n  }\n\n  createDashboardStream(smartFilterId: number) {\n    return this.httpClient.post<DashboardStream>(this.baseUrl + 'stream/add-dashboard-stream?smartFilterId=' + smartFilterId, {});\n  }\n}\n"],
  "mappings": "yEASA,IAAaA,GAAgB,IAAA,CAAvB,IAAOA,EAAP,MAAOA,CAAgB,CAE3BC,YAAoBC,EAAsB,CAAtB,KAAAA,WAAAA,EADpB,KAAAC,QAAUC,EAAYC,MACwB,CAE9CC,oBAAoBC,EAAc,GAAI,CACpC,OAAO,KAAKL,WAAWM,IAA4B,KAAKL,QAAU,gCAAkCI,CAAW,CACjH,CAEAE,8BAA8BC,EAAoBC,EAA2BC,EAAsBC,EAAkB,CACnH,OAAO,KAAKX,WAAWY,KAAK,KAAKX,QAAU,mCAAoC,CAACO,WAAAA,EAAYK,GAAIJ,EAAmBC,aAAAA,EAAcC,WAAAA,CAAU,EAAGG,CAAW,CAC3J,CAEAC,sBAAsBC,EAAuB,CAC3C,OAAO,KAAKhB,WAAWY,KAAK,KAAKX,QAAU,iCAAkCe,EAAQF,CAAW,CAClG,CAEAG,sBAAsBC,EAAqB,CACzC,OAAO,KAAKlB,WAAWY,KAAsB,KAAKX,QAAU,6CAA+CiB,EAAe,CAAA,CAAE,CAC9H,yCAlBWpB,GAAgBqB,EAAAC,CAAA,CAAA,CAAA,wBAAhBtB,EAAgBuB,QAAhBvB,EAAgBwB,UAAAC,WAFf,MAAM,CAAA,EAEd,IAAOzB,EAAP0B,SAAO1B,CAAgB,GAAA",
  "names": ["DashboardService", "constructor", "httpClient", "baseUrl", "environment", "apiUrl", "getDashboardStreams", "visibleOnly", "get", "updateDashboardStreamPosition", "streamName", "dashboardStreamId", "fromPosition", "toPosition", "post", "id", "TextResonse", "updateDashboardStream", "stream", "createDashboardStream", "smartFilterId", "\u0275\u0275inject", "HttpClient", "factory", "\u0275fac", "providedIn", "_DashboardService"]
}
