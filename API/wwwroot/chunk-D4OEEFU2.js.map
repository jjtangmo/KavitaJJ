{
  "version": 3,
  "sources": ["src/app/_pipes/site-theme-provider.pipe.ts", "src/app/user-settings/theme-manager/theme-manager.component.ts", "src/app/user-settings/theme-manager/theme-manager.component.html"],
  "sourcesContent": ["import {inject, Pipe, PipeTransform} from '@angular/core';\nimport { ThemeProvider } from 'src/app/_models/preferences/site-theme';\nimport {TranslocoService} from \"@ngneat/transloco\";\n\n\n@Pipe({\n    name: 'siteThemeProvider',\n    standalone: true\n})\nexport class SiteThemeProviderPipe implements PipeTransform {\n\n  translocoService = inject(TranslocoService);\n\n  transform(provider: ThemeProvider | undefined | null): string {\n    if (provider === null || provider === undefined) return '';\n    switch(provider) {\n      case ThemeProvider.System:\n        return this.translocoService.translate('site-theme-provider-pipe.system');\n      case ThemeProvider.User:\n        return this.translocoService.translate('site-theme-provider-pipe.user');\n      default:\n        return '';\n    }\n  }\n\n}\n", "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  inject,\n} from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { distinctUntilChanged, take } from 'rxjs';\nimport { ThemeService } from 'src/app/_services/theme.service';\nimport { SiteTheme } from 'src/app/_models/preferences/site-theme';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport { SiteThemeProviderPipe } from '../../_pipes/site-theme-provider.pipe';\nimport { SentenceCasePipe } from '../../_pipes/sentence-case.pipe';\nimport { NgIf, NgFor, AsyncPipe } from '@angular/common';\nimport {TranslocoDirective, TranslocoService} from \"@ngneat/transloco\";\nimport {tap} from \"rxjs/operators\";\n\n@Component({\n    selector: 'app-theme-manager',\n    templateUrl: './theme-manager.component.html',\n    styleUrls: ['./theme-manager.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [NgIf, NgFor, AsyncPipe, SentenceCasePipe, SiteThemeProviderPipe, TranslocoDirective]\n})\nexport class ThemeManagerComponent {\n\n  currentTheme: SiteTheme | undefined;\n  isAdmin: boolean = false;\n  user: User | undefined;\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly translocService = inject(TranslocoService);\n\n\n  constructor(public themeService: ThemeService, private accountService: AccountService,\n    private toastr: ToastrService, private readonly cdRef: ChangeDetectorRef) {\n\n    themeService.currentTheme$.pipe(takeUntilDestroyed(this.destroyRef), distinctUntilChanged()).subscribe(theme => {\n      this.currentTheme = theme;\n      this.cdRef.markForCheck();\n    });\n\n    accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      if (user) {\n        this.user = user;\n        this.isAdmin = accountService.hasAdminRole(user);\n        this.cdRef.markForCheck();\n      }\n    });\n  }\n\n  applyTheme(theme: SiteTheme) {\n    if (!this.user) return;\n\n    const pref = Object.assign({}, this.user.preferences);\n    pref.theme = theme;\n    this.accountService.updatePreferences(pref).subscribe();\n  }\n\n  updateDefault(theme: SiteTheme) {\n    this.themeService.setDefault(theme.id).subscribe(() => {\n      this.toastr.success(this.translocService.translate('theme-manager.updated-toastr', {name: theme.name}));\n    });\n  }\n\n  scan() {\n    this.themeService.scan().subscribe(() => {\n      this.toastr.info(this.translocService.translate('theme-manager.scan-queued'));\n    });\n  }\n}\n", "<ng-container *transloco=\"let t; read:'theme-manager'\">\n  <div class=\"container-fluid\">\n    <div class=\"row mb-2\">\n      <div class=\"col-8\"><h3>{{t('title')}}</h3></div>\n      <div class=\"col-4\" *ngIf=\"isAdmin\">\n        <button class=\"btn btn-primary float-end\" (click)=\"scan()\">\n          <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>&nbsp;{{t('scan')}}\n        </button>\n      </div>\n    </div>\n\n    <p *ngIf=\"isAdmin\">\n      {{t('looking-for-theme')}}<a href=\"https://github.com/Kareadita/Themes\" target=\"_blank\" rel=\"noopener noreferrer\">{{t('looking-for-theme-continued')}}</a>\n    </p>\n\n    <div class=\"row g-0\">\n      <h4>{{t('site-themes')}}</h4>\n      <ng-container *ngFor=\"let theme of (themeService.themes$ | async)\">\n        <div class=\"card col-auto me-3 mb-3\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{theme.name | sentenceCase}}</h5>\n            <h6 class=\"card-subtitle mb-2 text-muted\">{{theme.provider | siteThemeProvider}}</h6>\n            <button class=\"btn btn-secondary me-2\" [disabled]=\"theme.isDefault\" *ngIf=\"isAdmin\" (click)=\"updateDefault(theme)\">{{t('set-default')}}</button>\n            <button class=\"btn btn-primary\" (click)=\"applyTheme(theme)\" [disabled]=\"currentTheme?.id === theme.id\">{{currentTheme?.id === theme.id ? t('applied') : t('apply')}}</button>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n\n</ng-container>\n"],
  "mappings": "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",
  "names": ["SiteThemeProviderPipe", "constructor", "translocoService", "inject", "TranslocoService", "transform", "provider", "ThemeProvider", "System", "translate", "User", "pure", "standalone", "_SiteThemeProviderPipe", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "scan", "\u0275\u0275element", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "t_r3", "\u0275\u0275textInterpolate", "_r5", "theme_r6", "$implicit", "updateDefault", "\u0275\u0275property", "isDefault", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "ThemeManagerComponent_ng_container_0_ng_container_11_button_9_Template", "_r4", "applyTheme", "\u0275\u0275pipeBind1", "name", "provider", "isAdmin", "currentTheme", "id", "ThemeManagerComponent_ng_container_0_div_6_Template", "ThemeManagerComponent_ng_container_0_p_7_Template", "ThemeManagerComponent_ng_container_0_ng_container_11_Template", "themeService", "themes$", "ThemeManagerComponent", "constructor", "accountService", "toastr", "cdRef", "destroyRef", "inject", "DestroyRef", "translocService", "TranslocoService", "currentTheme$", "pipe", "takeUntilDestroyed", "distinctUntilChanged", "subscribe", "theme", "markForCheck", "currentUser$", "take", "user", "hasAdminRole", "pref", "Object", "assign", "preferences", "updatePreferences", "setDefault", "success", "translate", "info", "\u0275\u0275directiveInject", "ThemeService", "AccountService", "ToastrService", "ChangeDetectorRef", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ThemeManagerComponent_ng_container_0_Template", "NgIf", "NgFor", "AsyncPipe", "SentenceCasePipe", "SiteThemeProviderPipe", "TranslocoDirective", "styles", "changeDetection", "_ThemeManagerComponent"]
}
