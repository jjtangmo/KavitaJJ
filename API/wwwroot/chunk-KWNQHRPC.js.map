{
  "version": 3,
  "sources": ["src/app/_services/member.service.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/auth/member';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n\n  baseUrl = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getMembers(includePending: boolean = false) {\n    return this.httpClient.get<Member[]>(this.baseUrl + 'users?includePending=' + includePending);\n  }\n\n  getMemberNames() {\n    return this.httpClient.get<string[]>(this.baseUrl + 'users/names');\n  }\n\n  adminExists() {\n    return this.httpClient.get<boolean>(this.baseUrl + 'admin/exists');\n  }\n\n  deleteMember(username: string) {\n    return this.httpClient.delete(this.baseUrl + 'users/delete-user?username=' + encodeURIComponent(username));\n  }\n\n  hasLibraryAccess(libraryId: number) {\n    return this.httpClient.get<boolean>(this.baseUrl + 'users/has-library-access?libraryId=' + libraryId);\n  }\n\n  hasReadingProgress(libraryId: number) {\n    return this.httpClient.get<boolean>(this.baseUrl + 'users/has-reading-progress?libraryId=' + libraryId);\n  }\n\n  addSeriesToWantToRead(seriesIds: Array<number>) {\n    return this.httpClient.post<Array<Member>>(this.baseUrl + 'want-to-read/add-series', {seriesIds});\n  }\n\n  removeSeriesToWantToRead(seriesIds: Array<number>) {\n    return this.httpClient.post<Array<Member>>(this.baseUrl + 'want-to-read/remove-series', {seriesIds});\n  }\n\n  getMember() {\n    return this.httpClient.get<Member>(this.baseUrl + 'users/myself');\n  }\n\n}\n"],
  "mappings": "iEAQA,IAAaA,GAAa,IAAA,CAApB,IAAOA,EAAP,MAAOA,CAAa,CAIxBC,YAAoBC,EAAsB,CAAtB,KAAAA,WAAAA,EAFpB,KAAAC,QAAUC,EAAYC,MAEwB,CAE9CC,WAAWC,EAA0B,GAAK,CACxC,OAAO,KAAKL,WAAWM,IAAc,KAAKL,QAAU,wBAA0BI,CAAc,CAC9F,CAEAE,gBAAc,CACZ,OAAO,KAAKP,WAAWM,IAAc,KAAKL,QAAU,aAAa,CACnE,CAEAO,aAAW,CACT,OAAO,KAAKR,WAAWM,IAAa,KAAKL,QAAU,cAAc,CACnE,CAEAQ,aAAaC,EAAgB,CAC3B,OAAO,KAAKV,WAAWW,OAAO,KAAKV,QAAU,8BAAgCW,mBAAmBF,CAAQ,CAAC,CAC3G,CAEAG,iBAAiBC,EAAiB,CAChC,OAAO,KAAKd,WAAWM,IAAa,KAAKL,QAAU,sCAAwCa,CAAS,CACtG,CAEAC,mBAAmBD,EAAiB,CAClC,OAAO,KAAKd,WAAWM,IAAa,KAAKL,QAAU,wCAA0Ca,CAAS,CACxG,CAEAE,sBAAsBC,EAAwB,CAC5C,OAAO,KAAKjB,WAAWkB,KAAoB,KAAKjB,QAAU,0BAA2B,CAACgB,UAAAA,CAAS,CAAC,CAClG,CAEAE,yBAAyBF,EAAwB,CAC/C,OAAO,KAAKjB,WAAWkB,KAAoB,KAAKjB,QAAU,6BAA8B,CAACgB,UAAAA,CAAS,CAAC,CACrG,CAEAG,WAAS,CACP,OAAO,KAAKpB,WAAWM,IAAY,KAAKL,QAAU,cAAc,CAClE,yCAxCWH,GAAauB,EAAAC,CAAA,CAAA,CAAA,wBAAbxB,EAAayB,QAAbzB,EAAa0B,UAAAC,WAFZ,MAAM,CAAA,EAEd,IAAO3B,EAAP4B,SAAO5B,CAAa,GAAA",
  "names": ["MemberService", "constructor", "httpClient", "baseUrl", "environment", "apiUrl", "getMembers", "includePending", "get", "getMemberNames", "adminExists", "deleteMember", "username", "delete", "encodeURIComponent", "hasLibraryAccess", "libraryId", "hasReadingProgress", "addSeriesToWantToRead", "seriesIds", "post", "removeSeriesToWantToRead", "getMember", "\u0275\u0275inject", "HttpClient", "factory", "\u0275fac", "providedIn", "_MemberService"]
}
