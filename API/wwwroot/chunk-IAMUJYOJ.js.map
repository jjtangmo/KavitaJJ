{"version":3,"sources":["node_modules/@iplab/ngx-file-upload/fesm2022/iplab-ngx-file-upload.mjs","src/app/_models/reading-list/cbl/cbl-import-result.enum.ts","src/app/reading-list/_components/step-tracker/step-tracker.component.ts","src/app/reading-list/_components/step-tracker/step-tracker.component.html","src/app/_models/reading-list/cbl/cbl-import-reason.enum.ts","src/app/_pipes/cbl-conflict-reason.pipe.ts","src/app/_pipes/cbl-import-result.pipe.ts","src/app/reading-list/_modals/import-cbl-modal/import-cbl-modal.component.ts","src/app/reading-list/_modals/import-cbl-modal/import-cbl-modal.component.html","node_modules/@angular/cdk/fesm2022/a11y.mjs","node_modules/@angular/cdk/fesm2022/drag-drop.mjs","src/app/reading-list/_components/draggable-ordered-list/draggable-ordered-list.component.ts","src/app/reading-list/_components/draggable-ordered-list/draggable-ordered-list.component.html","src/app/reading-list/_components/reading-list-item/reading-list-item.component.ts","src/app/reading-list/_components/reading-list-item/reading-list-item.component.html"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, ElementRef, inject, Renderer2, ChangeDetectorRef, Directive, Component, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, ViewChild, HostBinding, HostListener, Optional, Host, Self, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { style, animate, stagger, query, transition, trigger } from '@angular/animations';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n// -owner-group-others-\n// -rwxrwxrwx = 0777\nfunction FileUploadIconComponent__svg_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 3)(1, \"g\");\n    i0.ɵɵelement(2, \"path\", 4);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileUploadIconComponent__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 3)(1, \"g\");\n    i0.ɵɵelement(2, \"path\", 5);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileUploadIconComponent__svg_svg_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 3)(1, \"g\");\n    i0.ɵɵelement(2, \"path\", 6);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileUploadIconComponent__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 3)(1, \"g\");\n    i0.ɵɵelement(2, \"path\", 7);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FileUploadIconComponent__svg_svg_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 3)(1, \"g\");\n    i0.ɵɵelement(2, \"path\", 8);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = [\"*\"];\nconst _c1 = [\"placeholder\"];\nconst _c2 = [\"item\"];\nconst _c3 = [\"inputRef\"];\nconst _c4 = [\"labelRef\"];\nconst _c5 = (a0, a1, a2, a3) => ({\n  $implicit: a0,\n  file: a1,\n  index: a2,\n  control: a3\n});\nfunction FileUploadComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction FileUploadComponent_ng_template_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"b\");\n    i0.ɵɵtext(2, \"Drag and drop\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" files\");\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5, \" or click here \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FileUploadComponent_ng_template_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"b\");\n    i0.ɵɵtext(1, \"Click here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2, \" to\");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtext(4, \" choose a files \");\n  }\n}\nfunction FileUploadComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"file-upload-drop-zone\");\n    i0.ɵɵtemplate(1, FileUploadComponent_ng_template_3_ng_container_1_Template, 6, 0, \"ng-container\", 9)(2, FileUploadComponent_ng_template_3_ng_template_2_Template, 5, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const isFileDragDropAvailable_r2 = ctx.isFileDragDropAvailable;\n    const isNotDragDropAvailable_r3 = i0.ɵɵreference(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", isFileDragDropAvailable_r2)(\"ngIfElse\", isNotDragDropAvailable_r3);\n  }\n}\nfunction FileUploadComponent_div_7_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction FileUploadComponent_div_7_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUploadComponent_div_7_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 6);\n  }\n  if (rf & 2) {\n    const file_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    i0.ɵɵnextContext();\n    const defaultItemTemplate_r8 = i0.ɵɵreference(4);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.listItem ? ctx_r4.listItem : defaultItemTemplate_r8)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c5, file_r6, file_r6, i_r7, ctx_r4.control));\n  }\n}\nfunction FileUploadComponent_div_7_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"file-upload-list-item\", 12);\n    i0.ɵɵtext(1, \"Remove\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r9 = ctx.index;\n    const file_r10 = ctx.file;\n    const control_r11 = ctx.control;\n    i0.ɵɵproperty(\"index\", i_r9)(\"file\", file_r10)(\"control\", control_r11);\n  }\n}\nfunction FileUploadComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"@insertAnimation.done\", function FileUploadComponent_div_7_Template_div_animation_insertAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.animationListFinished($event));\n    });\n    i0.ɵɵtemplate(1, FileUploadComponent_div_7_ng_template_1_Template, 1, 7, \"ng-template\", 11);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵtemplate(3, FileUploadComponent_div_7_ng_template_3_Template, 2, 3, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@insertAnimation\", ctx_r4.control.size);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 3, ctx_r4.control.valueChanges))(\"ngForTrackBy\", ctx_r4.trackByFn);\n  }\n}\nconst _c6 = [\"overlay\"];\nconst _c7 = [\"file-drop-zone\", \"\"];\nfunction FileUploadAttributeComponent_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction FileUploadAttributeComponent_div_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"file-upload-drop-zone\")(1, \"b\");\n    i0.ɵɵtext(2, \"Drop\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" it here \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FileUploadAttributeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3, 0)(2, \"div\", 4);\n    i0.ɵɵtemplate(3, FileUploadAttributeComponent_div_1_ng_container_3_Template, 1, 0, \"ng-container\", 5)(4, FileUploadAttributeComponent_div_1_ng_template_4_Template, 4, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const defaultTemplate_r1 = i0.ɵɵreference(5);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.templateRef ? ctx_r1.templateRef : defaultTemplate_r1);\n  }\n}\nconst _c8 = [\"button\"];\nconst _c9 = [\"simple\", \"\"];\nconst _c10 = a0 => ({\n  control: a0\n});\nconst _c11 = (a0, a1, a2) => ({\n  $implicit: a0,\n  control: a1,\n  files: a2\n});\nfunction SimpleFileUploadComponent_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction SimpleFileUploadComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, SimpleFileUploadComponent_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const defaultPlaceholderTemplate_r3 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.placeholderRef ? ctx_r1.placeholderRef : defaultPlaceholderTemplate_r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c11, ctx_r1.control.value, ctx_r1.control, ctx_r1.control.value));\n  }\n}\nfunction SimpleFileUploadComponent_ng_template_3_ng_template_0_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \",\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SimpleFileUploadComponent_ng_template_3_ng_template_0_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, SimpleFileUploadComponent_ng_template_3_ng_template_0_ng_template_0_span_0_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const file_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵproperty(\"ngIf\", i_r5 > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r4.name);\n  }\n}\nfunction SimpleFileUploadComponent_ng_template_3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, SimpleFileUploadComponent_ng_template_3_ng_template_0_ng_template_0_Template, 3, 2, \"ng-template\", 11);\n  }\n  if (rf & 2) {\n    const files_r6 = i0.ɵɵnextContext().files;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", files_r6)(\"ngForTrackBy\", ctx_r1.trackByFn);\n  }\n}\nfunction SimpleFileUploadComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, SimpleFileUploadComponent_ng_template_3_ng_template_0_Template, 1, 2, \"ng-template\", 10);\n  }\n  if (rf & 2) {\n    const files_r6 = ctx.files;\n    i0.ɵɵnextContext();\n    const emptyList_r7 = i0.ɵɵreference(6);\n    i0.ɵɵproperty(\"ngIf\", files_r6.length)(\"ngIfElse\", emptyList_r7);\n  }\n}\nfunction SimpleFileUploadComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Select a file... \");\n  }\n}\nfunction SimpleFileUploadComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction SimpleFileUploadComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 16)(3, \"g\");\n    i0.ɵɵelement(4, \"path\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(5, \"span\", 18);\n    i0.ɵɵtext(6, \"Browse\");\n    i0.ɵɵelementEnd()();\n  }\n}\nvar FileAccess = /*#__PURE__*/function (FileAccess) {\n  FileAccess[FileAccess[\"None\"] = 0] = \"None\";\n  FileAccess[FileAccess[\"Read\"] = 4] = \"Read\";\n  FileAccess[FileAccess[\"Write\"] = 2] = \"Write\";\n  FileAccess[FileAccess[\"ReadWrite\"] = 6] = \"ReadWrite\";\n  FileAccess[FileAccess[\"Execute\"] = 1] = \"Execute\";\n  FileAccess[FileAccess[\"ReadWriteExecute\"] = 7] = \"ReadWriteExecute\";\n  FileAccess[FileAccess[\"ExecuteRead\"] = 5] = \"ExecuteRead\";\n  FileAccess[FileAccess[\"r\"] = 4] = \"r\";\n  FileAccess[FileAccess[\"w\"] = 2] = \"w\";\n  FileAccess[FileAccess[\"x\"] = 1] = \"x\";\n  FileAccess[FileAccess[\"rw\"] = 6] = \"rw\";\n  FileAccess[FileAccess[\"rwx\"] = 7] = \"rwx\";\n  FileAccess[FileAccess[\"xr\"] = 5] = \"xr\";\n  return FileAccess;\n}(FileAccess || {});\n/**\n * This table lists some important MIME types for the Web copied from\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\n * http://www.iana.org/assignments/media-types/media-types.xhtml\n */\nvar FileUploadTypes = /*#__PURE__*/function (FileUploadTypes) {\n  FileUploadTypes[\"arc\"] = \"application/octet-stream\";\n  FileUploadTypes[\"midi\"] = \"audio/midi\";\n  FileUploadTypes[\"ts\"] = \"application/typescript\";\n  FileUploadTypes[\"woff2\"] = \"font/woff2\";\n  FileUploadTypes[\"evy\"] = \"application/envoy\";\n  FileUploadTypes[\"fif\"] = \"application/fractals\";\n  FileUploadTypes[\"hta\"] = \"application/hta\";\n  FileUploadTypes[\"acx\"] = \"application/internet-property-stream\";\n  FileUploadTypes[\"dot\"] = \"application/msword\";\n  FileUploadTypes[\"dms\"] = \"application/octet-stream\";\n  FileUploadTypes[\"eps\"] = \"application/postscript\";\n  FileUploadTypes[\"ps\"] = \"application/postscript\";\n  FileUploadTypes[\"xla\"] = \"application/vnd.ms-excel\";\n  FileUploadTypes[\"xlc\"] = \"application/vnd.ms-excel\";\n  FileUploadTypes[\"xlm\"] = \"application/vnd.ms-excel\";\n  FileUploadTypes[\"xlt\"] = \"application/vnd.ms-excel\";\n  FileUploadTypes[\"xlw\"] = \"application/vnd.ms-excel\";\n  FileUploadTypes[\"msg\"] = \"application/vnd.ms-outlook\";\n  FileUploadTypes[\"sst\"] = \"application/vnd.ms-pkicertstore\";\n  FileUploadTypes[\"pot\"] = \"application/vnd.ms-powerpoint\";\n  FileUploadTypes[\"pps\"] = \"application/vnd.ms-powerpoint\";\n  FileUploadTypes[\"wcm\"] = \"application/vnd.ms-works\";\n  FileUploadTypes[\"wdb\"] = \"application/vnd.ms-works\";\n  FileUploadTypes[\"wks\"] = \"application/vnd.ms-works\";\n  FileUploadTypes[\"cdf\"] = \"application/x-cdf\";\n  FileUploadTypes[\"tgz\"] = \"application/x-compressed\";\n  FileUploadTypes[\"dcr\"] = \"application/x-director\";\n  FileUploadTypes[\"dxr\"] = \"application/x-director\";\n  FileUploadTypes[\"gz\"] = \"application/x-gzip\";\n  FileUploadTypes[\"ins\"] = \"application/x-internet-signup\";\n  FileUploadTypes[\"isp\"] = \"application/x-internet-signup\";\n  FileUploadTypes[\"iii\"] = \"application/x-iphone\";\n  FileUploadTypes[\"dll\"] = \"application/x-msdownload\";\n  FileUploadTypes[\"m13\"] = \"application/x-msmediaview\";\n  FileUploadTypes[\"m14\"] = \"application/x-msmediaview\";\n  FileUploadTypes[\"pma\"] = \"application/x-perfmon\";\n  FileUploadTypes[\"pmc\"] = \"application/x-perfmon\";\n  FileUploadTypes[\"pmr\"] = \"application/x-perfmon\";\n  FileUploadTypes[\"pmw\"] = \"application/x-perfmon\";\n  FileUploadTypes[\"pfx\"] = \"application/x-pkcs12\";\n  FileUploadTypes[\"spc\"] = \"application/x-pkcs7-certificates\";\n  FileUploadTypes[\"p7c\"] = \"application/x-pkcs7-mime\";\n  FileUploadTypes[\"texi\"] = \"application/x-texinfo\";\n  FileUploadTypes[\"roff\"] = \"application/x-troff\";\n  FileUploadTypes[\"tr\"] = \"application/x-troff\";\n  FileUploadTypes[\"man\"] = \"application/x-troff-man\";\n  FileUploadTypes[\"me\"] = \"application/x-troff-me\";\n  FileUploadTypes[\"ms\"] = \"application/x-troff-ms\";\n  FileUploadTypes[\"crt\"] = \"application/x-x509-ca-cert\";\n  FileUploadTypes[\"pko\"] = \"application/ynd.ms-pkipko\";\n  FileUploadTypes[\"snd\"] = \"audio/basic\";\n  FileUploadTypes[\"rmi\"] = \"audio/mid\";\n  FileUploadTypes[\"mp3\"] = \"audio/mpeg\";\n  FileUploadTypes[\"aifc\"] = \"audio/x-aiff\";\n  FileUploadTypes[\"aiff\"] = \"audio/x-aiff\";\n  FileUploadTypes[\"ra\"] = \"audio/x-pn-realaudio\";\n  FileUploadTypes[\"jpe\"] = \"image/jpeg\";\n  FileUploadTypes[\"jpeg\"] = \"image/jpeg\";\n  FileUploadTypes[\"jfif\"] = \"image/pipeg\";\n  FileUploadTypes[\"tif\"] = \"image/tiff\";\n  FileUploadTypes[\"mht\"] = \"message/rfc822\";\n  FileUploadTypes[\"mhtml\"] = \"message/rfc822\";\n  FileUploadTypes[\"nws\"] = \"message/rfc822\";\n  FileUploadTypes[\"htm\"] = \"text/html\";\n  FileUploadTypes[\"stm\"] = \"text/html\";\n  FileUploadTypes[\"uls\"] = \"text/iuls\";\n  FileUploadTypes[\"sct\"] = \"text/scriptlet\";\n  FileUploadTypes[\"htt\"] = \"text/webviewhtml\";\n  FileUploadTypes[\"htc\"] = \"text/x-component\";\n  FileUploadTypes[\"mp2\"] = \"video/mpeg\";\n  FileUploadTypes[\"mpa\"] = \"video/mpeg\";\n  FileUploadTypes[\"mpe\"] = \"video/mpeg\";\n  FileUploadTypes[\"mpg\"] = \"video/mpeg\";\n  FileUploadTypes[\"mpv2\"] = \"video/mpeg\";\n  FileUploadTypes[\"mov\"] = \"video/quicktime\";\n  FileUploadTypes[\"lsf\"] = \"video/x-la-asf\";\n  FileUploadTypes[\"lsx\"] = \"video/x-la-asf\";\n  FileUploadTypes[\"asr\"] = \"video/x-ms-asf\";\n  FileUploadTypes[\"asx\"] = \"video/x-ms-asf\";\n  FileUploadTypes[\"flr\"] = \"x-world/x-vrml\";\n  FileUploadTypes[\"vrml\"] = \"x-world/x-vrml\";\n  FileUploadTypes[\"wrz\"] = \"x-world/x-vrml\";\n  FileUploadTypes[\"xaf\"] = \"x-world/x-vrml\";\n  FileUploadTypes[\"xof\"] = \"x-world/x-vrml\";\n  FileUploadTypes[\"x3d\"] = \"application/vnd.hzn-3d-crossword\";\n  FileUploadTypes[\"3gp\"] = \"video/3gpp\";\n  FileUploadTypes[\"3g2\"] = \"video/3gpp2\";\n  FileUploadTypes[\"mseq\"] = \"application/vnd.mseq\";\n  FileUploadTypes[\"pwn\"] = \"application/vnd.3m.post-it-notes\";\n  FileUploadTypes[\"plb\"] = \"application/vnd.3gpp.pic-bw-large\";\n  FileUploadTypes[\"psb\"] = \"application/vnd.3gpp.pic-bw-small\";\n  FileUploadTypes[\"pvb\"] = \"application/vnd.3gpp.pic-bw-var\";\n  FileUploadTypes[\"tcap\"] = \"application/vnd.3gpp2.tcap\";\n  FileUploadTypes[\"7z\"] = \"application/x-7z-compressed\";\n  FileUploadTypes[\"abw\"] = \"application/x-abiword\";\n  FileUploadTypes[\"ace\"] = \"application/x-ace-compressed\";\n  FileUploadTypes[\"acc\"] = \"application/vnd.americandynamics.acc\";\n  FileUploadTypes[\"acu\"] = \"application/vnd.acucobol\";\n  FileUploadTypes[\"atc\"] = \"application/vnd.acucorp\";\n  FileUploadTypes[\"adp\"] = \"audio/adpcm\";\n  FileUploadTypes[\"aab\"] = \"application/x-authorware-bin\";\n  FileUploadTypes[\"aam\"] = \"application/x-authorware-map\";\n  FileUploadTypes[\"aas\"] = \"application/x-authorware-seg\";\n  FileUploadTypes[\"air\"] = \"application/vnd.adobe.air-application-installer-package+zip\";\n  FileUploadTypes[\"swf\"] = \"application/x-shockwave-flash\";\n  FileUploadTypes[\"fxp\"] = \"application/vnd.adobe.fxp\";\n  FileUploadTypes[\"pdf\"] = \"application/pdf\";\n  FileUploadTypes[\"ppd\"] = \"application/vnd.cups-ppd\";\n  FileUploadTypes[\"dir\"] = \"application/x-director\";\n  FileUploadTypes[\"xdp\"] = \"application/vnd.adobe.xdp+xml\";\n  FileUploadTypes[\"xfdf\"] = \"application/vnd.adobe.xfdf\";\n  FileUploadTypes[\"aac\"] = \"audio/x-aac\";\n  FileUploadTypes[\"ahead\"] = \"application/vnd.ahead.space\";\n  FileUploadTypes[\"azf\"] = \"application/vnd.airzip.filesecure.azf\";\n  FileUploadTypes[\"azs\"] = \"application/vnd.airzip.filesecure.azs\";\n  FileUploadTypes[\"azw\"] = \"application/vnd.amazon.ebook\";\n  FileUploadTypes[\"ami\"] = \"application/vnd.amiga.ami\";\n  FileUploadTypes[\"apk\"] = \"application/vnd.android.package-archive\";\n  FileUploadTypes[\"cii\"] = \"application/vnd.anser-web-certificate-issue-initiation\";\n  FileUploadTypes[\"fti\"] = \"application/vnd.anser-web-funds-transfer-initiation\";\n  FileUploadTypes[\"atx\"] = \"application/vnd.antix.game-component\";\n  FileUploadTypes[\"dmg\"] = \"application/x-apple-diskimage\";\n  FileUploadTypes[\"mpkg\"] = \"application/vnd.apple.installer+xml\";\n  FileUploadTypes[\"aw\"] = \"application/applixware\";\n  FileUploadTypes[\"les\"] = \"application/vnd.hhe.lesson-player\";\n  FileUploadTypes[\"swi\"] = \"application/vnd.aristanetworks.swi\";\n  FileUploadTypes[\"s\"] = \"text/x-asm\";\n  FileUploadTypes[\"atomcat\"] = \"application/atomcat+xml\";\n  FileUploadTypes[\"atomsvc\"] = \"application/atomsvc+xml\";\n  FileUploadTypes[\"atom\"] = \"application/atom+xml\";\n  FileUploadTypes[\"ac\"] = \"application/pkix-attr-cert\";\n  FileUploadTypes[\"aif\"] = \"audio/x-aiff\";\n  FileUploadTypes[\"avi\"] = \"video/x-msvideo\";\n  FileUploadTypes[\"aep\"] = \"application/vnd.audiograph\";\n  FileUploadTypes[\"dxf\"] = \"image/vnd.dxf\";\n  FileUploadTypes[\"dwf\"] = \"model/vnd.dwf\";\n  FileUploadTypes[\"par\"] = \"text/plain-bas\";\n  FileUploadTypes[\"bcpio\"] = \"application/x-bcpio\";\n  FileUploadTypes[\"bin\"] = \"application/octet-stream\";\n  FileUploadTypes[\"bmp\"] = \"image/bmp\";\n  FileUploadTypes[\"torrent\"] = \"application/x-bittorrent\";\n  FileUploadTypes[\"cod\"] = \"application/vnd.rim.cod\";\n  FileUploadTypes[\"mpm\"] = \"application/vnd.blueice.multipass\";\n  FileUploadTypes[\"bmi\"] = \"application/vnd.bmi\";\n  FileUploadTypes[\"sh\"] = \"application/x-sh\";\n  FileUploadTypes[\"btif\"] = \"image/prs.btif\";\n  FileUploadTypes[\"rep\"] = \"application/vnd.businessobjects\";\n  FileUploadTypes[\"bz\"] = \"application/x-bzip\";\n  FileUploadTypes[\"bz2\"] = \"application/x-bzip2\";\n  FileUploadTypes[\"csh\"] = \"application/x-csh\";\n  FileUploadTypes[\"c\"] = \"text/x-c\";\n  FileUploadTypes[\"cdxml\"] = \"application/vnd.chemdraw+xml\";\n  FileUploadTypes[\"css\"] = \"text/css\";\n  FileUploadTypes[\"cdx\"] = \"chemical/x-cdx\";\n  FileUploadTypes[\"cml\"] = \"chemical/x-cml\";\n  FileUploadTypes[\"csml\"] = \"chemical/x-csml\";\n  FileUploadTypes[\"cdbcmsg\"] = \"application/vnd.contact.cmsg\";\n  FileUploadTypes[\"cla\"] = \"application/vnd.claymore\";\n  FileUploadTypes[\"c4g\"] = \"application/vnd.clonk.c4group\";\n  FileUploadTypes[\"sub\"] = \"image/vnd.dvb.subtitle\";\n  FileUploadTypes[\"cdmia\"] = \"application/cdmi-capability\";\n  FileUploadTypes[\"cdmic\"] = \"application/cdmi-container\";\n  FileUploadTypes[\"cdmid\"] = \"application/cdmi-domain\";\n  FileUploadTypes[\"cdmio\"] = \"application/cdmi-object\";\n  FileUploadTypes[\"cdmiq\"] = \"application/cdmi-queue\";\n  FileUploadTypes[\"c11amc\"] = \"application/vnd.cluetrust.cartomobile-config\";\n  FileUploadTypes[\"c11amz\"] = \"application/vnd.cluetrust.cartomobile-config-pkg\";\n  FileUploadTypes[\"ras\"] = \"image/x-cmu-raster\";\n  FileUploadTypes[\"dae\"] = \"model/vnd.collada+xml\";\n  FileUploadTypes[\"csv\"] = \"text/csv\";\n  FileUploadTypes[\"cpt\"] = \"application/mac-compactpro\";\n  FileUploadTypes[\"wmlc\"] = \"application/vnd.wap.wmlc\";\n  FileUploadTypes[\"cgm\"] = \"image/cgm\";\n  FileUploadTypes[\"ice\"] = \"x-conference/x-cooltalk\";\n  FileUploadTypes[\"cmx\"] = \"image/x-cmx\";\n  FileUploadTypes[\"xar\"] = \"application/vnd.xara\";\n  FileUploadTypes[\"cmc\"] = \"application/vnd.cosmocaller\";\n  FileUploadTypes[\"cpio\"] = \"application/x-cpio\";\n  FileUploadTypes[\"clkx\"] = \"application/vnd.crick.clicker\";\n  FileUploadTypes[\"clkk\"] = \"application/vnd.crick.clicker.keyboard\";\n  FileUploadTypes[\"clkp\"] = \"application/vnd.crick.clicker.palette\";\n  FileUploadTypes[\"clkt\"] = \"application/vnd.crick.clicker.template\";\n  FileUploadTypes[\"clkw\"] = \"application/vnd.crick.clicker.wordbank\";\n  FileUploadTypes[\"wbs\"] = \"application/vnd.criticaltools.wbs+xml\";\n  FileUploadTypes[\"cryptonote\"] = \"application/vnd.rig.cryptonote\";\n  FileUploadTypes[\"cif\"] = \"chemical/x-cif\";\n  FileUploadTypes[\"cmdf\"] = \"chemical/x-cmdf\";\n  FileUploadTypes[\"cu\"] = \"application/cu-seeme\";\n  FileUploadTypes[\"cww\"] = \"application/prs.cww\";\n  FileUploadTypes[\"curl\"] = \"text/vnd.curl\";\n  FileUploadTypes[\"dcurl\"] = \"text/vnd.curl.dcurl\";\n  FileUploadTypes[\"mcurl\"] = \"text/vnd.curl.mcurl\";\n  FileUploadTypes[\"scurl\"] = \"text/vnd.curl.scurl\";\n  FileUploadTypes[\"car\"] = \"application/vnd.curl.car\";\n  FileUploadTypes[\"pcurl\"] = \"application/vnd.curl.pcurl\";\n  FileUploadTypes[\"cmp\"] = \"application/vnd.yellowriver-custom-menu\";\n  FileUploadTypes[\"dssc\"] = \"application/dssc+der\";\n  FileUploadTypes[\"xdssc\"] = \"application/dssc+xml\";\n  FileUploadTypes[\"deb\"] = \"application/x-debian-package\";\n  FileUploadTypes[\"uva\"] = \"audio/vnd.dece.audio\";\n  FileUploadTypes[\"uvi\"] = \"image/vnd.dece.graphic\";\n  FileUploadTypes[\"uvh\"] = \"video/vnd.dece.hd\";\n  FileUploadTypes[\"uvm\"] = \"video/vnd.dece.mobile\";\n  FileUploadTypes[\"uvu\"] = \"video/vnd.uvvu.mp4\";\n  FileUploadTypes[\"uvp\"] = \"video/vnd.dece.pd\";\n  FileUploadTypes[\"uvs\"] = \"video/vnd.dece.sd\";\n  FileUploadTypes[\"uvv\"] = \"video/vnd.dece.video\";\n  FileUploadTypes[\"dvi\"] = \"application/x-dvi\";\n  FileUploadTypes[\"seed\"] = \"application/vnd.fdsn.seed\";\n  FileUploadTypes[\"dtb\"] = \"application/x-dtbook+xml\";\n  FileUploadTypes[\"res\"] = \"application/x-dtbresource+xml\";\n  FileUploadTypes[\"ait\"] = \"application/vnd.dvb.ait\";\n  FileUploadTypes[\"svc\"] = \"application/vnd.dvb.service\";\n  FileUploadTypes[\"eol\"] = \"audio/vnd.digital-winds\";\n  FileUploadTypes[\"djvu\"] = \"image/vnd.djvu\";\n  FileUploadTypes[\"dtd\"] = \"application/xml-dtd\";\n  FileUploadTypes[\"mlp\"] = \"application/vnd.dolby.mlp\";\n  FileUploadTypes[\"wad\"] = \"application/x-doom\";\n  FileUploadTypes[\"dpg\"] = \"application/vnd.dpgraph\";\n  FileUploadTypes[\"dra\"] = \"audio/vnd.dra\";\n  FileUploadTypes[\"dfac\"] = \"application/vnd.dreamfactory\";\n  FileUploadTypes[\"dts\"] = \"audio/vnd.dts\";\n  FileUploadTypes[\"dtshd\"] = \"audio/vnd.dts.hd\";\n  FileUploadTypes[\"dwg\"] = \"image/vnd.dwg\";\n  FileUploadTypes[\"geo\"] = \"application/vnd.dynageo\";\n  FileUploadTypes[\"es\"] = \"application/ecmascript\";\n  FileUploadTypes[\"mag\"] = \"application/vnd.ecowin.chart\";\n  FileUploadTypes[\"mmr\"] = \"image/vnd.fujixerox.edmics-mmr\";\n  FileUploadTypes[\"rlc\"] = \"image/vnd.fujixerox.edmics-rlc\";\n  FileUploadTypes[\"exi\"] = \"application/exi\";\n  FileUploadTypes[\"mgz\"] = \"application/vnd.proteus.magazine\";\n  FileUploadTypes[\"epub\"] = \"application/epub+zip\";\n  FileUploadTypes[\"eml\"] = \"message/rfc822\";\n  FileUploadTypes[\"nml\"] = \"application/vnd.enliven\";\n  FileUploadTypes[\"xpr\"] = \"application/vnd.is-xpr\";\n  FileUploadTypes[\"xif\"] = \"image/vnd.xiff\";\n  FileUploadTypes[\"xfdl\"] = \"application/vnd.xfdl\";\n  FileUploadTypes[\"emma\"] = \"application/emma+xml\";\n  FileUploadTypes[\"ez2\"] = \"application/vnd.ezpix-album\";\n  FileUploadTypes[\"ez3\"] = \"application/vnd.ezpix-package\";\n  FileUploadTypes[\"fst\"] = \"image/vnd.fst\";\n  FileUploadTypes[\"fvt\"] = \"video/vnd.fvt\";\n  FileUploadTypes[\"fbs\"] = \"image/vnd.fastbidsheet\";\n  FileUploadTypes[\"fe_launch\"] = \"application/vnd.denovo.fcselayout-link\";\n  FileUploadTypes[\"f4v\"] = \"video/x-f4v\";\n  FileUploadTypes[\"flv\"] = \"video/x-flv\";\n  FileUploadTypes[\"fpx\"] = \"image/vnd.fpx\";\n  FileUploadTypes[\"npx\"] = \"image/vnd.net-fpx\";\n  FileUploadTypes[\"flx\"] = \"text/vnd.fmi.flexstor\";\n  FileUploadTypes[\"fli\"] = \"video/x-fli\";\n  FileUploadTypes[\"ftc\"] = \"application/vnd.fluxtime.clip\";\n  FileUploadTypes[\"fdf\"] = \"application/vnd.fdf\";\n  FileUploadTypes[\"f\"] = \"text/x-fortran\";\n  FileUploadTypes[\"mif\"] = \"application/vnd.mif\";\n  FileUploadTypes[\"fm\"] = \"application/vnd.framemaker\";\n  FileUploadTypes[\"fh\"] = \"image/x-freehand\";\n  FileUploadTypes[\"fsc\"] = \"application/vnd.fsc.weblaunch\";\n  FileUploadTypes[\"fnc\"] = \"application/vnd.frogans.fnc\";\n  FileUploadTypes[\"ltf\"] = \"application/vnd.frogans.ltf\";\n  FileUploadTypes[\"ddd\"] = \"application/vnd.fujixerox.ddd\";\n  FileUploadTypes[\"xdw\"] = \"application/vnd.fujixerox.docuworks\";\n  FileUploadTypes[\"xbd\"] = \"application/vnd.fujixerox.docuworks.binder\";\n  FileUploadTypes[\"oas\"] = \"application/vnd.fujitsu.oasys\";\n  FileUploadTypes[\"oa2\"] = \"application/vnd.fujitsu.oasys2\";\n  FileUploadTypes[\"oa3\"] = \"application/vnd.fujitsu.oasys3\";\n  FileUploadTypes[\"fg5\"] = \"application/vnd.fujitsu.oasysgp\";\n  FileUploadTypes[\"bh2\"] = \"application/vnd.fujitsu.oasysprs\";\n  FileUploadTypes[\"spl\"] = \"application/x-futuresplash\";\n  FileUploadTypes[\"fzs\"] = \"application/vnd.fuzzysheet\";\n  FileUploadTypes[\"g3\"] = \"image/g3fax\";\n  FileUploadTypes[\"gmx\"] = \"application/vnd.gmx\";\n  FileUploadTypes[\"gtw\"] = \"model/vnd.gtw\";\n  FileUploadTypes[\"txd\"] = \"application/vnd.genomatix.tuxedo\";\n  FileUploadTypes[\"ggb\"] = \"application/vnd.geogebra.file\";\n  FileUploadTypes[\"ggt\"] = \"application/vnd.geogebra.tool\";\n  FileUploadTypes[\"gdl\"] = \"model/vnd.gdl\";\n  FileUploadTypes[\"gex\"] = \"application/vnd.geometry-explorer\";\n  FileUploadTypes[\"gxt\"] = \"application/vnd.geonext\";\n  FileUploadTypes[\"g2w\"] = \"application/vnd.geoplan\";\n  FileUploadTypes[\"g3w\"] = \"application/vnd.geospace\";\n  FileUploadTypes[\"gsf\"] = \"application/x-font-ghostscript\";\n  FileUploadTypes[\"bdf\"] = \"application/x-font-bdf\";\n  FileUploadTypes[\"gtar\"] = \"application/x-gtar\";\n  FileUploadTypes[\"texinfo\"] = \"application/x-texinfo\";\n  FileUploadTypes[\"gnumeric\"] = \"application/x-gnumeric\";\n  FileUploadTypes[\"kml\"] = \"application/vnd.google-earth.kml+xml\";\n  FileUploadTypes[\"kmz\"] = \"application/vnd.google-earth.kmz\";\n  FileUploadTypes[\"gqf\"] = \"application/vnd.grafeq\";\n  FileUploadTypes[\"gif\"] = \"image/gif\";\n  FileUploadTypes[\"gv\"] = \"text/vnd.graphviz\";\n  FileUploadTypes[\"gac\"] = \"application/vnd.groove-account\";\n  FileUploadTypes[\"ghf\"] = \"application/vnd.groove-help\";\n  FileUploadTypes[\"gim\"] = \"application/vnd.groove-identity-message\";\n  FileUploadTypes[\"grv\"] = \"application/vnd.groove-injector\";\n  FileUploadTypes[\"gtm\"] = \"application/vnd.groove-tool-message\";\n  FileUploadTypes[\"tpl\"] = \"application/vnd.groove-tool-template\";\n  FileUploadTypes[\"vcg\"] = \"application/vnd.groove-vcard\";\n  FileUploadTypes[\"h261\"] = \"video/h261\";\n  FileUploadTypes[\"h263\"] = \"video/h263\";\n  FileUploadTypes[\"h264\"] = \"video/h264\";\n  FileUploadTypes[\"hpid\"] = \"application/vnd.hp-hpid\";\n  FileUploadTypes[\"hps\"] = \"application/vnd.hp-hps\";\n  FileUploadTypes[\"hdf\"] = \"application/x-hdf\";\n  FileUploadTypes[\"rip\"] = \"audio/vnd.rip\";\n  FileUploadTypes[\"hbci\"] = \"application/vnd.hbci\";\n  FileUploadTypes[\"jlt\"] = \"application/vnd.hp-jlyt\";\n  FileUploadTypes[\"pcl\"] = \"application/vnd.hp-pcl\";\n  FileUploadTypes[\"hpgl\"] = \"application/vnd.hp-hpgl\";\n  FileUploadTypes[\"hvs\"] = \"application/vnd.yamaha.hv-script\";\n  FileUploadTypes[\"hvd\"] = \"application/vnd.yamaha.hv-dic\";\n  FileUploadTypes[\"hvp\"] = \"application/vnd.yamaha.hv-voice\";\n  FileUploadTypes[\"sfd-hdstx\"] = \"application/vnd.hydrostatix.sof-data\";\n  FileUploadTypes[\"stk\"] = \"application/hyperstudio\";\n  FileUploadTypes[\"hal\"] = \"application/vnd.hal+xml\";\n  FileUploadTypes[\"html\"] = \"text/html\";\n  FileUploadTypes[\"irm\"] = \"application/vnd.ibm.rights-management\";\n  FileUploadTypes[\"sc\"] = \"application/vnd.ibm.secure-container\";\n  FileUploadTypes[\"ics\"] = \"text/calendar\";\n  FileUploadTypes[\"icc\"] = \"application/vnd.iccprofile\";\n  FileUploadTypes[\"ico\"] = \"image/x-icon\";\n  FileUploadTypes[\"igl\"] = \"application/vnd.igloader\";\n  FileUploadTypes[\"ief\"] = \"image/ief\";\n  FileUploadTypes[\"ivp\"] = \"application/vnd.immervision-ivp\";\n  FileUploadTypes[\"ivu\"] = \"application/vnd.immervision-ivu\";\n  FileUploadTypes[\"rif\"] = \"application/reginfo+xml\";\n  FileUploadTypes[\"3dml\"] = \"text/vnd.in3d.3dml\";\n  FileUploadTypes[\"spot\"] = \"text/vnd.in3d.spot\";\n  FileUploadTypes[\"igs\"] = \"model/iges\";\n  FileUploadTypes[\"i2g\"] = \"application/vnd.intergeo\";\n  FileUploadTypes[\"cdy\"] = \"application/vnd.cinderella\";\n  FileUploadTypes[\"xpw\"] = \"application/vnd.intercon.formnet\";\n  FileUploadTypes[\"fcs\"] = \"application/vnd.isac.fcs\";\n  FileUploadTypes[\"ipfix\"] = \"application/ipfix\";\n  FileUploadTypes[\"cer\"] = \"application/pkix-cert\";\n  FileUploadTypes[\"pki\"] = \"application/pkixcmp\";\n  FileUploadTypes[\"crl\"] = \"application/pkix-crl\";\n  FileUploadTypes[\"pkipath\"] = \"application/pkix-pkipath\";\n  FileUploadTypes[\"igm\"] = \"application/vnd.insors.igm\";\n  FileUploadTypes[\"rcprofile\"] = \"application/vnd.ipunplugged.rcprofile\";\n  FileUploadTypes[\"irp\"] = \"application/vnd.irepository.package+xml\";\n  FileUploadTypes[\"jad\"] = \"text/vnd.sun.j2me.app-descriptor\";\n  FileUploadTypes[\"jar\"] = \"application/java-archive\";\n  FileUploadTypes[\"class\"] = \"application/java-vm\";\n  FileUploadTypes[\"jnlp\"] = \"application/x-java-jnlp-file\";\n  FileUploadTypes[\"ser\"] = \"application/java-serialized-object\";\n  FileUploadTypes[\"java\"] = \"text/x-java-source,java\";\n  FileUploadTypes[\"js\"] = \"application/javascript\";\n  FileUploadTypes[\"json\"] = \"application/json\";\n  FileUploadTypes[\"joda\"] = \"application/vnd.joost.joda-archive\";\n  FileUploadTypes[\"jpm\"] = \"video/jpm\";\n  FileUploadTypes[\"jpg\"] = \"image/jpeg\";\n  FileUploadTypes[\"pjpeg\"] = \"image/pjpeg\";\n  FileUploadTypes[\"jpgv\"] = \"video/jpeg\";\n  FileUploadTypes[\"ktz\"] = \"application/vnd.kahootz\";\n  FileUploadTypes[\"mmd\"] = \"application/vnd.chipnuts.karaoke-mmd\";\n  FileUploadTypes[\"karbon\"] = \"application/vnd.kde.karbon\";\n  FileUploadTypes[\"chrt\"] = \"application/vnd.kde.kchart\";\n  FileUploadTypes[\"kfo\"] = \"application/vnd.kde.kformula\";\n  FileUploadTypes[\"flw\"] = \"application/vnd.kde.kivio\";\n  FileUploadTypes[\"kon\"] = \"application/vnd.kde.kontour\";\n  FileUploadTypes[\"kpr\"] = \"application/vnd.kde.kpresenter\";\n  FileUploadTypes[\"ksp\"] = \"application/vnd.kde.kspread\";\n  FileUploadTypes[\"kwd\"] = \"application/vnd.kde.kword\";\n  FileUploadTypes[\"htke\"] = \"application/vnd.kenameaapp\";\n  FileUploadTypes[\"kia\"] = \"application/vnd.kidspiration\";\n  FileUploadTypes[\"kne\"] = \"application/vnd.kinar\";\n  FileUploadTypes[\"sse\"] = \"application/vnd.kodak-descriptor\";\n  FileUploadTypes[\"lasxml\"] = \"application/vnd.las.las+xml\";\n  FileUploadTypes[\"latex\"] = \"application/x-latex\";\n  FileUploadTypes[\"lbd\"] = \"application/vnd.llamagraphics.life-balance.desktop\";\n  FileUploadTypes[\"lbe\"] = \"application/vnd.llamagraphics.life-balance.exchange+xml\";\n  FileUploadTypes[\"jam\"] = \"application/vnd.jam\";\n  FileUploadTypes[\"apr\"] = \"application/vnd.lotus-approach\";\n  FileUploadTypes[\"pre\"] = \"application/vnd.lotus-freelance\";\n  FileUploadTypes[\"nsf\"] = \"application/vnd.lotus-notes\";\n  FileUploadTypes[\"org\"] = \"application/vnd.lotus-organizer\";\n  FileUploadTypes[\"scm\"] = \"application/vnd.lotus-screencam\";\n  FileUploadTypes[\"lwp\"] = \"application/vnd.lotus-wordpro\";\n  FileUploadTypes[\"lvp\"] = \"audio/vnd.lucent.voice\";\n  FileUploadTypes[\"m3u\"] = \"audio/x-mpegurl\";\n  FileUploadTypes[\"m4v\"] = \"video/x-m4v\";\n  FileUploadTypes[\"hqx\"] = \"application/mac-binhex40\";\n  FileUploadTypes[\"portpkg\"] = \"application/vnd.macports.portpkg\";\n  FileUploadTypes[\"mgp\"] = \"application/vnd.osgeo.mapguide.package\";\n  FileUploadTypes[\"mrc\"] = \"application/marc\";\n  FileUploadTypes[\"mrcx\"] = \"application/marcxml+xml\";\n  FileUploadTypes[\"mxf\"] = \"application/mxf\";\n  FileUploadTypes[\"nbp\"] = \"application/vnd.wolfram.player\";\n  FileUploadTypes[\"ma\"] = \"application/mathematica\";\n  FileUploadTypes[\"mathml\"] = \"application/mathml+xml\";\n  FileUploadTypes[\"mbox\"] = \"application/mbox\";\n  FileUploadTypes[\"mc1\"] = \"application/vnd.medcalcdata\";\n  FileUploadTypes[\"mscml\"] = \"application/mediaservercontrol+xml\";\n  FileUploadTypes[\"cdkey\"] = \"application/vnd.mediastation.cdkey\";\n  FileUploadTypes[\"mwf\"] = \"application/vnd.mfer\";\n  FileUploadTypes[\"mfm\"] = \"application/vnd.mfmp\";\n  FileUploadTypes[\"msh\"] = \"model/mesh\";\n  FileUploadTypes[\"mads\"] = \"application/mads+xml\";\n  FileUploadTypes[\"mets\"] = \"application/mets+xml\";\n  FileUploadTypes[\"mods\"] = \"application/mods+xml\";\n  FileUploadTypes[\"meta4\"] = \"application/metalink4+xml\";\n  FileUploadTypes[\"mcd\"] = \"application/vnd.mcd\";\n  FileUploadTypes[\"flo\"] = \"application/vnd.micrografx.flo\";\n  FileUploadTypes[\"igx\"] = \"application/vnd.micrografx.igx\";\n  FileUploadTypes[\"es3\"] = \"application/vnd.eszigno3+xml\";\n  FileUploadTypes[\"mdb\"] = \"application/x-msaccess\";\n  FileUploadTypes[\"asf\"] = \"video/x-ms-asf\";\n  FileUploadTypes[\"exe\"] = \"application/x-msdownload\";\n  FileUploadTypes[\"cil\"] = \"application/vnd.ms-artgalry\";\n  FileUploadTypes[\"cab\"] = \"application/vnd.ms-cab-compressed\";\n  FileUploadTypes[\"ims\"] = \"application/vnd.ms-ims\";\n  FileUploadTypes[\"application\"] = \"application/x-ms-application\";\n  FileUploadTypes[\"clp\"] = \"application/x-msclip\";\n  FileUploadTypes[\"mdi\"] = \"image/vnd.ms-modi\";\n  FileUploadTypes[\"eot\"] = \"application/vnd.ms-fontobject\";\n  FileUploadTypes[\"xls\"] = \"application/vnd.ms-excel\";\n  FileUploadTypes[\"xlam\"] = \"application/vnd.ms-excel.addin.macroenabled.12\";\n  FileUploadTypes[\"xlsb\"] = \"application/vnd.ms-excel.sheet.binary.macroenabled.12\";\n  FileUploadTypes[\"xltm\"] = \"application/vnd.ms-excel.template.macroenabled.12\";\n  FileUploadTypes[\"xlsm\"] = \"application/vnd.ms-excel.sheet.macroenabled.12\";\n  FileUploadTypes[\"chm\"] = \"application/vnd.ms-htmlhelp\";\n  FileUploadTypes[\"crd\"] = \"application/x-mscardfile\";\n  FileUploadTypes[\"lrm\"] = \"application/vnd.ms-lrm\";\n  FileUploadTypes[\"mvb\"] = \"application/x-msmediaview\";\n  FileUploadTypes[\"mny\"] = \"application/x-msmoney\";\n  FileUploadTypes[\"pptx\"] = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n  FileUploadTypes[\"sldx\"] = \"application/vnd.openxmlformats-officedocument.presentationml.slide\";\n  FileUploadTypes[\"ppsx\"] = \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\";\n  FileUploadTypes[\"potx\"] = \"application/vnd.openxmlformats-officedocument.presentationml.template\";\n  FileUploadTypes[\"xlsx\"] = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n  FileUploadTypes[\"xltx\"] = \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\";\n  FileUploadTypes[\"docx\"] = \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n  FileUploadTypes[\"dotx\"] = \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\";\n  FileUploadTypes[\"obd\"] = \"application/x-msbinder\";\n  FileUploadTypes[\"thmx\"] = \"application/vnd.ms-officetheme\";\n  FileUploadTypes[\"onetoc\"] = \"application/onenote\";\n  FileUploadTypes[\"pya\"] = \"audio/vnd.ms-playready.media.pya\";\n  FileUploadTypes[\"pyv\"] = \"video/vnd.ms-playready.media.pyv\";\n  FileUploadTypes[\"ppt\"] = \"application/vnd.ms-powerpoint\";\n  FileUploadTypes[\"ppa\"] = \"application/vnd.ms-powerpoint\";\n  FileUploadTypes[\"ppam\"] = \"application/vnd.ms-powerpoint.addin.macroenabled.12\";\n  FileUploadTypes[\"sldm\"] = \"application/vnd.ms-powerpoint.slide.macroenabled.12\";\n  FileUploadTypes[\"pptm\"] = \"application/vnd.ms-powerpoint.presentation.macroenabled.12\";\n  FileUploadTypes[\"ppsm\"] = \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\";\n  FileUploadTypes[\"potm\"] = \"application/vnd.ms-powerpoint.template.macroenabled.12\";\n  FileUploadTypes[\"mpp\"] = \"application/vnd.ms-project\";\n  FileUploadTypes[\"pub\"] = \"application/x-mspublisher\";\n  FileUploadTypes[\"scd\"] = \"application/x-msschedule\";\n  FileUploadTypes[\"xap\"] = \"application/x-silverlight-app\";\n  FileUploadTypes[\"stl\"] = \"application/vnd.ms-pki.stl\";\n  FileUploadTypes[\"cat\"] = \"application/vnd.ms-pki.seccat\";\n  FileUploadTypes[\"vsd\"] = \"application/vnd.visio\";\n  FileUploadTypes[\"vsdx\"] = \"application/vnd.visio2013\";\n  FileUploadTypes[\"wm\"] = \"video/x-ms-wm\";\n  FileUploadTypes[\"wma\"] = \"audio/x-ms-wma\";\n  FileUploadTypes[\"wax\"] = \"audio/x-ms-wax\";\n  FileUploadTypes[\"wmx\"] = \"video/x-ms-wmx\";\n  FileUploadTypes[\"wmd\"] = \"application/x-ms-wmd\";\n  FileUploadTypes[\"wpl\"] = \"application/vnd.ms-wpl\";\n  FileUploadTypes[\"wmz\"] = \"application/x-ms-wmz\";\n  FileUploadTypes[\"wmv\"] = \"video/x-ms-wmv\";\n  FileUploadTypes[\"wvx\"] = \"video/x-ms-wvx\";\n  FileUploadTypes[\"wmf\"] = \"application/x-msmetafile\";\n  FileUploadTypes[\"trm\"] = \"application/x-msterminal\";\n  FileUploadTypes[\"doc\"] = \"application/msword\";\n  FileUploadTypes[\"docm\"] = \"application/vnd.ms-word.document.macroenabled.12\";\n  FileUploadTypes[\"dotm\"] = \"application/vnd.ms-word.template.macroenabled.12\";\n  FileUploadTypes[\"wri\"] = \"application/x-mswrite\";\n  FileUploadTypes[\"wps\"] = \"application/vnd.ms-works\";\n  FileUploadTypes[\"xbap\"] = \"application/x-ms-xbap\";\n  FileUploadTypes[\"xps\"] = \"application/vnd.ms-xpsdocument\";\n  FileUploadTypes[\"mid\"] = \"audio/midi\";\n  FileUploadTypes[\"mpy\"] = \"application/vnd.ibm.minipay\";\n  FileUploadTypes[\"afp\"] = \"application/vnd.ibm.modcap\";\n  FileUploadTypes[\"rms\"] = \"application/vnd.jcp.javame.midlet-rms\";\n  FileUploadTypes[\"tmo\"] = \"application/vnd.tmobile-livetv\";\n  FileUploadTypes[\"prc\"] = \"application/x-mobipocket-ebook\";\n  FileUploadTypes[\"mbk\"] = \"application/vnd.mobius.mbk\";\n  FileUploadTypes[\"dis\"] = \"application/vnd.mobius.dis\";\n  FileUploadTypes[\"plc\"] = \"application/vnd.mobius.plc\";\n  FileUploadTypes[\"mqy\"] = \"application/vnd.mobius.mqy\";\n  FileUploadTypes[\"msl\"] = \"application/vnd.mobius.msl\";\n  FileUploadTypes[\"txf\"] = \"application/vnd.mobius.txf\";\n  FileUploadTypes[\"daf\"] = \"application/vnd.mobius.daf\";\n  FileUploadTypes[\"fly\"] = \"text/vnd.fly\";\n  FileUploadTypes[\"mpc\"] = \"application/vnd.mophun.certificate\";\n  FileUploadTypes[\"mpn\"] = \"application/vnd.mophun.application\";\n  FileUploadTypes[\"mj2\"] = \"video/mj2\";\n  FileUploadTypes[\"mpga\"] = \"audio/mpeg\";\n  FileUploadTypes[\"mxu\"] = \"video/vnd.mpegurl\";\n  FileUploadTypes[\"mpeg\"] = \"video/mpeg\";\n  FileUploadTypes[\"m21\"] = \"application/mp21\";\n  FileUploadTypes[\"mp4a\"] = \"audio/mp4\";\n  FileUploadTypes[\"mp4\"] = \"video/mp4\";\n  FileUploadTypes[\"m3u8\"] = \"application/vnd.apple.mpegurl\";\n  FileUploadTypes[\"mus\"] = \"application/vnd.musician\";\n  FileUploadTypes[\"msty\"] = \"application/vnd.muvee.style\";\n  FileUploadTypes[\"mxml\"] = \"application/xv+xml\";\n  FileUploadTypes[\"ngdat\"] = \"application/vnd.nokia.n-gage.data\";\n  FileUploadTypes[\"n-gage\"] = \"application/vnd.nokia.n-gage.symbian.install\";\n  FileUploadTypes[\"ncx\"] = \"application/x-dtbncx+xml\";\n  FileUploadTypes[\"nc\"] = \"application/x-netcdf\";\n  FileUploadTypes[\"nlu\"] = \"application/vnd.neurolanguage.nlu\";\n  FileUploadTypes[\"dna\"] = \"application/vnd.dna\";\n  FileUploadTypes[\"nnd\"] = \"application/vnd.noblenet-directory\";\n  FileUploadTypes[\"nns\"] = \"application/vnd.noblenet-sealer\";\n  FileUploadTypes[\"nnw\"] = \"application/vnd.noblenet-web\";\n  FileUploadTypes[\"rpst\"] = \"application/vnd.nokia.radio-preset\";\n  FileUploadTypes[\"rpss\"] = \"application/vnd.nokia.radio-presets\";\n  FileUploadTypes[\"n3\"] = \"text/n3\";\n  FileUploadTypes[\"edm\"] = \"application/vnd.novadigm.edm\";\n  FileUploadTypes[\"edx\"] = \"application/vnd.novadigm.edx\";\n  FileUploadTypes[\"ext\"] = \"application/vnd.novadigm.ext\";\n  FileUploadTypes[\"gph\"] = \"application/vnd.flographit\";\n  FileUploadTypes[\"ecelp4800\"] = \"audio/vnd.nuera.ecelp4800\";\n  FileUploadTypes[\"ecelp7470\"] = \"audio/vnd.nuera.ecelp7470\";\n  FileUploadTypes[\"ecelp9600\"] = \"audio/vnd.nuera.ecelp9600\";\n  FileUploadTypes[\"oda\"] = \"application/oda\";\n  FileUploadTypes[\"ogx\"] = \"application/ogg\";\n  FileUploadTypes[\"oga\"] = \"audio/ogg\";\n  FileUploadTypes[\"ogv\"] = \"video/ogg\";\n  FileUploadTypes[\"dd2\"] = \"application/vnd.oma.dd2+xml\";\n  FileUploadTypes[\"oth\"] = \"application/vnd.oasis.opendocument.text-web\";\n  FileUploadTypes[\"opf\"] = \"application/oebps-package+xml\";\n  FileUploadTypes[\"qbo\"] = \"application/vnd.intu.qbo\";\n  FileUploadTypes[\"oxt\"] = \"application/vnd.openofficeorg.extension\";\n  FileUploadTypes[\"osf\"] = \"application/vnd.yamaha.openscoreformat\";\n  FileUploadTypes[\"weba\"] = \"audio/webm\";\n  FileUploadTypes[\"webm\"] = \"video/webm\";\n  FileUploadTypes[\"odc\"] = \"application/vnd.oasis.opendocument.chart\";\n  FileUploadTypes[\"otc\"] = \"application/vnd.oasis.opendocument.chart-template\";\n  FileUploadTypes[\"odb\"] = \"application/vnd.oasis.opendocument.database\";\n  FileUploadTypes[\"odf\"] = \"application/vnd.oasis.opendocument.formula\";\n  FileUploadTypes[\"odft\"] = \"application/vnd.oasis.opendocument.formula-template\";\n  FileUploadTypes[\"odg\"] = \"application/vnd.oasis.opendocument.graphics\";\n  FileUploadTypes[\"otg\"] = \"application/vnd.oasis.opendocument.graphics-template\";\n  FileUploadTypes[\"odi\"] = \"application/vnd.oasis.opendocument.image\";\n  FileUploadTypes[\"oti\"] = \"application/vnd.oasis.opendocument.image-template\";\n  FileUploadTypes[\"odp\"] = \"application/vnd.oasis.opendocument.presentation\";\n  FileUploadTypes[\"otp\"] = \"application/vnd.oasis.opendocument.presentation-template\";\n  FileUploadTypes[\"ods\"] = \"application/vnd.oasis.opendocument.spreadsheet\";\n  FileUploadTypes[\"ots\"] = \"application/vnd.oasis.opendocument.spreadsheet-template\";\n  FileUploadTypes[\"odt\"] = \"application/vnd.oasis.opendocument.text\";\n  FileUploadTypes[\"odm\"] = \"application/vnd.oasis.opendocument.text-master\";\n  FileUploadTypes[\"ott\"] = \"application/vnd.oasis.opendocument.text-template\";\n  FileUploadTypes[\"ktx\"] = \"image/ktx\";\n  FileUploadTypes[\"sxc\"] = \"application/vnd.sun.xml.calc\";\n  FileUploadTypes[\"stc\"] = \"application/vnd.sun.xml.calc.template\";\n  FileUploadTypes[\"sxd\"] = \"application/vnd.sun.xml.draw\";\n  FileUploadTypes[\"std\"] = \"application/vnd.sun.xml.draw.template\";\n  FileUploadTypes[\"sxi\"] = \"application/vnd.sun.xml.impress\";\n  FileUploadTypes[\"sti\"] = \"application/vnd.sun.xml.impress.template\";\n  FileUploadTypes[\"sxm\"] = \"application/vnd.sun.xml.math\";\n  FileUploadTypes[\"sxw\"] = \"application/vnd.sun.xml.writer\";\n  FileUploadTypes[\"sxg\"] = \"application/vnd.sun.xml.writer.global\";\n  FileUploadTypes[\"stw\"] = \"application/vnd.sun.xml.writer.template\";\n  FileUploadTypes[\"otf\"] = \"application/x-font-otf\";\n  FileUploadTypes[\"osfpvg\"] = \"application/vnd.yamaha.openscoreformat.osfpvg+xml\";\n  FileUploadTypes[\"dp\"] = \"application/vnd.osgi.dp\";\n  FileUploadTypes[\"pdb\"] = \"application/vnd.palm\";\n  FileUploadTypes[\"p\"] = \"text/x-pascal\";\n  FileUploadTypes[\"paw\"] = \"application/vnd.pawaafile\";\n  FileUploadTypes[\"pclxl\"] = \"application/vnd.hp-pclxl\";\n  FileUploadTypes[\"efif\"] = \"application/vnd.picsel\";\n  FileUploadTypes[\"pcx\"] = \"image/x-pcx\";\n  FileUploadTypes[\"psd\"] = \"image/vnd.adobe.photoshop\";\n  FileUploadTypes[\"prf\"] = \"application/pics-rules\";\n  FileUploadTypes[\"pic\"] = \"image/x-pict\";\n  FileUploadTypes[\"chat\"] = \"application/x-chat\";\n  FileUploadTypes[\"p10\"] = \"application/pkcs10\";\n  FileUploadTypes[\"p12\"] = \"application/x-pkcs12\";\n  FileUploadTypes[\"p7m\"] = \"application/pkcs7-mime\";\n  FileUploadTypes[\"p7s\"] = \"application/pkcs7-signature\";\n  FileUploadTypes[\"p7r\"] = \"application/x-pkcs7-certreqresp\";\n  FileUploadTypes[\"p7b\"] = \"application/x-pkcs7-certificates\";\n  FileUploadTypes[\"p8\"] = \"application/pkcs8\";\n  FileUploadTypes[\"plf\"] = \"application/vnd.pocketlearn\";\n  FileUploadTypes[\"pnm\"] = \"image/x-portable-anymap\";\n  FileUploadTypes[\"pbm\"] = \"image/x-portable-bitmap\";\n  FileUploadTypes[\"pcf\"] = \"application/x-font-pcf\";\n  FileUploadTypes[\"pfr\"] = \"application/font-tdpfr\";\n  FileUploadTypes[\"pgn\"] = \"application/x-chess-pgn\";\n  FileUploadTypes[\"pgm\"] = \"image/x-portable-graymap\";\n  FileUploadTypes[\"png\"] = \"image/png\";\n  FileUploadTypes[\"ppm\"] = \"image/x-portable-pixmap\";\n  FileUploadTypes[\"pskcxml\"] = \"application/pskc+xml\";\n  FileUploadTypes[\"pml\"] = \"application/vnd.ctc-posml\";\n  FileUploadTypes[\"ai\"] = \"application/postscript\";\n  FileUploadTypes[\"pfa\"] = \"application/x-font-type1\";\n  FileUploadTypes[\"pbd\"] = \"application/vnd.powerbuilder6\";\n  FileUploadTypes[\"pgp\"] = \"application/pgp-encrypted\";\n  FileUploadTypes[\"box\"] = \"application/vnd.previewsystems.box\";\n  FileUploadTypes[\"ptid\"] = \"application/vnd.pvi.ptid1\";\n  FileUploadTypes[\"pls\"] = \"application/pls+xml\";\n  FileUploadTypes[\"str\"] = \"application/vnd.pg.format\";\n  FileUploadTypes[\"ei6\"] = \"application/vnd.pg.osasli\";\n  FileUploadTypes[\"dsc\"] = \"text/prs.lines.tag\";\n  FileUploadTypes[\"psf\"] = \"application/x-font-linux-psf\";\n  FileUploadTypes[\"qps\"] = \"application/vnd.publishare-delta-tree\";\n  FileUploadTypes[\"wg\"] = \"application/vnd.pmi.widget\";\n  FileUploadTypes[\"qxd\"] = \"application/vnd.quark.quarkxpress\";\n  FileUploadTypes[\"esf\"] = \"application/vnd.epson.esf\";\n  FileUploadTypes[\"msf\"] = \"application/vnd.epson.msf\";\n  FileUploadTypes[\"ssf\"] = \"application/vnd.epson.ssf\";\n  FileUploadTypes[\"qam\"] = \"application/vnd.epson.quickanime\";\n  FileUploadTypes[\"qfx\"] = \"application/vnd.intu.qfx\";\n  FileUploadTypes[\"qt\"] = \"video/quicktime\";\n  FileUploadTypes[\"rar\"] = \"application/x-rar-compressed\";\n  FileUploadTypes[\"ram\"] = \"audio/x-pn-realaudio\";\n  FileUploadTypes[\"rmp\"] = \"audio/x-pn-realaudio-plugin\";\n  FileUploadTypes[\"rsd\"] = \"application/rsd+xml\";\n  FileUploadTypes[\"rm\"] = \"application/vnd.rn-realmedia\";\n  FileUploadTypes[\"bed\"] = \"application/vnd.realvnc.bed\";\n  FileUploadTypes[\"mxl\"] = \"application/vnd.recordare.musicxml\";\n  FileUploadTypes[\"musicxml\"] = \"application/vnd.recordare.musicxml+xml\";\n  FileUploadTypes[\"rnc\"] = \"application/relax-ng-compact-syntax\";\n  FileUploadTypes[\"rdz\"] = \"application/vnd.data-vision.rdz\";\n  FileUploadTypes[\"rdf\"] = \"application/rdf+xml\";\n  FileUploadTypes[\"rp9\"] = \"application/vnd.cloanto.rp9\";\n  FileUploadTypes[\"jisp\"] = \"application/vnd.jisp\";\n  FileUploadTypes[\"rtf\"] = \"application/rtf\";\n  FileUploadTypes[\"rtx\"] = \"text/richtext\";\n  FileUploadTypes[\"link66\"] = \"application/vnd.route66.link66+xml\";\n  FileUploadTypes[\"rss\"] = \"application/rss+xml,\";\n  FileUploadTypes[\"shf\"] = \"application/shf+xml\";\n  FileUploadTypes[\"st\"] = \"application/vnd.sailingtracker.track\";\n  FileUploadTypes[\"svg\"] = \"image/svg+xml\";\n  FileUploadTypes[\"sus\"] = \"application/vnd.sus-calendar\";\n  FileUploadTypes[\"sru\"] = \"application/sru+xml\";\n  FileUploadTypes[\"setpay\"] = \"application/set-payment-initiation\";\n  FileUploadTypes[\"setreg\"] = \"application/set-registration-initiation\";\n  FileUploadTypes[\"sema\"] = \"application/vnd.sema\";\n  FileUploadTypes[\"semd\"] = \"application/vnd.semd\";\n  FileUploadTypes[\"semf\"] = \"application/vnd.semf\";\n  FileUploadTypes[\"see\"] = \"application/vnd.seemail\";\n  FileUploadTypes[\"snf\"] = \"application/x-font-snf\";\n  FileUploadTypes[\"spq\"] = \"application/scvp-vp-request\";\n  FileUploadTypes[\"spp\"] = \"application/scvp-vp-response\";\n  FileUploadTypes[\"scq\"] = \"application/scvp-cv-request\";\n  FileUploadTypes[\"scs\"] = \"application/scvp-cv-response\";\n  FileUploadTypes[\"sdp\"] = \"application/sdp\";\n  FileUploadTypes[\"etx\"] = \"text/x-setext\";\n  FileUploadTypes[\"movie\"] = \"video/x-sgi-movie\";\n  FileUploadTypes[\"ifm\"] = \"application/vnd.shana.informed.formdata\";\n  FileUploadTypes[\"itp\"] = \"application/vnd.shana.informed.formtemplate\";\n  FileUploadTypes[\"iif\"] = \"application/vnd.shana.informed.interchange\";\n  FileUploadTypes[\"ipk\"] = \"application/vnd.shana.informed.package\";\n  FileUploadTypes[\"tfi\"] = \"application/thraud+xml\";\n  FileUploadTypes[\"shar\"] = \"application/x-shar\";\n  FileUploadTypes[\"rgb\"] = \"image/x-rgb\";\n  FileUploadTypes[\"slt\"] = \"application/vnd.epson.salt\";\n  FileUploadTypes[\"aso\"] = \"application/vnd.accpac.simply.aso\";\n  FileUploadTypes[\"imp\"] = \"application/vnd.accpac.simply.imp\";\n  FileUploadTypes[\"twd\"] = \"application/vnd.simtech-mindmapper\";\n  FileUploadTypes[\"csp\"] = \"application/vnd.commonspace\";\n  FileUploadTypes[\"saf\"] = \"application/vnd.yamaha.smaf-audio\";\n  FileUploadTypes[\"mmf\"] = \"application/vnd.smaf\";\n  FileUploadTypes[\"spf\"] = \"application/vnd.yamaha.smaf-phrase\";\n  FileUploadTypes[\"teacher\"] = \"application/vnd.smart.teacher\";\n  FileUploadTypes[\"svd\"] = \"application/vnd.svd\";\n  FileUploadTypes[\"rq\"] = \"application/sparql-query\";\n  FileUploadTypes[\"srx\"] = \"application/sparql-results+xml\";\n  FileUploadTypes[\"gram\"] = \"application/srgs\";\n  FileUploadTypes[\"grxml\"] = \"application/srgs+xml\";\n  FileUploadTypes[\"ssml\"] = \"application/ssml+xml\";\n  FileUploadTypes[\"skp\"] = \"application/vnd.koan\";\n  FileUploadTypes[\"sgml\"] = \"text/sgml\";\n  FileUploadTypes[\"sdc\"] = \"application/vnd.stardivision.calc\";\n  FileUploadTypes[\"sda\"] = \"application/vnd.stardivision.draw\";\n  FileUploadTypes[\"sdd\"] = \"application/vnd.stardivision.impress\";\n  FileUploadTypes[\"smf\"] = \"application/vnd.stardivision.math\";\n  FileUploadTypes[\"sdw\"] = \"application/vnd.stardivision.writer\";\n  FileUploadTypes[\"sgl\"] = \"application/vnd.stardivision.writer-global\";\n  FileUploadTypes[\"sm\"] = \"application/vnd.stepmania.stepchart\";\n  FileUploadTypes[\"sit\"] = \"application/x-stuffit\";\n  FileUploadTypes[\"sitx\"] = \"application/x-stuffitx\";\n  FileUploadTypes[\"sdkm\"] = \"application/vnd.solent.sdkm+xml\";\n  FileUploadTypes[\"xo\"] = \"application/vnd.olpc-sugar\";\n  FileUploadTypes[\"au\"] = \"audio/basic\";\n  FileUploadTypes[\"wqd\"] = \"application/vnd.wqd\";\n  FileUploadTypes[\"sis\"] = \"application/vnd.symbian.install\";\n  FileUploadTypes[\"smi\"] = \"application/smil+xml\";\n  FileUploadTypes[\"xsm\"] = \"application/vnd.syncml+xml\";\n  FileUploadTypes[\"bdm\"] = \"application/vnd.syncml.dm+wbxml\";\n  FileUploadTypes[\"xdm\"] = \"application/vnd.syncml.dm+xml\";\n  FileUploadTypes[\"sv4cpio\"] = \"application/x-sv4cpio\";\n  FileUploadTypes[\"sv4crc\"] = \"application/x-sv4crc\";\n  FileUploadTypes[\"sbml\"] = \"application/sbml+xml\";\n  FileUploadTypes[\"tsv\"] = \"text/tab-separated-values\";\n  FileUploadTypes[\"tiff\"] = \"image/tiff\";\n  FileUploadTypes[\"tao\"] = \"application/vnd.tao.intent-module-archive\";\n  FileUploadTypes[\"tar\"] = \"application/x-tar\";\n  FileUploadTypes[\"tcl\"] = \"application/x-tcl\";\n  FileUploadTypes[\"tex\"] = \"application/x-tex\";\n  FileUploadTypes[\"tfm\"] = \"application/x-tex-tfm\";\n  FileUploadTypes[\"tei\"] = \"application/tei+xml\";\n  FileUploadTypes[\"txt\"] = \"text/plain\";\n  FileUploadTypes[\"dxp\"] = \"application/vnd.spotfire.dxp\";\n  FileUploadTypes[\"sfs\"] = \"application/vnd.spotfire.sfs\";\n  FileUploadTypes[\"tsd\"] = \"application/timestamped-data\";\n  FileUploadTypes[\"tpt\"] = \"application/vnd.trid.tpt\";\n  FileUploadTypes[\"mxs\"] = \"application/vnd.triscape.mxs\";\n  FileUploadTypes[\"t\"] = \"text/troff\";\n  FileUploadTypes[\"tra\"] = \"application/vnd.trueapp\";\n  FileUploadTypes[\"ttf\"] = \"application/x-font-ttf\";\n  FileUploadTypes[\"ttl\"] = \"text/turtle\";\n  FileUploadTypes[\"umj\"] = \"application/vnd.umajin\";\n  FileUploadTypes[\"uoml\"] = \"application/vnd.uoml+xml\";\n  FileUploadTypes[\"unityweb\"] = \"application/vnd.unity\";\n  FileUploadTypes[\"ufd\"] = \"application/vnd.ufdl\";\n  FileUploadTypes[\"uri\"] = \"text/uri-list\";\n  FileUploadTypes[\"utz\"] = \"application/vnd.uiq.theme\";\n  FileUploadTypes[\"ustar\"] = \"application/x-ustar\";\n  FileUploadTypes[\"uu\"] = \"text/x-uuencode\";\n  FileUploadTypes[\"vcs\"] = \"text/x-vcalendar\";\n  FileUploadTypes[\"vcf\"] = \"text/x-vcard\";\n  FileUploadTypes[\"vcd\"] = \"application/x-cdlink\";\n  FileUploadTypes[\"vsf\"] = \"application/vnd.vsf\";\n  FileUploadTypes[\"wrl\"] = \"model/vrml\";\n  FileUploadTypes[\"vcx\"] = \"application/vnd.vcx\";\n  FileUploadTypes[\"mts\"] = \"model/vnd.mts\";\n  FileUploadTypes[\"vtu\"] = \"model/vnd.vtu\";\n  FileUploadTypes[\"vis\"] = \"application/vnd.visionary\";\n  FileUploadTypes[\"viv\"] = \"video/vnd.vivo\";\n  FileUploadTypes[\"ccxml\"] = \"application/ccxml+xml,\";\n  FileUploadTypes[\"vxml\"] = \"application/voicexml+xml\";\n  FileUploadTypes[\"src\"] = \"application/x-wais-source\";\n  FileUploadTypes[\"wbxml\"] = \"application/vnd.wap.wbxml\";\n  FileUploadTypes[\"wbmp\"] = \"image/vnd.wap.wbmp\";\n  FileUploadTypes[\"wav\"] = \"audio/x-wav\";\n  FileUploadTypes[\"davmount\"] = \"application/davmount+xml\";\n  FileUploadTypes[\"woff\"] = \"application/x-font-woff\";\n  FileUploadTypes[\"wspolicy\"] = \"application/wspolicy+xml\";\n  FileUploadTypes[\"webp\"] = \"image/webp\";\n  FileUploadTypes[\"wtb\"] = \"application/vnd.webturbo\";\n  FileUploadTypes[\"wgt\"] = \"application/widget\";\n  FileUploadTypes[\"hlp\"] = \"application/winhlp\";\n  FileUploadTypes[\"wml\"] = \"text/vnd.wap.wml\";\n  FileUploadTypes[\"wmls\"] = \"text/vnd.wap.wmlscript\";\n  FileUploadTypes[\"wmlsc\"] = \"application/vnd.wap.wmlscriptc\";\n  FileUploadTypes[\"wpd\"] = \"application/vnd.wordperfect\";\n  FileUploadTypes[\"stf\"] = \"application/vnd.wt.stf\";\n  FileUploadTypes[\"wsdl\"] = \"application/wsdl+xml\";\n  FileUploadTypes[\"xbm\"] = \"image/x-xbitmap\";\n  FileUploadTypes[\"xpm\"] = \"image/x-xpixmap\";\n  FileUploadTypes[\"xwd\"] = \"image/x-xwindowdump\";\n  FileUploadTypes[\"der\"] = \"application/x-x509-ca-cert\";\n  FileUploadTypes[\"fig\"] = \"application/x-xfig\";\n  FileUploadTypes[\"xhtml\"] = \"application/xhtml+xml\";\n  FileUploadTypes[\"xml\"] = \"application/xml\";\n  FileUploadTypes[\"xdf\"] = \"application/xcap-diff+xml\";\n  FileUploadTypes[\"xenc\"] = \"application/xenc+xml\";\n  FileUploadTypes[\"xer\"] = \"application/patch-ops-error+xml\";\n  FileUploadTypes[\"rl\"] = \"application/resource-lists+xml\";\n  FileUploadTypes[\"rs\"] = \"application/rls-services+xml\";\n  FileUploadTypes[\"rld\"] = \"application/resource-lists-diff+xml\";\n  FileUploadTypes[\"xslt\"] = \"application/xslt+xml\";\n  FileUploadTypes[\"xop\"] = \"application/xop+xml\";\n  FileUploadTypes[\"xpi\"] = \"application/x-xpinstall\";\n  FileUploadTypes[\"xspf\"] = \"application/xspf+xml\";\n  FileUploadTypes[\"xul\"] = \"application/vnd.mozilla.xul+xml\";\n  FileUploadTypes[\"xyz\"] = \"chemical/x-xyz\";\n  FileUploadTypes[\"yaml\"] = \"text/yaml\";\n  FileUploadTypes[\"yang\"] = \"application/yang\";\n  FileUploadTypes[\"yin\"] = \"application/yin+xml\";\n  FileUploadTypes[\"zir\"] = \"application/vnd.zul\";\n  FileUploadTypes[\"zip\"] = \"application/zip\";\n  return FileUploadTypes;\n}(FileUploadTypes || {});\nfunction IsNullOrEmpty(value) {\n  return value == null || value.length === 0;\n}\nlet FileUploadService = /*#__PURE__*/(() => {\n  class FileUploadService {\n    constructor(renderer) {\n      this.renderer = renderer;\n      this.extensions = ['B', 'KB', 'MB', 'GB'];\n      this.sizeRegex = new RegExp(`^(\\\\d+)(?:\\\\s{0,1})(${this.extensions.join('|')})?$`, 'i');\n    }\n    isFileDragDropAvailable() {\n      const div = this.renderer.createElement('div');\n      return 'draggable' in div || 'ondragstart' in div && 'ondrop' in div;\n    }\n    parseSize(value) {\n      if (IsNullOrEmpty(value)) {\n        return 0;\n      }\n      if (typeof value === 'number') {\n        return value;\n      }\n      const [, size, extension] = value.match(this.sizeRegex) || [null, '0', 'B'];\n      const i = IsNullOrEmpty(extension) ? 0 : this.extensions.indexOf(extension.toUpperCase());\n      return parseInt(size, 10) * Math.pow(1024, i < 0 ? 0 : i);\n    }\n    formatSize(size) {\n      return this.calculateSize(size);\n    }\n    calculateSize(size, extensionIndex = 0) {\n      if (isNaN(size)) {\n        size = 0;\n      }\n      if (size < 1024) {\n        return `${Math.round(size * 100) / 100} ${this.extensions[extensionIndex]}`;\n      }\n      return this.calculateSize(size / 1024, extensionIndex + 1);\n    }\n    getFileType(file) {\n      return Object.keys(FileUploadTypes).find(key => FileUploadTypes[key] === file.type);\n    }\n    static {\n      this.ɵfac = function FileUploadService_Factory(t) {\n        return new (t || FileUploadService)(i0.ɵɵinject(i0.Renderer2));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FileUploadService,\n        factory: FileUploadService.ɵfac\n      });\n    }\n  }\n  return FileUploadService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst InsertAnimation = trigger('insertAnimation', [transition('* => *', [query(':leave', [stagger(30, [animate('.3s', style({\n  opacity: 0\n}))])], {\n  optional: true\n}), query(':enter', [style({\n  opacity: 0\n}), stagger(30, [animate('.3s', style({\n  opacity: 1\n}))])], {\n  optional: true\n})])]);\nconst ZoomAnimation = trigger('zoomAnimation', [transition('static => zoomOut', [animate(250, style({\n  transform: 'translate(-50%, -50%) scale(2, 2)',\n  opacity: 0\n}))]), transition('static => zoomIn', [query(':self', [style({\n  transform: 'translate(-50%, -50%) scale(.2, .2)',\n  opacity: 0,\n  top: '50%',\n  left: '50%',\n  margin: 0\n}), stagger(50, [animate(250, style({\n  transform: 'translate(-50%, -50%) scale(1, 1)',\n  opacity: 1\n}))])])])]);\nvar STATUS = /*#__PURE__*/function (STATUS) {\n  STATUS[STATUS[\"INVALID\"] = 0] = \"INVALID\";\n  STATUS[STATUS[\"VALID\"] = 1] = \"VALID\";\n  STATUS[STATUS[\"DISABLED\"] = 2] = \"DISABLED\";\n  return STATUS;\n}(STATUS || {});\nvar FileEvent = /*#__PURE__*/function (FileEvent) {\n  FileEvent[\"click\"] = \"click\";\n  FileEvent[\"focus\"] = \"focus\";\n  FileEvent[\"blur\"] = \"blur\";\n  return FileEvent;\n}(FileEvent || {});\nclass FileUploadControl {\n  constructor(configuration, validators) {\n    this.files = new Map();\n    this.listVisible = true;\n    this.status = STATUS.VALID;\n    this.errors = [];\n    this.validators = [];\n    this.multipleEnabled = true;\n    this.nativeBehavior = false;\n    this.multipleChanged = new BehaviorSubject(this.multipleEnabled);\n    this.statusChanged = new Subject();\n    this.eventsChanged = new Subject();\n    this.discardedValue = new Subject();\n    this.accept = null;\n    this.discard = false;\n    this.acceptChanged = new BehaviorSubject(this.accept);\n    /**\n     * track status `VALID`, `INVALID` or `DISABLED`\n     */\n    this.statusChanges = this.statusChanged.asObservable();\n    /**\n     * emit an event every time the value of the control\n     * changes.\n     * Initially returns last value\n     */\n    this.valueChanges = new BehaviorSubject([]);\n    /**\n     * @internal\n     * used to trigger layout change for list visibility\n     */\n    this.listVisibilityChanges = new BehaviorSubject(this.listVisible);\n    /**\n     * track changed on accept attribute\n     */\n    this.acceptChanges = this.acceptChanged.asObservable();\n    /**\n     * emit an event every time user programmatically ask for certain event\n     */\n    this.eventsChanges = this.eventsChanged.asObservable();\n    /**\n     * track changed on multiple attribute\n     */\n    this.multipleChanges = this.multipleChanged.asObservable();\n    /**\n     * track which files were discarded\n     */\n    this.discardedValueChanges = this.discardedValue.asObservable();\n    this.initialState(configuration);\n    this.defineValidators(validators);\n  }\n  /**\n   * set functions that determines the synchronous validity of this control.\n   */\n  setValidators(newValidators) {\n    this.defineValidators(newValidators);\n    this.validate();\n    return this;\n  }\n  addFile(file) {\n    return this.addMultipleFiles([file]);\n  }\n  removeFile(file) {\n    if (IsNullOrEmpty(file)) {\n      throw Error(`File has not been provided.`);\n    }\n    if (!this.disabled) {\n      this.files.delete(file.name);\n      this.validate();\n      this.valueChanges.next(Array.from(this.files.values()));\n    }\n    return this;\n  }\n  addFiles(files) {\n    return this.addMultipleFiles(Array.from(files));\n  }\n  get valid() {\n    return this.errors.length === 0 && this.status !== STATUS.DISABLED;\n  }\n  get invalid() {\n    return this.errors.length > 0;\n  }\n  getError() {\n    return this.errors;\n  }\n  /**\n   * number of uploaded files\n   */\n  get size() {\n    return this.files.size;\n  }\n  /**\n   * return list of Files\n   */\n  get value() {\n    return Array.from(this.files.values());\n  }\n  setValue(files) {\n    this.files.clear();\n    if (files instanceof Array) {\n      this.addMultipleFiles(files);\n    } else {\n      throw Error(`FormControl.setValue was provided with wrong argument type, ${files} was provided instead Array<File>`);\n    }\n    return this;\n  }\n  /**\n   * reset the control\n   */\n  clear() {\n    this.files.clear();\n    this.validate();\n    this.valueChanges.next(Array.from(this.files.values()));\n    return this;\n  }\n  get isListVisible() {\n    return this.listVisible;\n  }\n  setListVisibility(isVisible = true) {\n    this.listVisible = isVisible;\n    this.listVisibilityChanges.next(this.listVisible);\n    return this;\n  }\n  get disabled() {\n    return this.status === STATUS.DISABLED;\n  }\n  enable(isEnabled = true) {\n    this.status = isEnabled ? STATUS.VALID : STATUS.DISABLED;\n    this.validate();\n    this.statusChanged.next(this.status);\n    return this;\n  }\n  disable(isDisabled = true) {\n    this.status = isDisabled ? STATUS.DISABLED : STATUS.VALID;\n    this.validate();\n    this.statusChanged.next(this.status);\n    return this;\n  }\n  click() {\n    this.eventsChanged.next(FileEvent.click);\n    return this;\n  }\n  focus() {\n    this.eventsChanged.next(FileEvent.focus);\n    return this;\n  }\n  blur() {\n    this.eventsChanged.next(FileEvent.blur);\n    return this;\n  }\n  /**\n   * specifies the types of files that the server accepts\n   *\n   * ### Example\n   *\n   * ```\n   * acceptFiles(\"file_extension|audio/*|video/*|image/*|media_type\")\n   * ```\n   *\n   * To specify more than one value, separate the values with a comma (e.g. acceptFiles(\"audio/*,video/*,image/*\").\n   *\n   */\n  acceptFiles(accept) {\n    this.accept = accept;\n    this.acceptChanged.next(this.accept);\n    return this;\n  }\n  acceptAll() {\n    this.accept = null;\n    this.acceptChanged.next(this.accept);\n    return this;\n  }\n  get isMultiple() {\n    return this.multipleEnabled;\n  }\n  multiple(isEnabled = true) {\n    this.multipleEnabled = isEnabled;\n    this.multipleChanged.next(this.multipleEnabled);\n    return this;\n  }\n  native(isNativeBehaviorEnabled = true) {\n    this.nativeBehavior = isNativeBehaviorEnabled;\n    return this;\n  }\n  discardInvalid(discard = true) {\n    this.discard = discard;\n    return this;\n  }\n  initialState(configuration = {}) {\n    if (IsNullOrEmpty(configuration)) {\n      return;\n    }\n    /**\n     * Toggles discard of all invalid files\n     * it depends to accept, limit, size once a file\n     * dropped or selected it will be discarded if does not satisfy the constraint\n     */\n    this.discard = configuration.discardInvalid || this.discard;\n    this.status = !!configuration.disabled ? STATUS.DISABLED : this.status;\n    this.nativeBehavior = configuration.native != null ? configuration.native : this.nativeBehavior;\n    if (!IsNullOrEmpty(configuration.multiple)) {\n      this.multiple(configuration.multiple);\n    }\n    if (!IsNullOrEmpty(configuration.listVisible)) {\n      this.setListVisibility(configuration.listVisible);\n    }\n    if (!IsNullOrEmpty(configuration.accept)) {\n      this.acceptFiles(configuration.accept.join(','));\n    }\n  }\n  defineValidators(validators) {\n    if (!IsNullOrEmpty(validators)) {\n      this.validators = Array.isArray(validators) ? [...validators] : [validators];\n    }\n  }\n  /**\n   * @internal\n   * used to prevent valueChanges emit more times\n   * when multiple files are uploaded\n   */\n  addMultipleFiles(files) {\n    if (IsNullOrEmpty(files)) {\n      this.validate();\n      this.valueChanges.next(Array.from(this.files.values()));\n      return this;\n    }\n    /**\n     * native component deletes the list of files before adding new ones\n     */\n    if (this.nativeBehavior !== false) {\n      this.files.clear();\n    }\n    if (!this.multipleEnabled) {\n      /**\n       * if multiple is disabled and one file exists\n       * clear it and reupload a new one\n       */\n      if (this.files.size === 1) {\n        this.files.clear();\n      }\n      // add only one file\n      this.files.set(files[0].name, files[0]);\n    } else {\n      // replace files with same name\n      files.forEach(file => this.files.set(file.name, file));\n    }\n    if (this.discard) {\n      this.analyzeToDiscard();\n    } else {\n      this.validate();\n    }\n    this.valueChanges.next(Array.from(this.files.values()));\n    return this;\n  }\n  /**\n   * method used to discard invalid files\n   */\n  analyzeToDiscard() {\n    const deletedFiles = [];\n    const validators = [...this.validators];\n    while (validators.length) {\n      const validator = validators.shift();\n      const error = validator(this);\n      if (error) {\n        this.discardFile(error, deletedFiles);\n      }\n    }\n    if (deletedFiles.length) {\n      this.discardedValue.next(deletedFiles);\n    }\n  }\n  discardFile(error, deletedFiles) {\n    const errorsKey = Object.keys(error)[0];\n    const errors = error[errorsKey];\n    (Array.isArray(errors) ? errors : [errors]).forEach(fileError => {\n      if (fileError.file && this.files.has(fileError.file.name)) {\n        deletedFiles.push(fileError);\n        this.files.delete(fileError.file.name);\n      } else {\n        this.errors.push(error);\n      }\n    });\n  }\n  validate() {\n    if (this.status !== STATUS.DISABLED) {\n      const currentState = this.valid;\n      this.errors = this.validators.map(validator => validator(this)).filter(isInvalid => isInvalid);\n      if (currentState !== this.valid) {\n        this.statusChanged.next(this.valid ? STATUS.VALID : STATUS.INVALID);\n      }\n    } else {\n      this.errors.length = 0;\n    }\n  }\n}\nlet FileUploadAbstract = /*#__PURE__*/(() => {\n  class FileUploadAbstract {\n    constructor() {\n      this.control = null;\n      this.isMultiple = null;\n      this.hooks = [];\n      this.subscriptions = [];\n      this.hostElementRef = inject(ElementRef);\n      this.renderer = inject(Renderer2);\n      this.cdr = inject(ChangeDetectorRef);\n      this.onChange = () => {};\n    }\n    ngOnInit() {\n      if (IsNullOrEmpty(this.control)) {\n        this.control = new FileUploadControl();\n      }\n      this.setEvents();\n      this.checkAndMarkAsDisabled();\n      this.checkAndSetMultiple();\n      this.connectToForm();\n    }\n    ngOnDestroy() {\n      this.cdr.detach();\n      this.hooks.forEach(hook => hook());\n      this.hooks.length = 0;\n      this.subscriptions.forEach(subscription => subscription.unsubscribe());\n      this.subscriptions.length = 0;\n    }\n    setEvents() {\n      this.subscriptions.push(this.control.statusChanges.subscribe(status => this.checkAndMarkAsDisabled()));\n      this.subscriptions.push(this.control.eventsChanges.subscribe(event => this.triggerEvent(event)));\n      this.subscriptions.push(this.control.acceptChanges.subscribe(accept => this.updateAcceptAttr(accept)));\n      this.subscriptions.push(this.control.multipleChanges.subscribe(isMultiple => this.toggleMultiple(isMultiple)));\n    }\n    clearInputEl() {\n      this.input.nativeElement.value = null;\n    }\n    /**\n     * used to update model once state is changed through @Input\n     * or in case of simple-file-upload to override user value\n     */\n    checkAndSetMultiple() {\n      if (!this.control || this.isMultiple == null) {\n        return;\n      }\n      const isMultiple = this.isMultiple === true || this.isMultiple === 'true';\n      if (isMultiple !== this.control.isMultiple) {\n        this.control.multiple(isMultiple);\n      }\n    }\n    triggerEvent(event) {\n      if (typeof this.label.nativeElement[event] === 'function') {\n        this.label.nativeElement[event]();\n      }\n    }\n    updateAcceptAttr(accept) {\n      if (!IsNullOrEmpty(accept)) {\n        this.renderer.setAttribute(this.input.nativeElement, 'accept', accept);\n      } else {\n        this.renderer.removeAttribute(this.input.nativeElement, 'accept');\n      }\n    }\n    checkAndMarkAsDisabled() {\n      if (this.control.disabled) {\n        this.renderer.addClass(this.hostElementRef.nativeElement, 'disabled');\n        this.renderer.setProperty(this.input.nativeElement, 'disabled', true);\n      } else {\n        this.renderer.removeClass(this.hostElementRef.nativeElement, 'disabled');\n        this.renderer.setProperty(this.input.nativeElement, 'disabled', false);\n      }\n    }\n    toggleMultiple(isMultiple) {\n      if (isMultiple) {\n        this.renderer.setAttribute(this.input.nativeElement, 'multiple', '');\n      } else {\n        this.renderer.removeAttribute(this.input.nativeElement, 'multiple');\n      }\n    }\n    /**\n     * ControlValueAccessor implementation\n     */\n    connectToForm() {\n      this.subscriptions.push(this.control.valueChanges.subscribe(v => this.onChange(v)));\n    }\n    static {\n      this.ɵfac = function FileUploadAbstract_Factory(t) {\n        return new (t || FileUploadAbstract)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FileUploadAbstract\n      });\n    }\n  }\n  return FileUploadAbstract;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FileUploadIconComponent = /*#__PURE__*/(() => {\n  class FileUploadIconComponent {\n    constructor(fileUploadService) {\n      this.fileUploadService = fileUploadService;\n      this.fileType = 'unknown';\n    }\n    ngOnInit() {\n      this.fileType = this.fileUploadService.getFileType(this.file);\n    }\n    isIcon(type) {\n      switch (type) {\n        case 'text':\n          return this.fileType === 'html' || this.fileType === 'css' || this.fileType === 'csv' || this.fileType === 'js' || this.fileType === 'pdf' || this.fileType === 'ppt' || this.fileType === 'xls' || this.fileType === 'xlsx' || this.fileType === 'xml' || this.fileType === 'doc' || this.fileType === 'txt' || this.fileType === 'docx';\n        case 'audio':\n          return this.fileType === 'aac' || this.fileType === 'midi' || this.fileType === 'oga' || this.fileType === 'wav' || this.fileType === 'weba';\n        case 'image':\n          return this.fileType === 'png' || this.fileType === 'bmp' || this.fileType === 'gif' || this.fileType === 'jpg' || this.fileType === 'svg' || this.fileType === 'webp' || this.fileType === 'ico';\n        case 'video':\n          return this.fileType === 'avi' || this.fileType === 'mpeg' || this.fileType === 'ogv' || this.fileType === 'webm' || this.fileType === '3gp' || this.fileType === '3g2';\n      }\n    }\n    static {\n      this.ɵfac = function FileUploadIconComponent_Factory(t) {\n        return new (t || FileUploadIconComponent)(i0.ɵɵdirectiveInject(FileUploadService));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: FileUploadIconComponent,\n        selectors: [[\"file-upload-icon\"]],\n        inputs: {\n          file: \"file\"\n        },\n        decls: 6,\n        vars: 5,\n        consts: [[3, \"ngSwitch\"], [\"viewBox\", \"0 0 96 96\", 4, \"ngSwitchDefault\"], [\"viewBox\", \"0 0 96 96\", 4, \"ngSwitchCase\"], [\"viewBox\", \"0 0 96 96\"], [\"d\", \"M71.4,30.7c0.6,0.6,1.2,1.5,1.6,2.5c0.4,1.1,0.7,2.1,0.7,2.9v38.6c0,0.9-0.3,1.7-0.9,2.3\\n                S71.4,78,70.5,78h-45c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V21.2c0-0.9,0.3-1.7,0.9-2.3c0.6-0.6,1.4-0.9,2.3-0.9h30\\n                c0.9,0,1.9,0.2,2.9,0.7c1.1,0.4,1.9,1,2.5,1.6L71.4,30.7z M56.6,22.6v12.6h12.6c-0.2-0.6-0.5-1.1-0.7-1.4L57.9,23.3\\n                C57.7,23,57.2,22.8,56.6,22.6z M69.4,73.7V39.4H55.5c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V22.3H26.6v51.4H69.4z\"], [\"d\", \"M71.4,30.7c0.6,0.6,1.2,1.5,1.6,2.5c0.4,1.1,0.7,2.1,0.7,2.9v38.6c0,0.9-0.3,1.7-0.9,2.3\\n                S71.4,78,70.5,78h-45c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V21.2c0-0.9,0.3-1.7,0.9-2.3c0.6-0.6,1.4-0.9,2.3-0.9h30\\n                c0.9,0,1.9,0.2,2.9,0.7c1.1,0.4,1.9,1,2.5,1.6L71.4,30.7z M56.6,22.6v12.6h12.6c-0.2-0.6-0.5-1.1-0.7-1.4L57.9,23.3\\n                C57.7,23,57.2,22.8,56.6,22.6z M69.4,73.7V39.4H55.5c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V22.3H26.6v51.4H69.4z\\n                M65.1,58.7v10.7H30.9V63l6.4-6.4l4.3,4.3L54.4,48L65.1,58.7z M37.3,52.3c-1.8,0-3.3-0.6-4.6-1.9c-1.3-1.2-1.9-2.8-1.9-4.6\\n                c0-1.8,0.6-3.3,1.9-4.6c1.3-1.2,2.8-1.9,4.6-1.9s3.3,0.6,4.6,1.9c1.3,1.3,1.9,2.8,1.9,4.6c0,1.8-0.6,3.3-1.9,4.6\\n                C40.6,51.7,39.1,52.3,37.3,52.3z\"], [\"d\", \"M71.4,30.7c0.6,0.6,1.2,1.5,1.6,2.5c0.4,1.1,0.7,2.1,0.7,2.9v38.6c0,0.9-0.3,1.7-0.9,2.3\\n                S71.4,78,70.5,78h-45c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V21.2c0-0.9,0.3-1.7,0.9-2.3c0.6-0.6,1.4-0.9,2.3-0.9h30\\n                c0.9,0,1.9,0.2,2.9,0.7c1.1,0.4,1.9,1,2.5,1.6L71.4,30.7z M56.6,22.6v12.6h12.6c-0.2-0.6-0.5-1.1-0.7-1.4L57.9,23.3\\n                C57.7,23,57.2,22.8,56.6,22.6z M69.4,73.7V39.4H55.5c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V22.3H26.6v51.4H69.4z\\n                M43,46.5c0.4,0.2,0.7,0.5,0.7,1v18.2c0,0.5-0.2,0.8-0.7,1c-0.2,0-0.3,0.1-0.4,0.1c-0.3,0-0.5-0.1-0.8-0.3l-5.6-5.6h-4.4\\n                c-0.3,0-0.6-0.1-0.8-0.3c-0.2-0.2-0.3-0.5-0.3-0.8v-6.4c0-0.3,0.1-0.6,0.3-0.8c0.2-0.2,0.5-0.3,0.8-0.3h4.4l5.6-5.6\\n                C42.2,46.4,42.6,46.3,43,46.5z M57,69.5c0.7,0,1.3-0.3,1.7-0.8c2.9-3.5,4.3-7.6,4.3-12.2s-1.4-8.6-4.3-12.2\\n                c-0.4-0.5-0.8-0.7-1.4-0.8c-0.6-0.1-1.1,0.1-1.6,0.5c-0.5,0.4-0.7,0.9-0.8,1.5c-0.1,0.6,0.1,1.1,0.5,1.6c2.2,2.7,3.3,5.9,3.3,9.4\\n                c0,3.5-1.1,6.7-3.3,9.4c-0.4,0.5-0.5,1-0.5,1.6c0.1,0.6,0.3,1.1,0.8,1.4C56.1,69.4,56.5,69.5,57,69.5z M49.9,64.6\\n                c0.6,0,1.1-0.2,1.6-0.7c1.9-2.1,2.9-4.5,2.9-7.3s-1-5.3-2.9-7.3c-0.4-0.4-0.9-0.6-1.5-0.7c-0.6,0-1.1,0.2-1.5,0.6s-0.6,0.9-0.7,1.5\\n                c0,0.6,0.2,1.1,0.6,1.6c1.2,1.3,1.7,2.7,1.7,4.4c0,1.7-0.6,3.1-1.7,4.4c-0.4,0.4-0.6,1-0.6,1.6c0,0.6,0.2,1.1,0.7,1.5\\n                C48.9,64.4,49.4,64.6,49.9,64.6z\"], [\"d\", \"M71.4,30.7c0.6,0.6,1.2,1.5,1.6,2.5c0.4,1.1,0.7,2.1,0.7,2.9v38.6c0,0.9-0.3,1.7-0.9,2.3\\n                S71.4,78,70.5,78h-45c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V21.2c0-0.9,0.3-1.7,0.9-2.3c0.6-0.6,1.4-0.9,2.3-0.9h30\\n                c0.9,0,1.9,0.2,2.9,0.7c1.1,0.4,1.9,1,2.5,1.6L71.4,30.7z M56.6,22.6v12.6h12.6c-0.2-0.6-0.5-1.1-0.7-1.4L57.9,23.3\\n                C57.7,23,57.2,22.8,56.6,22.6z M69.4,73.7V39.4H55.5c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V22.3H26.6v51.4H69.4z\\n                M35.1,44.8c0-0.3,0.1-0.6,0.3-0.8c0.2-0.2,0.5-0.3,0.8-0.3h23.6c0.3,0,0.6,0.1,0.8,0.3c0.2,0.2,0.3,0.5,0.3,0.8v2.1\\n                c0,0.3-0.1,0.6-0.3,0.8c-0.2,0.2-0.5,0.3-0.8,0.3H36.2c-0.3,0-0.6-0.1-0.8-0.3c-0.2-0.2-0.3-0.5-0.3-0.8V44.8z M59.8,52.3\\n                c0.3,0,0.6,0.1,0.8,0.3c0.2,0.2,0.3,0.5,0.3,0.8v2.1c0,0.3-0.1,0.6-0.3,0.8c-0.2,0.2-0.5,0.3-0.8,0.3H36.2c-0.3,0-0.6-0.1-0.8-0.3\\n                c-0.2-0.2-0.3-0.5-0.3-0.8v-2.1c0-0.3,0.1-0.6,0.3-0.8c0.2-0.2,0.5-0.3,0.8-0.3H59.8z M59.8,60.9c0.3,0,0.6,0.1,0.8,0.3\\n                c0.2,0.2,0.3,0.5,0.3,0.8v2.1c0,0.3-0.1,0.6-0.3,0.8c-0.2,0.2-0.5,0.3-0.8,0.3H36.2c-0.3,0-0.6-0.1-0.8-0.3\\n                c-0.2-0.2-0.3-0.5-0.3-0.8v-2.1c0-0.3,0.1-0.6,0.3-0.8c0.2-0.2,0.5-0.3,0.8-0.3H59.8z\"], [\"d\", \"M71.4,30.7c0.6,0.6,1.2,1.5,1.6,2.5c0.4,1.1,0.7,2.1,0.7,2.9v38.6c0,0.9-0.3,1.7-0.9,2.3\\n                S71.4,78,70.5,78h-45c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V21.2c0-0.9,0.3-1.7,0.9-2.3c0.6-0.6,1.4-0.9,2.3-0.9h30\\n                c0.9,0,1.9,0.2,2.9,0.7c1.1,0.4,1.9,1,2.5,1.6L71.4,30.7z M56.6,22.6v12.6h12.6c-0.2-0.6-0.5-1.1-0.7-1.4L57.9,23.3\\n                C57.7,23,57.2,22.8,56.6,22.6z M69.4,73.7V39.4H55.5c-0.9,0-1.7-0.3-2.3-0.9c-0.6-0.6-0.9-1.4-0.9-2.3V22.3H26.6v51.4H69.4z\\n                M48,43.7c1.2,0,2.2,0.4,3,1.3c0.8,0.8,1.3,1.9,1.3,3v12.9c0,1.2-0.4,2.2-1.3,3c-0.8,0.8-1.9,1.3-3,1.3H35.1c-1.2,0-2.2-0.4-3-1.3\\n                c-0.8-0.8-1.3-1.9-1.3-3V48c0-1.2,0.4-2.2,1.3-3c0.8-0.8,1.9-1.3,3-1.3H48z M64.5,43.8c0.4,0.2,0.7,0.5,0.7,1v19.3\\n                c0,0.5-0.2,0.8-0.7,1c-0.2,0-0.3,0.1-0.4,0.1c-0.3,0-0.6-0.1-0.8-0.3l-8.9-8.9v-3l8.9-8.9c0.2-0.2,0.5-0.3,0.8-0.3\\n                C64.2,43.7,64.3,43.7,64.5,43.8z\"]],\n        template: function FileUploadIconComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainerStart(0, 0);\n            i0.ɵɵtemplate(1, FileUploadIconComponent__svg_svg_1_Template, 3, 0, \"svg\", 1)(2, FileUploadIconComponent__svg_svg_2_Template, 3, 0, \"svg\", 2)(3, FileUploadIconComponent__svg_svg_3_Template, 3, 0, \"svg\", 2)(4, FileUploadIconComponent__svg_svg_4_Template, 3, 0, \"svg\", 2)(5, FileUploadIconComponent__svg_svg_5_Template, 3, 0, \"svg\", 2);\n            i0.ɵɵelementContainerEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", true);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngSwitchCase\", ctx.isIcon(\"image\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngSwitchCase\", ctx.isIcon(\"audio\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngSwitchCase\", ctx.isIcon(\"text\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngSwitchCase\", ctx.isIcon(\"video\"));\n          }\n        },\n        dependencies: [i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n        styles: [\"[_nghost-%COMP%]{display:block;border:1px solid #eaeaea;border-radius:4px}[_nghost-%COMP%]   svg[_ngcontent-%COMP%]{fill:#909293}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return FileUploadIconComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FileUploadListItemComponent = /*#__PURE__*/(() => {\n  class FileUploadListItemComponent {\n    constructor(fileUploadService) {\n      this.fileUploadService = fileUploadService;\n    }\n    removeFile(file) {\n      this.control.removeFile(file);\n    }\n    calculateSize(size) {\n      return this.fileUploadService.formatSize(size);\n    }\n    static {\n      this.ɵfac = function FileUploadListItemComponent_Factory(t) {\n        return new (t || FileUploadListItemComponent)(i0.ɵɵdirectiveInject(FileUploadService));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: FileUploadListItemComponent,\n        selectors: [[\"file-upload-list-item\"]],\n        inputs: {\n          index: \"index\",\n          file: \"file\",\n          control: \"control\"\n        },\n        ngContentSelectors: _c0,\n        decls: 11,\n        vars: 3,\n        consts: [[3, \"file\"], [1, \"file-info\"], [1, \"file-name\"], [1, \"file-buttons\"], [1, \"remove-btn\", 3, \"click\"], [\"viewBox\", \"0 0 96 96\"], [\"d\", \"M40.5,66.8V39.3c0-0.4-0.1-0.7-0.4-0.9S39.6,38,39.3,38h-2.5c-0.4,0-0.7,0.1-0.9,0.4\\n                    s-0.4,0.5-0.4,0.9v27.5c0,0.4,0.1,0.7,0.4,0.9s0.5,0.4,0.9,0.4h2.5c0.4,0,0.7-0.1,0.9-0.4S40.5,67.1,40.5,66.8z M50.5,66.8V39.3\\n                    c0-0.4-0.1-0.7-0.4-0.9S49.6,38,49.3,38h-2.5c-0.4,0-0.7,0.1-0.9,0.4s-0.4,0.5-0.4,0.9v27.5c0,0.4,0.1,0.7,0.4,0.9s0.5,0.4,0.9,0.4\\n                    h2.5c0.4,0,0.7-0.1,0.9-0.4S50.5,67.1,50.5,66.8z M60.5,66.8V39.3c0-0.4-0.1-0.7-0.4-0.9S59.6,38,59.3,38h-2.5\\n                    c-0.4,0-0.7,0.1-0.9,0.4s-0.4,0.5-0.4,0.9v27.5c0,0.4,0.1,0.7,0.4,0.9s0.5,0.4,0.9,0.4h2.5c0.4,0,0.7-0.1,0.9-0.4\\n                    S60.5,67.1,60.5,66.8z M39.3,28h17.5l-1.9-4.6c-0.2-0.2-0.4-0.4-0.7-0.4H41.8c-0.3,0.1-0.5,0.2-0.7,0.4L39.3,28z M75.5,29.3v2.5\\n                    c0,0.4-0.1,0.7-0.4,0.9S74.6,33,74.3,33h-3.8v37c0,2.2-0.6,4-1.8,5.6S66,78,64.3,78H31.8c-1.7,0-3.2-0.8-4.4-2.3s-1.8-3.4-1.8-5.5\\n                    V33h-3.8c-0.4,0-0.7-0.1-0.9-0.4s-0.4-0.5-0.4-0.9v-2.5c0-0.4,0.1-0.7,0.4-0.9s0.5-0.4,0.9-0.4h12.1l2.7-6.5c0.4-1,1.1-1.8,2.1-2.5\\n                    s2-1,3.1-1h12.5c1,0,2.1,0.3,3.1,1s1.7,1.5,2.1,2.5l2.7,6.5h12.1c0.4,0,0.7,0.1,0.9,0.4S75.5,28.9,75.5,29.3z\"]],\n        template: function FileUploadListItemComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"file-upload-icon\", 0);\n            i0.ɵɵelementStart(1, \"div\", 1)(2, \"span\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 3)(6, \"span\", 4);\n            i0.ɵɵlistener(\"click\", function FileUploadListItemComponent_Template_span_click_6_listener() {\n              return ctx.removeFile(ctx.file);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(7, \"svg\", 5)(8, \"g\");\n            i0.ɵɵelement(9, \"path\", 6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵprojection(10);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"file\", ctx.file);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.file.name);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" (\", ctx.calculateSize(ctx.file.size), \") \");\n          }\n        },\n        dependencies: [FileUploadIconComponent],\n        styles: [\"@charset \\\"UTF-8\\\";[_nghost-%COMP%]{display:block;font-size:14px;color:#646464}[_nghost-%COMP%]:after{clear:both;content:\\\"\\\\a0\\\";display:block;height:0;line-height:0;visibility:hidden;zoom:1}file-upload-icon[_ngcontent-%COMP%]{float:left;width:30px;height:36px;margin:0 10px 0 0}.file-info[_ngcontent-%COMP%]{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.remove-btn[_ngcontent-%COMP%]{font-size:12px;cursor:pointer}.remove-btn[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{display:inline-block;vertical-align:-20%;height:18px;width:18px}\"]\n      });\n    }\n  }\n  return FileUploadListItemComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FileUploadDropZoneComponent = /*#__PURE__*/(() => {\n  class FileUploadDropZoneComponent {\n    static {\n      this.ɵfac = function FileUploadDropZoneComponent_Factory(t) {\n        return new (t || FileUploadDropZoneComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: FileUploadDropZoneComponent,\n        selectors: [[\"file-upload-drop-zone\"]],\n        ngContentSelectors: _c0,\n        decls: 6,\n        vars: 0,\n        consts: [[1, \"icon\"], [\"viewBox\", \"0 0 96 96\"], [\"d\", \"M62.8,68.1c0-0.6-0.2-1.1-0.6-1.5c-0.4-0.4-0.9-0.6-1.5-0.6s-1.1,0.2-1.5,0.6\\n                c-0.4,0.4-0.6,0.9-0.6,1.5c0,0.6,0.2,1.1,0.6,1.5c0.4,0.4,0.9,0.6,1.5,0.6s1.1-0.2,1.5-0.6S62.8,68.7,62.8,68.1z M71.3,68.1\\n                c0-0.6-0.2-1.1-0.6-1.5c-0.4-0.4-0.9-0.6-1.5-0.6c-0.6,0-1.1,0.2-1.5,0.6C67.2,67,67,67.5,67,68.1c0,0.6,0.2,1.1,0.6,1.5\\n                s0.9,0.6,1.5,0.6c0.6,0,1.1-0.2,1.5-0.6C71.1,69.2,71.3,68.7,71.3,68.1z M75.5,60.7v10.6c0,0.9-0.3,1.6-0.9,2.2\\n                c-0.6,0.6-1.4,0.9-2.2,0.9H23.7c-0.9,0-1.6-0.3-2.2-0.9c-0.6-0.6-0.9-1.4-0.9-2.2V60.7c0-0.9,0.3-1.6,0.9-2.2\\n                c0.6-0.6,1.4-0.9,2.2-0.9h14.1c0.5,1.2,1.2,2.2,2.3,3c1.1,0.8,2.3,1.2,3.7,1.2h8.5c1.3,0,2.6-0.4,3.7-1.2c1.1-0.8,1.9-1.8,2.3-3\\n                h14.1c0.9,0,1.6,0.3,2.2,0.9C75.2,59.1,75.5,59.8,75.5,60.7z M64.8,39.3c-0.4,0.9-1,1.3-2,1.3h-8.5v14.8c0,0.6-0.2,1.1-0.6,1.5\\n                c-0.4,0.4-0.9,0.6-1.5,0.6h-8.5c-0.6,0-1.1-0.2-1.5-0.6c-0.4-0.4-0.6-0.9-0.6-1.5V40.6h-8.5c-0.9,0-1.6-0.4-2-1.3\\n                c-0.4-0.9-0.2-1.6,0.5-2.3l14.8-14.8c0.4-0.4,0.9-0.6,1.5-0.6s1.1,0.2,1.5,0.6L64.3,37C65,37.7,65.1,38.4,64.8,39.3z\"], [1, \"upload-text\"]],\n        template: function FileUploadDropZoneComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"svg\", 1)(2, \"g\");\n            i0.ɵɵelement(3, \"path\", 2);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelementStart(4, \"div\", 3);\n            i0.ɵɵprojection(5);\n            i0.ɵɵelementEnd();\n          }\n        },\n        styles: [\"[_nghost-%COMP%]{display:block}.icon[_ngcontent-%COMP%]{height:35px;width:35px;border:1px solid #eaeaea;border-radius:4px}.icon[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#909293}.upload-text[_ngcontent-%COMP%]{overflow:hidden;width:auto;position:relative;padding-left:20px}.list-visible[_nghost-%COMP%]   .upload-text[_ngcontent-%COMP%], .list-visible   [_nghost-%COMP%]   .upload-text[_ngcontent-%COMP%]{display:none}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return FileUploadDropZoneComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DRAGOVER = 'dragover';\nconst TOUCHED = 'ng-touched';\nlet FileUploadComponent = /*#__PURE__*/(() => {\n  class FileUploadComponent extends FileUploadAbstract {\n    set multiple(isMultiple) {\n      this.isMultiple = isMultiple;\n      this.checkAndSetMultiple();\n    }\n    constructor(fileUploadService, document) {\n      super();\n      this.fileUploadService = fileUploadService;\n      this.document = document;\n      this.control = null;\n      this.animation = true;\n      this.templateRef = null;\n      this.listItem = null;\n      this.templateContext = {\n        $implicit: this.fileUploadService.isFileDragDropAvailable(),\n        isFileDragDropAvailable: this.fileUploadService.isFileDragDropAvailable()\n      };\n      /** animation fields */\n      this.zoomText = 'static';\n      this.listVisible = false;\n      this.onTouch = () => {\n        this.renderer.addClass(this.hostElementRef.nativeElement, TOUCHED);\n      };\n    }\n    get hasFiles() {\n      return this.control.isListVisible && this.control.size > 0;\n    }\n    get isInvalid() {\n      return !this.control.disabled && this.control.invalid;\n    }\n    get isAnimationDisabled() {\n      return this.animation === false || this.animation === 'false';\n    }\n    trackByFn(index, item) {\n      return item.name;\n    }\n    setEvents() {\n      super.setEvents();\n      ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach(eventName => {\n        this.hooks.push(this.renderer.listen(this.document, eventName, event => this.preventDragEvents(event)));\n      });\n      ['dragover', 'dragenter'].forEach(eventName => {\n        this.hooks.push(this.renderer.listen(this.hostElementRef.nativeElement, eventName, event => this.onDragOver(event)));\n      });\n      ['dragleave', 'dragend', 'drop'].forEach(eventName => {\n        this.hooks.push(this.renderer.listen(this.hostElementRef.nativeElement, eventName, event => this.onDragLeave(event)));\n      });\n      this.subscriptions.push(this.control.valueChanges.subscribe(files => this.renderView()));\n      this.subscriptions.push(this.control.listVisibilityChanges.subscribe(status => this.toggleListVisibility()));\n    }\n    onKeyDown(event) {\n      if (event.keyCode === 13 || event.keyCode === 32) {\n        event.preventDefault();\n        this.control.click();\n      }\n    }\n    preventDragEvents(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    renderView() {\n      if (!this.listVisible) {\n        this.zoomText = this.control.isListVisible && this.control.size > 0 ? 'zoomOut' : 'static';\n      }\n      this.cdr.markForCheck();\n    }\n    showList() {\n      if (this.zoomText !== 'static') {\n        this.listVisible = true;\n      }\n    }\n    hideList() {\n      this.listVisible = false;\n    }\n    toggleListVisibility() {\n      this.listVisible = this.control.isListVisible && this.control.size > 0;\n      if (this.listVisible) {\n        this.renderer.addClass(this.hostElementRef.nativeElement, 'list-visible');\n        this.zoomText = 'static';\n      }\n      this.cdr.markForCheck();\n    }\n    /**\n     * on file over add class name\n     */\n    onDragOver(event) {\n      this.renderer.addClass(this.hostElementRef.nativeElement, DRAGOVER);\n    }\n    /**\n     * on mouse out remove class name\n     */\n    onDragLeave(event) {\n      this.renderer.removeClass(this.hostElementRef.nativeElement, DRAGOVER);\n    }\n    onDrop(event) {\n      if (this.control.disabled) {\n        return;\n      }\n      // There is some issue with DragEvent in typescript lib.dom.d.ts\n      const files = event.dataTransfer.files;\n      this.control.addFiles(files);\n      this.onTouch();\n    }\n    onInputChange(event) {\n      const input = event.target;\n      if (!this.control.disabled && input.files.length > 0) {\n        this.control.addFiles(input.files);\n        this.clearInputEl();\n      }\n      this.onTouch();\n    }\n    /**\n     * model -> view changes\n     */\n    writeValue(files) {\n      if (files != null) {\n        this.control.setValue(files);\n      }\n    }\n    /**\n     * register function which will be called on UI change\n     * to update view -> model\n     */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouch = fn;\n    }\n    setDisabledState(isDisabled) {\n      this.control.disable(isDisabled);\n    }\n    zoomAnimationDone(event) {\n      if (this.control.isListVisible && this.control.size > 0) {\n        this.showList();\n      } else {\n        this.hideList();\n      }\n      if (event.fromState === 'static' && event.toState === 'zoomOut') {\n        this.renderer.addClass(this.hostElementRef.nativeElement, 'hide-text');\n      } else {\n        this.renderer.removeClass(this.hostElementRef.nativeElement, 'hide-text');\n      }\n      if (event.toState === 'zoomIn') {\n        this.zoomText = 'static';\n      }\n    }\n    animationListFinished(event) {\n      if (event.toState === 'void') {\n        this.zoomText = 'zoomIn';\n        this.renderer.removeClass(this.hostElementRef.nativeElement, 'list-visible');\n      }\n      if (event.fromState === 'void') {\n        this.zoomText = 'static';\n        this.renderer.addClass(this.hostElementRef.nativeElement, 'list-visible');\n      }\n    }\n    static {\n      this.ɵfac = function FileUploadComponent_Factory(t) {\n        return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(FileUploadService), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: FileUploadComponent,\n        selectors: [[\"file-upload\", 3, \"simple\", \"\"]],\n        contentQueries: function FileUploadComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n            i0.ɵɵcontentQuery(dirIndex, _c2, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listItem = _t.first);\n          }\n        },\n        viewQuery: function FileUploadComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c3, 7);\n            i0.ɵɵviewQuery(_c4, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.label = _t.first);\n          }\n        },\n        hostVars: 5,\n        hostBindings: function FileUploadComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"drop\", function FileUploadComponent_drop_HostBindingHandler($event) {\n              return ctx.onDrop($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵsyntheticHostProperty(\"@.disabled\", ctx.isAnimationDisabled);\n            i0.ɵɵclassProp(\"has-files\", ctx.hasFiles)(\"ng-invalid\", ctx.isInvalid);\n          }\n        },\n        inputs: {\n          control: \"control\",\n          animation: \"animation\",\n          multiple: \"multiple\"\n        },\n        features: [i0.ɵɵProvidersFeature([FileUploadService, {\n          provide: NG_VALUE_ACCESSOR,\n          useExisting: forwardRef(() => FileUploadComponent),\n          multi: true\n        }]), i0.ɵɵInheritDefinitionFeature],\n        decls: 9,\n        vars: 6,\n        consts: [[\"labelRef\", \"\"], [\"defaultTemplate\", \"\"], [\"inputRef\", \"\"], [\"isNotDragDropAvailable\", \"\"], [\"defaultItemTemplate\", \"\"], [\"tabindex\", \"0\", 1, \"upload-input\", 3, \"keydown\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"type\", \"file\", \"tabindex\", \"-1\", \"multiple\", \"\", 1, \"files-input\", 3, \"change\"], [\"class\", \"upload-list\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"upload-list\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [3, \"index\", \"file\", \"control\"]],\n        template: function FileUploadComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"label\", 5, 0);\n            i0.ɵɵlistener(\"keydown\", function FileUploadComponent_Template_label_keydown_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onKeyDown($event));\n            })(\"@zoomAnimation.done\", function FileUploadComponent_Template_label_animation_zoomAnimation_done_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.zoomAnimationDone($event));\n            });\n            i0.ɵɵtemplate(2, FileUploadComponent_ng_container_2_Template, 1, 0, \"ng-container\", 6)(3, FileUploadComponent_ng_template_3_Template, 4, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelementStart(5, \"input\", 7, 2);\n            i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_5_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onInputChange($event));\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(7, FileUploadComponent_div_7_Template, 5, 5, \"div\", 8);\n            i0.ɵɵpipe(8, \"async\");\n          }\n          if (rf & 2) {\n            const defaultTemplate_r12 = i0.ɵɵreference(4);\n            i0.ɵɵproperty(\"@zoomAnimation\", ctx.zoomText);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.templateRef ? ctx.templateRef : defaultTemplate_r12)(\"ngTemplateOutletContext\", ctx.templateContext);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(8, 4, ctx.control.listVisibilityChanges) && ctx.control.size > 0 && ctx.listVisible);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, FileUploadListItemComponent, FileUploadDropZoneComponent, i2.AsyncPipe],\n        styles: [\"@charset \\\"UTF-8\\\";[_nghost-%COMP%], [_nghost-%COMP%] > *[_ngcontent-%COMP%]{box-sizing:border-box}[_nghost-%COMP%]{overflow:hidden;display:block;background:#fafafa;padding:20px 66px 20px 20px;min-height:140px;outline:1px dashed #92b0b3;outline-offset:-10px;position:relative}[_nghost-%COMP%]     .icon{float:left}.dragover[_nghost-%COMP%]{outline-width:2px}.disabled[_nghost-%COMP%]{opacity:.5;cursor:no-drop}.files-input[_ngcontent-%COMP%]{width:.1px;height:.1px;opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden}.upload-input[_ngcontent-%COMP%]:after{clear:both;content:\\\"\\\\a0\\\";display:block;height:0;line-height:0;visibility:hidden;zoom:1}.upload-input[_ngcontent-%COMP%]{cursor:pointer;display:inline-block;color:#646464;position:absolute;top:50%;left:50%;margin:0;transform:translate(-50%,-50%);outline:none}.disabled[_nghost-%COMP%]   .upload-input[_ngcontent-%COMP%]{cursor:not-allowed}.list-visible[_nghost-%COMP%]   .upload-input[_ngcontent-%COMP%]{top:20px;left:100%;margin-left:-20px;transform:translate(-100%);text-align:center}.hide-text[_nghost-%COMP%]   .upload-input[_ngcontent-%COMP%]{opacity:0}.dragover[_nghost-%COMP%]:not(.disabled)   .upload-input[_ngcontent-%COMP%], [_nghost-%COMP%]:not(.disabled)   .upload-input[_ngcontent-%COMP%]:hover, [_nghost-%COMP%]:not(.disabled)   .upload-input[_ngcontent-%COMP%]:focus{color:#80a9d2}.dragover[_nghost-%COMP%]:not(.disabled)   .icon[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%], [_nghost-%COMP%]:not(.disabled)   .upload-input[_ngcontent-%COMP%]:hover   svg[_ngcontent-%COMP%], [_nghost-%COMP%]:not(.disabled)   .upload-input[_ngcontent-%COMP%]:focus   svg[_ngcontent-%COMP%]{fill:#80a9d2}file-upload-list-item[_ngcontent-%COMP%]{padding:10px 0 0}file-upload-list-item[_ngcontent-%COMP%]:first-child{padding:0}\"],\n        data: {\n          animation: [ZoomAnimation, InsertAnimation]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return FileUploadComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FileUploadAttributeComponent = /*#__PURE__*/(() => {\n  class FileUploadAttributeComponent {\n    constructor(fileUploadService, hostElementRef, renderer, document) {\n      this.fileUploadService = fileUploadService;\n      this.hostElementRef = hostElementRef;\n      this.renderer = renderer;\n      this.document = document;\n      this.control = null;\n      this.templateRef = null;\n      this.hooks = [];\n      this.subscriptions = [];\n      this.onTouch = () => {\n        this.renderer.addClass(this.hostElementRef.nativeElement, TOUCHED);\n      };\n    }\n    ngOnInit() {\n      if (IsNullOrEmpty(this.control)) {\n        this.control = new FileUploadControl();\n      }\n    }\n    ngAfterViewInit() {\n      if (this.fileUploadService.isFileDragDropAvailable()) {\n        this.setEvents();\n        this.checkAndMarkAsDisabled();\n      }\n    }\n    ngOnDestroy() {\n      this.hooks.forEach(hook => hook());\n      this.hooks.length = 0;\n      this.subscriptions.forEach(subscription => subscription.unsubscribe());\n      this.subscriptions.length = 0;\n    }\n    get hasFiles() {\n      return this.control.isListVisible && this.control.size > 0;\n    }\n    get isInvalid() {\n      return !this.control.disabled && this.control.invalid;\n    }\n    setEvents() {\n      ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach(eventName => {\n        this.hooks.push(this.renderer.listen(this.document, eventName, event => this.preventDragEvents(event)));\n      });\n      ['dragover', 'dragenter'].forEach(eventName => {\n        this.hooks.push(this.renderer.listen(this.hostElementRef.nativeElement, eventName, event => this.onDragOver(event)));\n      });\n      ['dragleave', 'dragend', 'drop'].forEach(eventName => {\n        this.hooks.push(this.renderer.listen(this.hostElementRef.nativeElement, eventName, event => {\n          if (this.control.disabled && eventName === 'dragleave' || eventName !== 'dragleave') {\n            this.onDragLeave(event);\n          }\n        }));\n      });\n      ['dragleave'].forEach(eventName => {\n        this.hooks.push(this.renderer.listen(this.overlay.nativeElement, eventName, event => this.onDragLeave(event)));\n      });\n      this.subscriptions.push(this.control.statusChanges.subscribe(status => this.checkAndMarkAsDisabled()));\n    }\n    checkAndMarkAsDisabled() {\n      if (this.control.disabled) {\n        this.renderer.addClass(this.hostElementRef.nativeElement, 'disabled');\n      } else {\n        this.renderer.removeClass(this.hostElementRef.nativeElement, 'disabled');\n      }\n    }\n    preventDragEvents(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    /**\n     * on file over add class name\n     */\n    onDragOver(event) {\n      this.renderer.addClass(this.hostElementRef.nativeElement, DRAGOVER);\n    }\n    /**\n     * on mouse out remove class name\n     */\n    onDragLeave(event) {\n      this.renderer.removeClass(this.hostElementRef.nativeElement, DRAGOVER);\n    }\n    onDrop(event) {\n      if (this.control.disabled) {\n        return;\n      }\n      const files = event.dataTransfer.files;\n      this.control.addFiles(files);\n      this.onTouch();\n    }\n    static {\n      this.ɵfac = function FileUploadAttributeComponent_Factory(t) {\n        return new (t || FileUploadAttributeComponent)(i0.ɵɵdirectiveInject(FileUploadService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: FileUploadAttributeComponent,\n        selectors: [[\"\", \"file-drop-zone\", \"\"]],\n        contentQueries: function FileUploadAttributeComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n          }\n        },\n        viewQuery: function FileUploadAttributeComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c6, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlay = _t.first);\n          }\n        },\n        hostVars: 4,\n        hostBindings: function FileUploadAttributeComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"drop\", function FileUploadAttributeComponent_drop_HostBindingHandler($event) {\n              return ctx.onDrop($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"has-files\", ctx.hasFiles)(\"ng-invalid\", ctx.isInvalid);\n          }\n        },\n        inputs: {\n          control: \"control\"\n        },\n        features: [i0.ɵɵProvidersFeature([FileUploadService])],\n        attrs: _c7,\n        ngContentSelectors: _c0,\n        decls: 2,\n        vars: 1,\n        consts: [[\"overlay\", \"\"], [\"defaultTemplate\", \"\"], [\"class\", \"overlay\", 4, \"ngIf\"], [1, \"overlay\"], [1, \"upload-input\"], [4, \"ngTemplateOutlet\"]],\n        template: function FileUploadAttributeComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n            i0.ɵɵtemplate(1, FileUploadAttributeComponent_div_1_Template, 6, 1, \"div\", 2);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.fileUploadService.isFileDragDropAvailable());\n          }\n        },\n        dependencies: [i2.NgIf, i2.NgTemplateOutlet, FileUploadDropZoneComponent],\n        styles: [\"[_nghost-%COMP%]{position:relative;display:block}[_nghost-%COMP%]   .overlay[_ngcontent-%COMP%]{display:none;background:rgba(255,255,255,.8);outline:2px dashed #92b0b3;outline-offset:-10px;position:absolute;inset:0}.dragover[_nghost-%COMP%]:not(.disabled)   .overlay[_ngcontent-%COMP%]{display:block}[_nghost-%COMP%]     .icon{margin:0 auto 10px}[_nghost-%COMP%]     .icon svg{fill:#80a9d2}.upload-input[_ngcontent-%COMP%]{pointer-events:none;cursor:pointer;display:inline-block;color:#80a9d2;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transition:all .15s ease-in-out}\"]\n      });\n    }\n  }\n  return FileUploadAttributeComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SimpleFileUploadComponent = /*#__PURE__*/(() => {\n  class SimpleFileUploadComponent extends FileUploadAbstract {\n    constructor(fileUploadService) {\n      super();\n      this.fileUploadService = fileUploadService;\n      this.control = null;\n      this.buttonRef = null;\n      this.placeholderRef = null;\n      this.isMultiple = null;\n      this.onTouch = () => {\n        this.renderer.addClass(this.hostElementRef.nativeElement, TOUCHED);\n      };\n    }\n    get hasFiles() {\n      return this.control.isListVisible && this.control.size > 0;\n    }\n    get isInvalid() {\n      return !this.control.disabled && this.control.invalid;\n    }\n    onInputChange(event) {\n      const input = event.target;\n      if (!this.control.disabled && input.files.length > 0) {\n        this.control.setValue(Array.from(input.files));\n        this.clearInputEl();\n      }\n      this.onTouch();\n    }\n    /**\n     * model -> view changes\n     */\n    writeValue(files) {\n      if (files != null) {\n        this.control.setValue(files);\n      }\n    }\n    trackByFn(index, item) {\n      return item.name;\n    }\n    /**\n     * register function which will be called on UI change\n     * to update view -> model\n     */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouch = fn;\n    }\n    setDisabledState(isDisabled) {\n      this.control.disable(isDisabled);\n    }\n    onKeyDown(event) {\n      if (event.keyCode === 13 || event.keyCode === 32) {\n        event.preventDefault();\n        this.control.click();\n      }\n    }\n    static {\n      this.ɵfac = function SimpleFileUploadComponent_Factory(t) {\n        return new (t || SimpleFileUploadComponent)(i0.ɵɵdirectiveInject(FileUploadService));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: SimpleFileUploadComponent,\n        selectors: [[\"file-upload\", \"simple\", \"\"]],\n        contentQueries: function SimpleFileUploadComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c8, 5);\n            i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonRef = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.placeholderRef = _t.first);\n          }\n        },\n        viewQuery: function SimpleFileUploadComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c3, 7);\n            i0.ɵɵviewQuery(_c4, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.label = _t.first);\n          }\n        },\n        hostVars: 4,\n        hostBindings: function SimpleFileUploadComponent_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"has-files\", ctx.hasFiles)(\"ng-invalid\", ctx.isInvalid);\n          }\n        },\n        inputs: {\n          control: \"control\"\n        },\n        features: [i0.ɵɵProvidersFeature([FileUploadService, {\n          provide: NG_VALUE_ACCESSOR,\n          useExisting: forwardRef(() => SimpleFileUploadComponent),\n          multi: true\n        }]), i0.ɵɵInheritDefinitionFeature],\n        attrs: _c9,\n        decls: 14,\n        vars: 7,\n        consts: [[\"defaultPlaceholderTemplate\", \"\"], [\"emptyList\", \"\"], [\"labelRef\", \"\"], [\"defaultButtonTemplate\", \"\"], [\"inputRef\", \"\"], [1, \"upload-text\"], [3, \"ngIf\"], [\"tabindex\", \"0\", 1, \"upload-button\", 3, \"keydown\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"type\", \"file\", \"tabindex\", \"-1\", 1, \"files-input\", 3, \"change\"], [3, \"ngIf\", \"ngIfElse\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [1, \"file-name\"], [1, \"button\"], [1, \"icon\"], [\"viewBox\", \"0 0 96 96\"], [\"d\", \"M62.8,68.1c0-0.6-0.2-1.1-0.6-1.5c-0.4-0.4-0.9-0.6-1.5-0.6s-1.1,0.2-1.5,0.6\\n                            c-0.4,0.4-0.6,0.9-0.6,1.5c0,0.6,0.2,1.1,0.6,1.5c0.4,0.4,0.9,0.6,1.5,0.6s1.1-0.2,1.5-0.6S62.8,68.7,62.8,68.1z M71.3,68.1\\n                            c0-0.6-0.2-1.1-0.6-1.5c-0.4-0.4-0.9-0.6-1.5-0.6c-0.6,0-1.1,0.2-1.5,0.6C67.2,67,67,67.5,67,68.1c0,0.6,0.2,1.1,0.6,1.5\\n                            s0.9,0.6,1.5,0.6c0.6,0,1.1-0.2,1.5-0.6C71.1,69.2,71.3,68.7,71.3,68.1z M75.5,60.7v10.6c0,0.9-0.3,1.6-0.9,2.2\\n                            c-0.6,0.6-1.4,0.9-2.2,0.9H23.7c-0.9,0-1.6-0.3-2.2-0.9c-0.6-0.6-0.9-1.4-0.9-2.2V60.7c0-0.9,0.3-1.6,0.9-2.2\\n                            c0.6-0.6,1.4-0.9,2.2-0.9h14.1c0.5,1.2,1.2,2.2,2.3,3c1.1,0.8,2.3,1.2,3.7,1.2h8.5c1.3,0,2.6-0.4,3.7-1.2c1.1-0.8,1.9-1.8,2.3-3\\n                            h14.1c0.9,0,1.6,0.3,2.2,0.9C75.2,59.1,75.5,59.8,75.5,60.7z M64.8,39.3c-0.4,0.9-1,1.3-2,1.3h-8.5v14.8c0,0.6-0.2,1.1-0.6,1.5\\n                            c-0.4,0.4-0.9,0.6-1.5,0.6h-8.5c-0.6,0-1.1-0.2-1.5-0.6c-0.4-0.4-0.6-0.9-0.6-1.5V40.6h-8.5c-0.9,0-1.6-0.4-2-1.3\\n                            c-0.4-0.9-0.2-1.6,0.5-2.3l14.8-14.8c0.4-0.4,0.9-0.6,1.5-0.6s1.1,0.2,1.5,0.6L64.3,37C65,37.7,65.1,38.4,64.8,39.3z\"], [1, \"button-text\"]],\n        template: function SimpleFileUploadComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 5);\n            i0.ɵɵtemplate(1, SimpleFileUploadComponent_ng_template_1_Template, 1, 6, \"ng-template\", 6);\n            i0.ɵɵpipe(2, \"async\");\n            i0.ɵɵtemplate(3, SimpleFileUploadComponent_ng_template_3_Template, 1, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(5, SimpleFileUploadComponent_ng_template_5_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"label\", 7, 2);\n            i0.ɵɵlistener(\"keydown\", function SimpleFileUploadComponent_Template_label_keydown_7_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onKeyDown($event));\n            });\n            i0.ɵɵtemplate(9, SimpleFileUploadComponent_ng_container_9_Template, 1, 0, \"ng-container\", 8)(10, SimpleFileUploadComponent_ng_template_10_Template, 7, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelementStart(12, \"input\", 9, 4);\n            i0.ɵɵlistener(\"change\", function SimpleFileUploadComponent_Template_input_change_12_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onInputChange($event));\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const defaultButtonTemplate_r8 = i0.ɵɵreference(11);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 3, ctx.control.valueChanges));\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.buttonRef ? ctx.buttonRef : defaultButtonTemplate_r8)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c10, ctx.control));\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.AsyncPipe],\n        styles: [\"[_nghost-%COMP%], [_nghost-%COMP%] > *[_ngcontent-%COMP%]{box-sizing:border-box}[_nghost-%COMP%]{display:flex;line-height:1.5;color:#555;background-color:#fff;border:1px solid #ddd;border-radius:4px;box-shadow:inset 0 4px 7px #0000000d}.disabled[_nghost-%COMP%]{opacity:.5}.files-input[_ngcontent-%COMP%]{width:.1px;height:.1px;opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden}.icon[_ngcontent-%COMP%]{height:24px;width:24px;display:inline-block}.icon[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#555}.upload-button[_ngcontent-%COMP%]{cursor:pointer;display:block;padding:2px 4px;background-color:#eee;border-left:1px solid #ddd;border-radius:0 4px 4px 0;min-width:100px;color:#555;margin:0;position:relative;outline:none}.upload-text[_ngcontent-%COMP%]{display:block;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;width:100%;padding:5px 10px;font-size:14px;height:30px}.button-text[_ngcontent-%COMP%]{vertical-align:middle;padding-left:10px}.disabled[_nghost-%COMP%]   .upload-button[_ngcontent-%COMP%]{cursor:not-allowed}[_nghost-%COMP%]:not(.disabled)   .upload-button[_ngcontent-%COMP%]:focus, [_nghost-%COMP%]:not(.disabled)   .upload-button[_ngcontent-%COMP%]:hover{color:#80a9d2}[_nghost-%COMP%]:not(.disabled)   .upload-button[_ngcontent-%COMP%]:focus   svg[_ngcontent-%COMP%], [_nghost-%COMP%]:not(.disabled)   .upload-button[_ngcontent-%COMP%]:hover   svg[_ngcontent-%COMP%]{fill:#80a9d2}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return SimpleFileUploadComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * function used to check file size\n */\nconst checkFileSize = (actualSize, maxSize, minSize = 0, file) => {\n  return !IsNullOrEmpty(maxSize) && actualSize > maxSize || actualSize < minSize ? {\n    maxSize,\n    minSize,\n    actual: actualSize,\n    file\n  } : null;\n};\nconst getFileType = (file, fileExtension) => {\n  const type = file.type;\n  if (!IsNullOrEmpty(type)) {\n    return type;\n  }\n  return FileUploadTypes[fileExtension];\n};\nvar CheckType = /*#__PURE__*/function (CheckType) {\n  CheckType[CheckType[\"ALLOWED\"] = 0] = \"ALLOWED\";\n  CheckType[CheckType[\"NOTALLOWED\"] = 1] = \"NOTALLOWED\";\n  return CheckType;\n}(CheckType || {});\nconst FILE_EXT_REG = /(^[.]\\w*)$/m;\n/**\n * function used to check file type\n *\n * #### allowedTypes\n * file_extension|audio/*|video/*|image/*|media_type\n */\nconst checkFileTypes = (file, types, checkType) => {\n  const fileExtension = file.name.split('.').pop().toLowerCase();\n  const fileType = getFileType(file, fileExtension);\n  for (const type of types) {\n    const isFound = FILE_EXT_REG.test(type) ? type === `.${fileExtension}` : new RegExp(type).test(fileType);\n    if (isFound) {\n      return checkType === CheckType.ALLOWED ? null : {\n        notAllowedTypes: types,\n        actual: fileType,\n        file\n      };\n    }\n  }\n  return checkType === CheckType.ALLOWED ? {\n    allowedTypes: types,\n    actual: fileType,\n    file\n  } : null;\n};\nconst checkValueType = value => {\n  if (!Array.isArray(value)) {\n    throw Error(`FormControl.setValue was provided with wrong argument type, ${value} was provided instead Array<File>`);\n  }\n};\n// @dynamic\nclass FileUploadValidators {\n  /**\n   * Validator that compare the summary size of all files\n   */\n  static sizeLimit(maxSize) {\n    return control => {\n      const files = control.value;\n      if (IsNullOrEmpty(files)) {\n        return null;\n      }\n      checkValueType(files);\n      const sum = files.map(file => file.size).reduce((a, b) => a + b, 0);\n      const toLargeFiles = checkFileSize(sum, maxSize);\n      return toLargeFiles ? {\n        'sizeLimit': toLargeFiles\n      } : null;\n    };\n  }\n  /**\n   * Validator that validate individually file maximum size length.\n   * Compare the File size in bytes\n   * @dynamic\n   */\n  static fileSize(maxSize) {\n    return control => {\n      const files = control.value;\n      if (IsNullOrEmpty(files)) {\n        return null;\n      }\n      checkValueType(files);\n      const toLargeFiles = files.map(file => checkFileSize(file.size, maxSize, 0, file)).filter(error => error);\n      return toLargeFiles.length > 0 ? {\n        'fileSize': toLargeFiles\n      } : null;\n    };\n  }\n  /**\n   * Compare the File size in bytes with max and min size limits\n   * @dynamic\n   */\n  static sizeRange({\n    minSize,\n    maxSize\n  }) {\n    return control => {\n      const files = control.value;\n      if (IsNullOrEmpty(files)) {\n        return null;\n      }\n      checkValueType(files);\n      const sizeMismatch = files.map(file => checkFileSize(file.size, maxSize, minSize, file)).filter(error => error);\n      return sizeMismatch.length > 0 ? {\n        'sizeRange': sizeMismatch\n      } : null;\n    };\n  }\n  /**\n   * validator that requires control to have limit on files number\n   * @dynamic\n   */\n  static filesLimit(numFiles) {\n    return control => {\n      const files = control.value;\n      if (IsNullOrEmpty(files)) {\n        return null;\n      }\n      checkValueType(files);\n      const filesLimit = files.slice(-1 * (files.length - numFiles)).map(file => ({\n        'max': numFiles,\n        'actual': files.length,\n        file\n      }));\n      return files.length > numFiles ? {\n        'filesLimit': filesLimit\n      } : null;\n    };\n  }\n  /**\n   * validator that requires control to have limit on media types\n   *\n   * ##### Allowed media types are\n   *\n   * - file_extension - a file extension starting with the STOP character,\n   * e.g: .gif, .jpg, .png, .doc\n   * - audio/* -        All sound files are accepted\n   * - video/* -        All video files are accepted\n   * - image/* -        All image files are accepted\n   * - media_type -     A valid media type, with no parameters. Look at [IANA Media Types]\n   *      (https://www.iana.org/assignments/media-types/media-types.xhtml) for a complete list of standard media types\n   *\n   * #### Example\n   * `FileUploadValidators.accept([file_extension, audio/*, video/*, image/*, media_type])`\n   * @dynamic\n   */\n  static accept(allowedFileTypes) {\n    return control => {\n      const files = control.value;\n      if (IsNullOrEmpty(files)) {\n        return null;\n      }\n      checkValueType(files);\n      const notAllowedFiles = files.map(file => checkFileTypes(file, allowedFileTypes, CheckType.ALLOWED)).filter(error => error);\n      return notAllowedFiles.length > 0 ? {\n        'fileTypes': notAllowedFiles\n      } : null;\n    };\n  }\n  /**\n   * validator that requires control to have limit on media types\n   *\n   * ##### Not allowed media types are\n   *\n   * - file_extension - a file extension starting with the STOP character,\n   * e.g: .gif, .jpg, .png, .doc\n   * - audio/* -        All sound files are accepted\n   * - video/* -        All video files are accepted\n   * - image/* -        All image files are accepted\n   * - media_type -     A valid media type, with no parameters. Look at [IANA Media Types]\n   *      (https://www.iana.org/assignments/media-types/media-types.xhtml) for a complete list of standard media types\n   *\n   * #### Example\n   * `FileUploadValidators.reject([file_extension, audio/*, video/*, image/*, media_type])`\n   * @dynamic\n   */\n  static reject(rejectFileTypes) {\n    return control => {\n      const files = control.value;\n      if (IsNullOrEmpty(files)) {\n        return null;\n      }\n      checkValueType(files);\n      const notAllowedFiles = files.map(file => checkFileTypes(file, rejectFileTypes, CheckType.NOTALLOWED)).filter(error => error);\n      return notAllowedFiles.length > 0 ? {\n        'fileTypes': notAllowedFiles\n      } : null;\n    };\n  }\n}\n\n/**\n * A Directive that adds the `filesize` validator to controls marked with the\n * `filesize` attribute. The size of the file is in bytes or any other unit\n *\n * ### Example\n *\n * ```\n * <file-upload name=\"files\" ngModel filesize=\"830000\"></file-upload>\n * <file-upload name=\"files\" ngModel [filesize]=\"830000\"></file-upload>\n * <file-upload name=\"files\" ngModel minSize=\"0\" max=\"6200\"></file-upload>\n * <file-upload name=\"files\" ngModel filesize=\"123MB\"></file-upload>\n * <file-upload name=\"files\" ngModel [filesize]=\"12 mb\"></file-upload>\n * <file-upload name=\"files\" ngModel minSize=\"0\" max=\"324KB\"></file-upload>\n * ```\n *\n */\nlet FileSizeValidator = /*#__PURE__*/(() => {\n  class FileSizeValidator {\n    constructor(fileUploadService) {\n      this.fileUploadService = fileUploadService;\n    }\n    ngOnChanges(changes) {\n      if ('filesize' in changes || 'maxsize' in changes || 'minsize' in changes) {\n        this._createValidator();\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n    validate(c) {\n      return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n      this.onChange = fn;\n    }\n    _createValidator() {\n      let maxSize = null;\n      if (!IsNullOrEmpty(this.maxsize)) {\n        maxSize = this.fileUploadService.parseSize(this.maxsize);\n      } else if (!IsNullOrEmpty(this.filesize)) {\n        maxSize = this.fileUploadService.parseSize(this.filesize);\n      }\n      const minSize = this.fileUploadService.parseSize(this.minsize);\n      this.validator = FileUploadValidators.sizeRange({\n        maxSize,\n        minSize\n      });\n    }\n    static {\n      this.ɵfac = function FileSizeValidator_Factory(t) {\n        return new (t || FileSizeValidator)(i0.ɵɵdirectiveInject(FileUploadService));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FileSizeValidator,\n        selectors: [[\"file-upload\", \"filesize\", \"\", \"formControlName\", \"\"], [\"file-upload\", \"filesize\", \"\", \"formControl\", \"\"], [\"file-upload\", \"filesize\", \"\", \"ngModel\", \"\"], [\"file-upload\", \"minsize\", \"\", \"formControlName\", \"\"], [\"file-upload\", \"minsize\", \"\", \"formControl\", \"\"], [\"file-upload\", \"minsize\", \"\", \"ngModel\", \"\"], [\"file-upload\", \"maxsize\", \"\", \"formControlName\", \"\"], [\"file-upload\", \"maxsize\", \"\", \"formControl\", \"\"], [\"file-upload\", \"maxsize\", \"\", \"ngModel\", \"\"]],\n        hostVars: 3,\n        hostBindings: function FileSizeValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"filesize\", ctx.filesize ? ctx.filesize : null)(\"minsize\", ctx.minsize ? ctx.minsize : null)(\"maxsize\", ctx.maxsize ? ctx.maxsize : null);\n          }\n        },\n        inputs: {\n          filesize: \"filesize\",\n          minsize: \"minsize\",\n          maxsize: \"maxsize\"\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALIDATORS,\n          useExisting: forwardRef(() => FileSizeValidator),\n          multi: true\n        }]), i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FileSizeValidator;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A Directive that adds the `fileslimit` validator to controls marked with the\n * `fileslimit` attribute.\n *\n * ### Example\n *\n * ```\n * <file-upload name=\"files\" ngModel fileslimit=\"2\"></file-upload>\n * <file-upload name=\"files\" ngModel [fileslimit]=\"2\"></file-upload>\n * ```\n *\n */\nlet FilesLimitValidator = /*#__PURE__*/(() => {\n  class FilesLimitValidator {\n    ngOnChanges(changes) {\n      if ('fileslimit' in changes) {\n        this._createValidator();\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n    validate(c) {\n      return this.fileslimit != null ? this.validator(c) : null;\n    }\n    registerOnValidatorChange(fn) {\n      this.onChange = fn;\n    }\n    _createValidator() {\n      this.validator = FileUploadValidators.filesLimit(typeof this.fileslimit === 'string' ? parseInt(this.fileslimit, 10) : this.fileslimit);\n    }\n    static {\n      this.ɵfac = function FilesLimitValidator_Factory(t) {\n        return new (t || FilesLimitValidator)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FilesLimitValidator,\n        selectors: [[\"file-upload\", \"fileslimit\", \"\", \"formControlName\", \"\"], [\"file-upload\", \"fileslimit\", \"\", \"formControl\", \"\"], [\"file-upload\", \"fileslimit\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function FilesLimitValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"fileslimit\", ctx.fileslimit ? ctx.fileslimit : null);\n          }\n        },\n        inputs: {\n          fileslimit: \"fileslimit\"\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALIDATORS,\n          useExisting: forwardRef(() => FilesLimitValidator),\n          multi: true\n        }]), i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FilesLimitValidator;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A Directive that adds the `accept` validator to controls marked with the\n * `accept` attribute.\n *\n * ### Example\n *\n * ```\n * <file-upload name=\"files\" ngModel accept=\"file_extension|audio/*|video/*|image/*|media_type\"></file-upload>\n * <file-upload name=\"files\" ngModel [accept]=\"file_extension|audio/*|video/*|image/*|media_type\"></file-upload>\n * ```\n *\n * To specify more than one value, separate the values with a comma (e.g. <file-upload accept=\"audio/*,video/*,image/*\"></file-upload>.\n *\n */\nlet FilesAcceptValidator = /*#__PURE__*/(() => {\n  class FilesAcceptValidator {\n    ngOnChanges(changes) {\n      if ('accept' in changes) {\n        this._createValidator();\n        if (this.onChange) {\n          this.onChange();\n        }\n      }\n    }\n    validate(c) {\n      return !!this.validator ? this.validator(c) : null;\n    }\n    registerOnValidatorChange(fn) {\n      this.onChange = fn;\n    }\n    _createValidator() {\n      if (IsNullOrEmpty(this.accept)) {\n        return;\n      }\n      this.validator = FileUploadValidators.accept(this.accept.split(','));\n    }\n    static {\n      this.ɵfac = function FilesAcceptValidator_Factory(t) {\n        return new (t || FilesAcceptValidator)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FilesAcceptValidator,\n        selectors: [[\"file-upload\", \"accept\", \"\", \"formControlName\", \"\"], [\"file-upload\", \"accept\", \"\", \"formControl\", \"\"], [\"file-upload\", \"accept\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function FilesAcceptValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"accept\", ctx.accept ? ctx.accept : null);\n          }\n        },\n        inputs: {\n          accept: \"accept\"\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALIDATORS,\n          useExisting: forwardRef(() => FilesAcceptValidator),\n          multi: true\n        }]), i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FilesAcceptValidator;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FilesAcceptDirective = /*#__PURE__*/(() => {\n  class FilesAcceptDirective {\n    constructor(fileUpload, simpleFileUpload) {\n      this.fileUpload = null;\n      this.fileUpload = fileUpload || simpleFileUpload;\n    }\n    ngAfterViewInit() {\n      this.setAccept(this.accept);\n    }\n    ngOnChanges(changes) {\n      if ('accept' in changes && changes['accept'].currentValue !== changes['accept'].previousValue) {\n        this.setAccept(this.accept);\n      }\n    }\n    setAccept(accept) {\n      if (this.fileUpload && this.fileUpload.control) {\n        this.fileUpload.control.acceptFiles(accept);\n      }\n    }\n    static {\n      this.ɵfac = function FilesAcceptDirective_Factory(t) {\n        return new (t || FilesAcceptDirective)(i0.ɵɵdirectiveInject(FileUploadComponent, 11), i0.ɵɵdirectiveInject(SimpleFileUploadComponent, 11));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FilesAcceptDirective,\n        selectors: [[\"file-upload\", \"accept\", \"\"]],\n        hostVars: 1,\n        hostBindings: function FilesAcceptDirective_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"accept\", ctx.accept ? ctx.accept : null);\n          }\n        },\n        inputs: {\n          accept: \"accept\"\n        },\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FilesAcceptDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FilesDiscardDirective = /*#__PURE__*/(() => {\n  class FilesDiscardDirective {\n    set discard(discard) {\n      if (typeof discard === 'string' && (discard === 'true' || discard === 'false')) {\n        this.discardValue = JSON.parse(discard.toLowerCase());\n      } else if (typeof discard === 'boolean') {\n        this.discardValue = discard;\n      } else {\n        throw Error(`Provided value in directive [discard]=\"${discard}\" is not boolean.`);\n      }\n    }\n    constructor(fileUpload, simpleFileUpload) {\n      this.discardValue = null;\n      this.fileUpload = null;\n      this.fileUpload = fileUpload || simpleFileUpload;\n    }\n    ngAfterViewInit() {\n      this.setAccept(this.discardValue);\n    }\n    ngOnChanges(changes) {\n      if ('discard' in changes && changes['discard'].currentValue !== changes['discard'].previousValue) {\n        this.setAccept(this.discardValue);\n      }\n    }\n    setAccept(discard) {\n      if (this.fileUpload && this.fileUpload.control) {\n        this.fileUpload.control.discardInvalid(discard);\n      }\n    }\n    static {\n      this.ɵfac = function FilesDiscardDirective_Factory(t) {\n        return new (t || FilesDiscardDirective)(i0.ɵɵdirectiveInject(FileUploadComponent, 11), i0.ɵɵdirectiveInject(SimpleFileUploadComponent, 11));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FilesDiscardDirective,\n        selectors: [[\"file-upload\", \"discard\", \"\"]],\n        hostVars: 1,\n        hostBindings: function FilesDiscardDirective_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"discard\", ctx.discard ? ctx.discard : null);\n          }\n        },\n        inputs: {\n          discard: \"discard\"\n        },\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FilesDiscardDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FilesNativeDirective = /*#__PURE__*/(() => {\n  class FilesNativeDirective {\n    set native(isNative) {\n      if (typeof isNative === 'string' && (isNative === 'true' || isNative === 'false')) {\n        this.nativeValue = JSON.parse(isNative.toLowerCase());\n      } else if (typeof isNative === 'boolean') {\n        this.nativeValue = isNative;\n      } else {\n        throw Error(`Provided value in directive [native]=\"${isNative}\" is not boolean.`);\n      }\n    }\n    constructor(fileUpload, simpleFileUpload) {\n      this.nativeValue = null;\n      this.fileUpload = null;\n      this.fileUpload = fileUpload || simpleFileUpload;\n    }\n    ngAfterViewInit() {\n      this.enableNative(this.nativeValue);\n    }\n    ngOnChanges(changes) {\n      if ('native' in changes && changes['native'].currentValue !== changes['native'].previousValue) {\n        this.enableNative(this.nativeValue);\n      }\n    }\n    enableNative(isNative) {\n      if (this.fileUpload && this.fileUpload.control) {\n        this.fileUpload.control.native(isNative);\n      }\n    }\n    static {\n      this.ɵfac = function FilesNativeDirective_Factory(t) {\n        return new (t || FilesNativeDirective)(i0.ɵɵdirectiveInject(FileUploadComponent, 11), i0.ɵɵdirectiveInject(SimpleFileUploadComponent, 11));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FilesNativeDirective,\n        selectors: [[\"file-upload\", \"native\", \"\"]],\n        hostVars: 1,\n        hostBindings: function FilesNativeDirective_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"native\", ctx.native ? ctx.native : null);\n          }\n        },\n        inputs: {\n          native: \"native\"\n        },\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FilesNativeDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * FileUpload\n *\n * By Ivan Pintar, http://www.pintar-ivan.com\n * Licensed under the MIT License\n * See https://github.com/pIvan/file-upload/blob/master/README.md\n */\nlet FileUploadModule = /*#__PURE__*/(() => {\n  class FileUploadModule {\n    ngDoBootstrap() {}\n    static {\n      this.ɵfac = function FileUploadModule_Factory(t) {\n        return new (t || FileUploadModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: FileUploadModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [CommonModule]\n      });\n    }\n  }\n  return FileUploadModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of ngx-file-upload\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileSizeValidator, FileUploadAttributeComponent, FileUploadComponent, FileUploadControl, FileUploadDropZoneComponent, FileUploadListItemComponent, FileUploadModule, FileUploadService, FileUploadTypes, FileUploadValidators, FilesAcceptDirective, FilesAcceptValidator, FilesDiscardDirective, FilesLimitValidator, FilesNativeDirective, SimpleFileUploadComponent };\n","export enum CblImportResult {\n    Fail = 0,\n    Partial = 1,\n    Success = 2\n}","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\n\n\nexport interface TimelineStep {\n  title: string;\n  active: boolean;\n  icon: string;\n  index: number;\n}\n\n\n@Component({\n  selector: 'app-step-tracker',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './step-tracker.component.html',\n  styleUrls: ['./step-tracker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StepTrackerComponent {\n  @Input() steps: Array<TimelineStep> = [];\n  @Input() currentStep: number = 0;\n\n\n  constructor(private readonly cdRef: ChangeDetectorRef) {}\n\n}\n","\n<div class=\"card card-timeline px-2 mb-3 border-none\"> \n    <ul class=\"bs4-order-tracking\"> \n        <ng-container *ngFor=\"let step of steps\">\n            <li class=\"step\" [ngClass]=\"{'active': step.index === currentStep}\"> \n                <div><i class=\"{{step.icon}}\"></i></div>\n                {{step.title}}\n            </li>\n        </ng-container>\n    </ul> \n</div>","export enum CblImportReason {\n    ChapterMissing = 0,\n    VolumeMissing = 1,\n    SeriesMissing = 2,\n    NameConflict = 3,\n    AllSeriesMissing = 4,\n    EmptyFile = 5,\n    SeriesCollision = 6,\n    AllChapterMissing = 7,\n    Success = 8,\n    InvalidFile = 9\n}","import {inject, Pipe, PipeTransform} from '@angular/core';\nimport { CblBookResult } from 'src/app/_models/reading-list/cbl/cbl-book-result';\nimport { CblImportReason } from 'src/app/_models/reading-list/cbl/cbl-import-reason.enum';\nimport {TranslocoService} from \"@ngneat/transloco\";\n\nconst failIcon = '<i aria-hidden=\"true\" class=\"reading-list-fail--item fa-solid fa-circle-xmark me-1\"></i>';\nconst successIcon = '<i aria-hidden=\"true\" class=\"reading-list-success--item fa-solid fa-circle-check me-1\"></i>';\n\n@Pipe({\n  name: 'cblConflictReason',\n  standalone: true\n})\nexport class CblConflictReasonPipe implements PipeTransform {\n\n  translocoService = inject(TranslocoService);\n\n  transform(result: CblBookResult): string {\n    switch (result.reason) {\n      case CblImportReason.AllSeriesMissing:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.all-series-missing');\n      case CblImportReason.ChapterMissing:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.chapter-missing', {series: result.series, chapter: result.number});\n      case CblImportReason.EmptyFile:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.empty-file');\n      case CblImportReason.NameConflict:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.chapter-missing', {readingListName: result.readingListName});\n      case CblImportReason.SeriesCollision:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.series-collision', {seriesLink: `<a href=\"/library/${result.libraryId}/series/${result.seriesId}\" target=\"_blank\">${result.series}</a>`});\n      case CblImportReason.SeriesMissing:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.series-missing', {series: result.series});\n      case CblImportReason.VolumeMissing:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.volume-missing', {series: result.series, volume: result.volume});\n      case CblImportReason.AllChapterMissing:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.all-chapter-missing');\n      case CblImportReason.Success:\n        return successIcon + this.translocoService.translate('cbl-conflict-reason-pipe.volume-missing', {series: result.series, volume: result.volume, chapter: result.number});\n      case CblImportReason.InvalidFile:\n        return failIcon + this.translocoService.translate('cbl-conflict-reason-pipe.invalid-file');\n    }\n  }\n\n}\n","import {inject, Pipe, PipeTransform} from '@angular/core';\nimport { CblImportResult } from 'src/app/_models/reading-list/cbl/cbl-import-result.enum';\nimport {TranslocoService} from \"@ngneat/transloco\";\n\n@Pipe({\n  name: 'cblImportResult',\n  standalone: true\n})\nexport class CblImportResultPipe implements PipeTransform {\n\n  translocoService = inject(TranslocoService);\n\n  transform(result: CblImportResult): string {\n    switch (result) {\n      case CblImportResult.Success:\n        return this.translocoService.translate('cbl-import-result-pipe.success');\n      case CblImportResult.Partial:\n        return this.translocoService.translate('cbl-import-result-pipe.partial');\n      case CblImportResult.Fail:\n        return this.translocoService.translate('cbl-import-result-pipe.failure');\n    }\n  }\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, inject, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {FileUploadModule, FileUploadValidators} from '@iplab/ngx-file-upload';\nimport {\n  NgbAccordionModule, NgbAccordionToggle,\n  NgbActiveModal\n} from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { forkJoin } from 'rxjs';\nimport { UtilityService } from 'src/app/shared/_services/utility.service';\nimport { CblImportResult } from 'src/app/_models/reading-list/cbl/cbl-import-result.enum';\nimport { CblImportSummary } from 'src/app/_models/reading-list/cbl/cbl-import-summary';\nimport { ReadingListService } from 'src/app/_services/reading-list.service';\nimport {StepTrackerComponent, TimelineStep} from '../../_components/step-tracker/step-tracker.component';\nimport {CommonModule} from \"@angular/common\";\nimport {SafeHtmlPipe} from \"../../../_pipes/safe-html.pipe\";\nimport {CblConflictReasonPipe} from \"../../../_pipes/cbl-conflict-reason.pipe\";\nimport {CblImportResultPipe} from \"../../../_pipes/cbl-import-result.pipe\";\nimport {translate, TranslocoDirective} from \"@ngneat/transloco\";\nimport {WikiLink} from \"../../../_models/wiki\";\n\ninterface FileStep {\n  fileName: string;\n  validateSummary: CblImportSummary | undefined;\n  dryRunSummary: CblImportSummary | undefined;\n  finalizeSummary: CblImportSummary | undefined;\n}\n\nenum Step {\n  Import = 0,\n  Validate = 1,\n  DryRun = 2,\n  Finalize = 3\n}\n\n@Component({\n  selector: 'app-import-cbl-modal',\n  standalone: true,\n  imports: [CommonModule,\n    FileUploadModule,\n    NgbAccordionModule,\n    SafeHtmlPipe,\n    CblConflictReasonPipe, ReactiveFormsModule, StepTrackerComponent, CblImportResultPipe, NgbAccordionToggle, TranslocoDirective],\n  templateUrl: './import-cbl-modal.component.html',\n  styleUrls: ['./import-cbl-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImportCblModalComponent {\n\n  protected readonly CblImportResult = CblImportResult;\n  protected readonly Step = Step;\n  protected readonly WikiLink = WikiLink;\n\n  @ViewChild('fileUpload') fileUpload!: ElementRef<HTMLInputElement>;\n\n\n  fileUploadControl = new FormControl<undefined | Array<File>>(undefined, [\n    FileUploadValidators.accept(['.cbl']),\n  ]);\n\n  uploadForm = new FormGroup({\n    files: this.fileUploadControl\n  });\n  cblSettingsForm = new FormGroup({\n    comicVineMatching: new FormControl(true, [])\n  });\n\n  isLoading: boolean = false;\n\n  steps: Array<TimelineStep> = [\n    {title: translate('import-cbl-modal.import-step'), index: Step.Import, active: true, icon: 'fa-solid fa-file-arrow-up'},\n    {title: translate('import-cbl-modal.validate-cbl-step'), index: Step.Validate, active: false, icon: 'fa-solid fa-spell-check'},\n    {title: translate('import-cbl-modal.dry-run-step'), index: Step.DryRun, active: false, icon: 'fa-solid fa-gears'},\n    {title: translate('import-cbl-modal.final-import-step'), index: Step.Finalize, active: false, icon: 'fa-solid fa-floppy-disk'},\n  ];\n  currentStepIndex = this.steps[0].index;\n\n  filesToProcess: Array<FileStep> = [];\n  failedFiles: Array<FileStep> = [];\n\n\n  get NextButtonLabel() {\n    switch(this.currentStepIndex) {\n      case Step.DryRun:\n        return 'import';\n      case Step.Finalize:\n        return 'restart'\n      default:\n        return 'next';\n    }\n  }\n\n  constructor(private ngModal: NgbActiveModal, private readingListService: ReadingListService,\n    public utilityService: UtilityService, private readonly cdRef: ChangeDetectorRef,\n    private toastr: ToastrService) {}\n\n  close() {\n    this.ngModal.close();\n  }\n\n  nextStep() {\n    if (this.currentStepIndex === Step.Import && !this.isFileSelected()) return;\n\n    this.isLoading = true;\n    switch (this.currentStepIndex) {\n      case Step.Import:\n        const files = this.uploadForm.get('files')?.value;\n        if (!files) {\n          this.toastr.error(translate('toasts.select-files-warning'));\n          return;\n        }\n        // Load each file into filesToProcess and group their data\n        const pages = [];\n        for (let i = 0; i < files.length; i++) {\n          const formData = new FormData();\n            formData.append('cbl', files[i]);\n            formData.append('dryRun', 'true');\n            formData.append('comicVineMatching', this.cblSettingsForm.get('comicVineMatching')?.value + '');\n            pages.push(this.readingListService.validateCbl(formData));\n        }\n        forkJoin(pages).subscribe(results => {\n          this.filesToProcess = [];\n          results.forEach(cblImport => {\n            this.filesToProcess.push({\n              fileName: cblImport.fileName,\n              validateSummary: cblImport,\n              dryRunSummary: undefined,\n              finalizeSummary: undefined\n            });\n          });\n\n          this.filesToProcess = this.filesToProcess.sort((a, b) => b.validateSummary!.success - a.validateSummary!.success);\n          this.cdRef.markForCheck();\n\n          this.currentStepIndex++;\n          this.isLoading = false;\n          this.cdRef.markForCheck();\n        });\n        break;\n      case Step.Validate:\n        this.failedFiles = this.filesToProcess.filter(item => item.validateSummary?.success === CblImportResult.Fail);\n        this.filesToProcess = this.filesToProcess.filter(item => item.validateSummary?.success != CblImportResult.Fail);\n        this.dryRun();\n        break;\n      case Step.DryRun:\n        this.failedFiles.push(...this.filesToProcess.filter(item => item.dryRunSummary?.success === CblImportResult.Fail));\n        this.filesToProcess = this.filesToProcess.filter(item => item.dryRunSummary?.success != CblImportResult.Fail);\n        this.import();\n        break;\n      case Step.Finalize:\n        // Clear the models and allow user to do another import\n        this.uploadForm.get('files')?.setValue(undefined);\n        this.currentStepIndex = Step.Import;\n        this.isLoading = false;\n        this.filesToProcess = [];\n        this.failedFiles = [];\n        this.cdRef.markForCheck();\n        break;\n    }\n  }\n\n  prevStep() {\n    if (this.currentStepIndex === Step.Import) return;\n    this.currentStepIndex--;\n  }\n\n  canMoveToNextStep() {\n    switch (this.currentStepIndex) {\n      case Step.Import:\n        return this.isFileSelected();\n      case Step.Validate:\n        return this.filesToProcess.filter(item => item.validateSummary?.success != CblImportResult.Fail).length > 0;\n      case Step.DryRun:\n        return this.filesToProcess.filter(item => item.dryRunSummary?.success != CblImportResult.Fail).length > 0;\n      case Step.Finalize:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  canMoveToPrevStep() {\n    switch (this.currentStepIndex) {\n      case Step.Import:\n      case Step.Finalize:\n        return false;\n      default:\n        return true;\n    }\n  }\n\n\n  isFileSelected() {\n    const files = this.uploadForm.get('files')?.value;\n    if (files) return files.length > 0;\n    return false;\n  }\n\n\n  dryRun() {\n    const filenamesAllowedToProcess = this.filesToProcess.map(p => p.fileName);\n    const files = (this.uploadForm.get('files')?.value || []).filter(f => filenamesAllowedToProcess.includes(f.name));\n\n    const pages = [];\n    for (let i = 0; i < files.length; i++) {\n      const formData = new FormData();\n      formData.append('cbl', files[i]);\n      formData.append('dryRun', 'true');\n      formData.append('comicVineMatching', this.cblSettingsForm.get('comicVineMatching')?.value + '');\n      pages.push(this.readingListService.importCbl(formData));\n    }\n    forkJoin(pages).subscribe(results => {\n        results.forEach(cblImport => {\n        const index = this.filesToProcess.findIndex(p => p.fileName === cblImport.fileName);\n        this.filesToProcess[index].dryRunSummary = cblImport;\n      });\n      this.filesToProcess = this.filesToProcess.sort((a, b) => b.dryRunSummary!.success - a.dryRunSummary!.success);\n\n      this.isLoading = false;\n      this.currentStepIndex++;\n      this.cdRef.markForCheck();\n    });\n  }\n\n  import() {\n    const filenamesAllowedToProcess = this.filesToProcess.map(p => p.fileName);\n    const files = (this.uploadForm.get('files')?.value || []).filter(f => filenamesAllowedToProcess.includes(f.name));\n\n    let pages = [];\n    for (let i = 0; i < files.length; i++) {\n      const formData = new FormData();\n      formData.append('cbl', files[i]);\n      formData.append('dryRun', 'false');\n      formData.append('comicVineMatching', this.cblSettingsForm.get('comicVineMatching')?.value + '');\n      pages.push(this.readingListService.importCbl(formData));\n    }\n    forkJoin(pages).subscribe(results => {\n      results.forEach(cblImport => {\n        const index = this.filesToProcess.findIndex(p => p.fileName === cblImport.fileName);\n        this.filesToProcess[index].finalizeSummary = cblImport;\n      });\n\n      this.isLoading = false;\n      this.currentStepIndex++;\n      this.toastr.success(translate('toasts.reading-list-imported'));\n      this.cdRef.markForCheck();\n    });\n  }\n}\n","<ng-container *transloco=\"let t; read: 'import-cbl-modal'\">\n\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">{{t('title')}}</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"close()\"></button>\n  </div>\n  <div class=\"modal-body scrollable-modal\">\n    <div class=\"row g-0\" style=\"min-width: 135px;\">\n      <app-step-tracker [steps]=\"steps\" [currentStep]=\"currentStepIndex\"></app-step-tracker>\n    </div>\n\n    <!-- This is going to need to have a fixed height with a scrollbar-->\n    <div>\n      <div class=\"row g-0\" *ngIf=\"currentStepIndex === Step.Import\">\n        <p>{{t('import-description')}}</p>\n        <form [formGroup]=\"uploadForm\" enctype=\"multipart/form-data\">\n          <file-upload formControlName=\"files\"></file-upload>\n        </form>\n      </div>\n\n      <ng-container *ngIf=\"currentStepIndex === Step.Validate\">\n        <p>{{t('validate-description')}}</p>\n        <div class=\"row g-0\">\n          <div ngbAccordion #accordion=\"ngbAccordion\">\n            @for(fileToProcess of filesToProcess; track fileToProcess.fileName) {\n                <div ngbAccordionItem *ngIf=\"fileToProcess.validateSummary as summary\">\n                  <h5 ngbAccordionHeader>\n                    <button ngbAccordionButton>\n                      <ng-container [ngTemplateOutlet]=\"heading\" [ngTemplateOutletContext]=\"{ summary: summary, filename: fileToProcess.fileName }\"></ng-container>\n                    </button>\n                  </h5>\n                  <div ngbAccordionCollapse>\n                    <div ngbAccordionBody>\n                      <ng-container [ngTemplateOutlet]=\"validationList\" [ngTemplateOutletContext]=\"{ summary: summary }\"></ng-container>\n                    </div>\n                  </div>\n                </div>\n            }\n          </div>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"currentStepIndex === Step.DryRun\">\n        <div class=\"row g-0\">\n          <p>{{t('dry-run-description')}}</p>\n\n          <div ngbAccordion #a=\"ngbAccordion\">\n            @for(fileToProcess of filesToProcess; track fileToProcess.fileName) {\n              <div ngbAccordionItem *ngIf=\"fileToProcess.dryRunSummary as summary\">\n                <h5 ngbAccordionHeader>\n                  <button ngbAccordionButton>\n                    <ng-container [ngTemplateOutlet]=\"heading\" [ngTemplateOutletContext]=\"{ summary: summary, filename: fileToProcess.fileName }\"></ng-container>\n                  </button>\n                </h5>\n                <div ngbAccordionCollapse>\n                  <div ngbAccordionBody>\n                    <ng-container [ngTemplateOutlet]=\"resultsList\" [ngTemplateOutletContext]=\"{ summary: summary }\"></ng-container>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"currentStepIndex === Step.Finalize\">\n        <div class=\"row g-0\">\n          <div ngbAccordion #a=\"ngbAccordion\">\n            @for(fileToProcess of filesToProcess; track fileToProcess.fileName) {\n              <div ngbAccordionItem *ngIf=\"fileToProcess.finalizeSummary as summary\">\n                <h5 ngbAccordionHeader>\n                  <button ngbAccordionButton>\n                    <ng-container [ngTemplateOutlet]=\"heading\" [ngTemplateOutletContext]=\"{ summary: summary, filename: fileToProcess.fileName }\"></ng-container>\n                  </button>\n                </h5>\n                <div ngbAccordionCollapse>\n                  <div ngbAccordionBody>\n                    <ng-container [ngTemplateOutlet]=\"resultsList\" [ngTemplateOutletContext]=\"{ summary: summary }\"></ng-container>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <ng-template #validationList let-summary=\"summary\">\n      @if (summary.results.length > 0) {\n        <div class=\"justify-content-center col\">\n          <div class=\"d-flex align-items-center\">\n            <div class=\"flex-shrink-0\">\n              <i class=\"fa-solid fa-triangle-exclamation\" style=\"font-size: 24px\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"flex-grow-1 ms-3\">\n              {{t('validate-warning')}}\n            </div>\n          </div>\n        </div>\n        <ol class=\"list-group list-group-numbered list-group-flush\" >\n          <li class=\"list-group-item no-hover\" *ngFor=\"let result of summary.results\"\n              [innerHTML]=\"result | cblConflictReason | safeHtml\">\n          </li>\n        </ol>\n      }\n      @else {\n        <div class=\"justify-content-center col\">\n          <div class=\"d-flex align-items-center\">\n            <div class=\"flex-shrink-0\">\n              <i class=\"fa-solid fa-circle-check\" style=\"font-size: 24px\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"flex-grow-1 ms-3\">\n              {{t('validate-no-issue-description')}}\n            </div>\n          </div>\n        </div>\n      }\n    </ng-template>\n\n    <ng-template #resultsList let-summary=\"summary\">\n      <ul class=\"list-group list-group-flush\">\n        @for(result of summary.results; track result.order) {\n          <li class=\"list-group-item no-hover\"\n              innerHTML=\"{{result.order + 1}}. {{result | cblConflictReason | safeHtml}}\"></li>\n        }\n      </ul>\n    </ng-template>\n\n    <ng-template #heading let-filename=\"filename\" let-summary=\"summary\">\n      @switch (summary.success) {\n        @case (CblImportResult.Success) {\n          <span class=\"badge heading-badge bg-primary me-1\">{{summary.success | cblImportResult}}</span>\n        }\n        @case (CblImportResult.Fail) {\n          <span class=\"badge heading-badge bg-danger me-1\">{{summary.success | cblImportResult}}</span>\n        }\n        @case (CblImportResult.Partial) {\n          <span class=\"badge heading-badge bg-warning me-1\">{{summary.success | cblImportResult}}</span>\n        }\n      }\n      <span>{{filename}}<span *ngIf=\"summary.cblName\">: ({{summary.cblName}})</span></span>\n    </ng-template>\n\n\n  </div>\n  <div class=\"modal-footer\">\n    <form [formGroup]=\"cblSettingsForm\" class=\"row align-items-center\">\n      <div class=\"col-auto\">\n        <div class=\"form-check form-switch\">\n          <input type=\"checkbox\" id=\"settings-comicvine-mode\" role=\"switch\" formControlName=\"comicVineMatching\" class=\"form-check-input\"\n                 aria-labelledby=\"auto-close-label\">\n          <label class=\"form-check-label\" for=\"settings-comicvine-mode\">{{t('comicvine-parsing-label')}}</label>\n        </div>\n      </div>\n    </form>\n    <!-- Spacer -->\n    <div class=\"col\" aria-hidden=\"true\"></div>\n    <div class=\"col-auto\">\n      <a class=\"btn btn-icon\" [href]=\"WikiLink.ReadingListCBL\" target=\"_blank\" rel=\"noopener noreferrer\">Help</a>\n    </div>\n    <div class=\"col-auto\">\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">{{t('close')}}</button>\n    </div>\n    <div class=\"col-auto\">\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"prevStep()\" [disabled]=\"!canMoveToPrevStep()\">{{t('prev')}}</button>\n    </div>\n    <div class=\"col-auto\">\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"nextStep()\" [disabled]=\"!canMoveToNextStep()\">{{t(NextButtonLabel)}}</button>\n    </div>\n  </div>\n\n\n\n</ng-container>\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, booleanAttribute, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform, _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  id = id.trim();\n  if (ids.some(existingId => existingId.trim() === id)) {\n    return;\n  }\n  ids.push(id);\n  el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  id = id.trim();\n  const filteredIds = ids.filter(val => val !== id);\n  if (filteredIds.length) {\n    el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n  // Get string array of all individual ids (whitespace delimited) in the attribute value\n  const attrValue = el.getAttribute(attr);\n  return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nlet AriaDescriber = /*#__PURE__*/(() => {\n  class AriaDescriber {\n    constructor(_document,\n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n      this._platform = _platform;\n      /** Map of all registered message elements that have been placed into the document. */\n      this._messageRegistry = new Map();\n      /** Container for all registered messages. */\n      this._messagesContainer = null;\n      /** Unique ID for the service. */\n      this._id = `${nextId++}`;\n      this._document = _document;\n      this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n      if (!this._canBeDescribed(hostElement, message)) {\n        return;\n      }\n      const key = getKey(message, role);\n      if (typeof message !== 'string') {\n        // We need to ensure that the element has an ID.\n        setMessageId(message, this._id);\n        this._messageRegistry.set(key, {\n          messageElement: message,\n          referenceCount: 0\n        });\n      } else if (!this._messageRegistry.has(key)) {\n        this._createMessageElement(message, role);\n      }\n      if (!this._isElementDescribedByMessage(hostElement, key)) {\n        this._addMessageReference(hostElement, key);\n      }\n    }\n    removeDescription(hostElement, message, role) {\n      if (!message || !this._isElementNode(hostElement)) {\n        return;\n      }\n      const key = getKey(message, role);\n      if (this._isElementDescribedByMessage(hostElement, key)) {\n        this._removeMessageReference(hostElement, key);\n      }\n      // If the message is a string, it means that it's one that we created for the\n      // consumer so we can remove it safely, otherwise we should leave it in place.\n      if (typeof message === 'string') {\n        const registeredMessage = this._messageRegistry.get(key);\n        if (registeredMessage && registeredMessage.referenceCount === 0) {\n          this._deleteMessageElement(key);\n        }\n      }\n      if (this._messagesContainer?.childNodes.length === 0) {\n        this._messagesContainer.remove();\n        this._messagesContainer = null;\n      }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n      const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n      for (let i = 0; i < describedElements.length; i++) {\n        this._removeCdkDescribedByReferenceIds(describedElements[i]);\n        describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n      }\n      this._messagesContainer?.remove();\n      this._messagesContainer = null;\n      this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n      const messageElement = this._document.createElement('div');\n      setMessageId(messageElement, this._id);\n      messageElement.textContent = message;\n      if (role) {\n        messageElement.setAttribute('role', role);\n      }\n      this._createMessagesContainer();\n      this._messagesContainer.appendChild(messageElement);\n      this._messageRegistry.set(getKey(message, role), {\n        messageElement,\n        referenceCount: 0\n      });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n      this._messageRegistry.get(key)?.messageElement?.remove();\n      this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n      if (this._messagesContainer) {\n        return;\n      }\n      const containerClassName = 'cdk-describedby-message-container';\n      const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n      for (let i = 0; i < serverContainers.length; i++) {\n        // When going from the server to the client, we may end up in a situation where there's\n        // already a container on the page, but we don't have a reference to it. Clear the\n        // old container so we don't get duplicates. Doing this, instead of emptying the previous\n        // container, should be slightly faster.\n        serverContainers[i].remove();\n      }\n      const messagesContainer = this._document.createElement('div');\n      // We add `visibility: hidden` in order to prevent text in this container from\n      // being searchable by the browser's Ctrl + F functionality.\n      // Screen-readers will still read the description for elements with aria-describedby even\n      // when the description element is not visible.\n      messagesContainer.style.visibility = 'hidden';\n      // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n      // the description element doesn't impact page layout.\n      messagesContainer.classList.add(containerClassName);\n      messagesContainer.classList.add('cdk-visually-hidden');\n      // @breaking-change 14.0.0 Remove null check for `_platform`.\n      if (this._platform && !this._platform.isBrowser) {\n        messagesContainer.setAttribute('platform', 'server');\n      }\n      this._document.body.appendChild(messagesContainer);\n      this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n      // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n      const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n      element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n      const registeredMessage = this._messageRegistry.get(key);\n      // Add the aria-describedby reference and set the\n      // describedby_host attribute to mark the element.\n      addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n      element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n      registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n      const registeredMessage = this._messageRegistry.get(key);\n      registeredMessage.referenceCount--;\n      removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n      element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n      const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n      const registeredMessage = this._messageRegistry.get(key);\n      const messageId = registeredMessage && registeredMessage.messageElement.id;\n      return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n      if (!this._isElementNode(element)) {\n        return false;\n      }\n      if (message && typeof message === 'object') {\n        // We'd have to make some assumptions about the description element's text, if the consumer\n        // passed in an element. Assume that if an element is passed in, the consumer has verified\n        // that it can be used as a description.\n        return true;\n      }\n      const trimmedMessage = message == null ? '' : `${message}`.trim();\n      const ariaLabel = element.getAttribute('aria-label');\n      // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n      // element, because screen readers will end up reading out the same text twice in a row.\n      return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n      return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static {\n      this.ɵfac = function AriaDescriber_Factory(t) {\n        return new (t || AriaDescriber)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AriaDescriber,\n        factory: AriaDescriber.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AriaDescriber;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n  return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n  if (!element.id) {\n    element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n  }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n  constructor(_items) {\n    this._items = _items;\n    this._activeItemIndex = -1;\n    this._activeItem = null;\n    this._wrap = false;\n    this._letterKeyStream = new Subject();\n    this._typeaheadSubscription = Subscription.EMPTY;\n    this._vertical = true;\n    this._allowedModifierKeys = [];\n    this._homeAndEnd = false;\n    this._pageUpAndDown = {\n      enabled: false,\n      delta: 10\n    };\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    this._skipPredicateFn = item => item.disabled;\n    // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n    this._pressedLetters = [];\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    this.tabOut = new Subject();\n    /** Stream that emits whenever the active item of the list manager changes. */\n    this.change = new Subject();\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      this._itemChangesSubscription = _items.changes.subscribe(newItems => {\n        if (this._activeItem) {\n          const itemArray = newItems.toArray();\n          const newIndex = itemArray.indexOf(this._activeItem);\n          if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n          }\n        }\n      });\n    }\n  }\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate) {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true) {\n    this._wrap = shouldWrap;\n    return this;\n  }\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled = true) {\n    this._vertical = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction) {\n    this._horizontal = direction;\n    return this;\n  }\n  /**\n   * Modifier keys which are allowed to be held down and whose default actions will be prevented\n   * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n   */\n  withAllowedModifierKeys(keys) {\n    this._allowedModifierKeys = keys;\n    return this;\n  }\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval = 200) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._items.length && this._items.some(item => typeof item.getLabel !== 'function')) {\n      throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n    }\n    this._typeaheadSubscription.unsubscribe();\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._typeaheadSubscription = this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join(''))).subscribe(inputString => {\n      const items = this._getItemsArray();\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < items.length + 1; i++) {\n        const index = (this._activeItemIndex + i) % items.length;\n        const item = items[index];\n        if (!this._skipPredicateFn(item) && item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n          this.setActiveItem(index);\n          break;\n        }\n      }\n      this._pressedLetters = [];\n    });\n    return this;\n  }\n  /** Cancels the current typeahead sequence. */\n  cancelTypeahead() {\n    this._pressedLetters = [];\n    return this;\n  }\n  /**\n   * Configures the key manager to activate the first and last items\n   * respectively when the Home or End key is pressed.\n   * @param enabled Whether pressing the Home or End key activates the first/last item.\n   */\n  withHomeAndEnd(enabled = true) {\n    this._homeAndEnd = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n   * respectively when the Page-Up or Page-Down key is pressed.\n   * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n   * @param delta Whether pressing the Home or End key activates the first/last item.\n   */\n  withPageUpDown(enabled = true, delta = 10) {\n    this._pageUpAndDown = {\n      enabled,\n      delta\n    };\n    return this;\n  }\n  setActiveItem(item) {\n    const previousActiveItem = this._activeItem;\n    this.updateActiveItem(item);\n    if (this._activeItem !== previousActiveItem) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event) {\n    const keyCode = event.keyCode;\n    const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n    const isModifierAllowed = modifiers.every(modifier => {\n      return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n    });\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n      case DOWN_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case UP_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case RIGHT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case LEFT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case HOME:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setFirstItemActive();\n          break;\n        } else {\n          return;\n        }\n      case END:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setLastItemActive();\n          break;\n        } else {\n          return;\n        }\n      case PAGE_UP:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n          this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n          break;\n        } else {\n          return;\n        }\n      case PAGE_DOWN:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n          const itemsLength = this._getItemsArray().length;\n          this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n          break;\n        } else {\n          return;\n        }\n      default:\n        if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n          // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n          // otherwise fall back to resolving alphanumeric characters via the keyCode.\n          if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n          } else if (keyCode >= A && keyCode <= Z || keyCode >= ZERO && keyCode <= NINE) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n          }\n        }\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n    this._pressedLetters = [];\n    event.preventDefault();\n  }\n  /** Index of the currently active item. */\n  get activeItemIndex() {\n    return this._activeItemIndex;\n  }\n  /** The active item. */\n  get activeItem() {\n    return this._activeItem;\n  }\n  /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n  isTyping() {\n    return this._pressedLetters.length > 0;\n  }\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive() {\n    this._setActiveItemByIndex(0, 1);\n  }\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive() {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive() {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive() {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);\n  }\n  updateActiveItem(item) {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n    const activeItem = itemArray[index];\n    // Explicitly check for `null` and `undefined` because other falsy values are valid.\n    this._activeItem = activeItem == null ? null : activeItem;\n    this._activeItemIndex = index;\n  }\n  /** Cleans up the key manager. */\n  destroy() {\n    this._typeaheadSubscription.unsubscribe();\n    this._itemChangesSubscription?.unsubscribe();\n    this._letterKeyStream.complete();\n    this.tabOut.complete();\n    this.change.complete();\n    this._pressedLetters = [];\n  }\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  _setActiveItemByDelta(delta) {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  _setActiveInWrapMode(delta) {\n    const items = this._getItemsArray();\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n      const item = items[index];\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  _setActiveInDefaultMode(delta) {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  _setActiveItemByIndex(index, fallbackDelta) {\n    const items = this._getItemsArray();\n    if (!items[index]) {\n      return;\n    }\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n      if (!items[index]) {\n        return;\n      }\n    }\n    this.setActiveItem(index);\n  }\n  /** Returns the items as an array. */\n  _getItemsArray() {\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n}\nclass ActiveDescendantKeyManager extends ListKeyManager {\n  setActiveItem(index) {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n}\nclass FocusKeyManager extends ListKeyManager {\n  constructor() {\n    super(...arguments);\n    this._origin = 'program';\n  }\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin) {\n    this._origin = origin;\n    return this;\n  }\n  setActiveItem(item) {\n    super.setActiveItem(item);\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n  constructor() {\n    /**\n     * Whether to count an element as focusable even if it is not currently visible.\n     */\n    this.ignoreVisibility = false;\n  }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nlet InteractivityChecker = /*#__PURE__*/(() => {\n  class InteractivityChecker {\n    constructor(_platform) {\n      this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n      // This does not capture some cases, such as a non-form control with a disabled attribute or\n      // a form control inside of a disabled form, but should capture the most common cases.\n      return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n      return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n      // Nothing is tabbable on the server 😎\n      if (!this._platform.isBrowser) {\n        return false;\n      }\n      const frameElement = getFrameElement(getWindow(element));\n      if (frameElement) {\n        // Frame elements inherit their tabindex onto all child elements.\n        if (getTabIndexValue(frameElement) === -1) {\n          return false;\n        }\n        // Browsers disable tabbing to an element inside of an invisible frame.\n        if (!this.isVisible(frameElement)) {\n          return false;\n        }\n      }\n      let nodeName = element.nodeName.toLowerCase();\n      let tabIndexValue = getTabIndexValue(element);\n      if (element.hasAttribute('contenteditable')) {\n        return tabIndexValue !== -1;\n      }\n      if (nodeName === 'iframe' || nodeName === 'object') {\n        // The frame or object's content may be tabbable depending on the content, but it's\n        // not possibly to reliably detect the content of the frames. We always consider such\n        // elements as non-tabbable.\n        return false;\n      }\n      // In iOS, the browser only considers some specific elements as tabbable.\n      if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n        return false;\n      }\n      if (nodeName === 'audio') {\n        // Audio elements without controls enabled are never tabbable, regardless\n        // of the tabindex attribute explicitly being set.\n        if (!element.hasAttribute('controls')) {\n          return false;\n        }\n        // Audio elements with controls are by default tabbable unless the\n        // tabindex attribute is set to `-1` explicitly.\n        return tabIndexValue !== -1;\n      }\n      if (nodeName === 'video') {\n        // For all video elements, if the tabindex attribute is set to `-1`, the video\n        // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n        // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n        // tabindex attribute is the source of truth here.\n        if (tabIndexValue === -1) {\n          return false;\n        }\n        // If the tabindex is explicitly set, and not `-1` (as per check before), the\n        // video element is always tabbable (regardless of whether it has controls or not).\n        if (tabIndexValue !== null) {\n          return true;\n        }\n        // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n        // has controls enabled. Firefox is special as videos are always tabbable regardless\n        // of whether there are controls or not.\n        return this._platform.FIREFOX || element.hasAttribute('controls');\n      }\n      return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n      // Perform checks in order of left to most expensive.\n      // Again, naive approach that does not capture many edge cases and browser quirks.\n      return isPotentiallyFocusable(element) && !this.isDisabled(element) && (config?.ignoreVisibility || this.isVisible(element));\n    }\n    static {\n      this.ɵfac = function InteractivityChecker_Factory(t) {\n        return new (t || InteractivityChecker)(i0.ɵɵinject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InteractivityChecker,\n        factory: InteractivityChecker.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return InteractivityChecker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n  try {\n    return window.frameElement;\n  } catch {\n    return null;\n  }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight || typeof element.getClientRects === 'function' && element.getClientRects().length);\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' || nodeName === 'select' || nodeName === 'button' || nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n  return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n  return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n  return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n  let tabIndex = element.getAttribute('tabindex');\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && element.type;\n  return inputType === 'text' || inputType === 'password' || nodeName === 'select' || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n  return isNativeFormElement(element) || isAnchorWithHref(element) || element.hasAttribute('contenteditable') || hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n  /** Whether the focus trap is active. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n    this._element = _element;\n    this._checker = _checker;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._hasAttached = false;\n    // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n    this.startAnchorListener = () => this.focusLastTabbableElement();\n    this.endAnchorListener = () => this.focusFirstTabbableElement();\n    this._enabled = true;\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    const startAnchor = this._startAnchor;\n    const endAnchor = this._endAnchor;\n    if (startAnchor) {\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\n      startAnchor.remove();\n    }\n    if (endAnchor) {\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\n      endAnchor.remove();\n    }\n    this._startAnchor = this._endAnchor = null;\n    this._hasAttached = false;\n  }\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfully. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors() {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor.addEventListener('focus', this.startAnchorListener);\n      }\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor.addEventListener('focus', this.endAnchorListener);\n      }\n    });\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n    return this._hasAttached;\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusInitialElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusFirstTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusLastTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n    });\n  }\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  _getRegionBoundary(bound) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      for (let i = 0; i < markers.length; i++) {\n        // @breaking-change 8.0.0\n        if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated ` + `attribute will be removed in 8.0.0.`, markers[i]);\n        } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` + `will be removed in 8.0.0.`, markers[i]);\n        }\n      }\n    }\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ? markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfully.\n   */\n  focusInitialElement(options) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` + `use 'cdkFocusInitial' instead. The deprecated attribute ` + `will be removed in 8.0.0`, redirectToElement);\n      }\n      // Warn the consumer if the element they've pointed to\n      // isn't focusable, when not in production mode.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._checker.isFocusable(redirectToElement)) {\n        console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n      }\n      if (!this._checker.isFocusable(redirectToElement)) {\n        const focusableChild = this._getFirstTabbableElement(redirectToElement);\n        focusableChild?.focus(options);\n        return !!focusableChild;\n      }\n      redirectToElement.focus(options);\n      return true;\n    }\n    return this.focusFirstTabbableElement(options);\n  }\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusFirstTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('start');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusLastTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('end');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Checks whether the focus trap has successfully been attached.\n   */\n  hasAttached() {\n    return this._hasAttached;\n  }\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  _getFirstTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    const children = root.children;\n    for (let i = 0; i < children.length; i++) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  _getLastTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    // Iterate in reverse DOM order.\n    const children = root.children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Creates an anchor element. */\n  _createAnchor() {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    anchor.setAttribute('aria-hidden', 'true');\n    return anchor;\n  }\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  _toggleAnchorTabIndex(isEnabled, anchor) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n  /**\n   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n   * @param enabled: Whether the anchors should trap Tab.\n   */\n  toggleAnchors(enabled) {\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(enabled, this._startAnchor);\n      this._toggleAnchorTabIndex(enabled, this._endAnchor);\n    }\n  }\n  /** Executes a function when the zone is stable. */\n  _executeOnStable(fn) {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n    }\n  }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nlet FocusTrapFactory = /*#__PURE__*/(() => {\n  class FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n      this._checker = _checker;\n      this._ngZone = _ngZone;\n      this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n      return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static {\n      this.ɵfac = function FocusTrapFactory_Factory(t) {\n        return new (t || FocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusTrapFactory,\n        factory: FocusTrapFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusTrapFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Directive for trapping focus within a region. */\nlet CdkTrapFocus = /*#__PURE__*/(() => {\n  class CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n      return this.focusTrap?.enabled || false;\n    }\n    set enabled(value) {\n      if (this.focusTrap) {\n        this.focusTrap.enabled = value;\n      }\n    }\n    constructor(_elementRef, _focusTrapFactory,\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n      this._elementRef = _elementRef;\n      this._focusTrapFactory = _focusTrapFactory;\n      /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n      this._previouslyFocusedElement = null;\n      const platform = inject(Platform);\n      if (platform.isBrowser) {\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n      }\n    }\n    ngOnDestroy() {\n      this.focusTrap?.destroy();\n      // If we stored a previously focused element when using autoCapture, return focus to that\n      // element now that the trapped region is being destroyed.\n      if (this._previouslyFocusedElement) {\n        this._previouslyFocusedElement.focus();\n        this._previouslyFocusedElement = null;\n      }\n    }\n    ngAfterContentInit() {\n      this.focusTrap?.attachAnchors();\n      if (this.autoCapture) {\n        this._captureFocus();\n      }\n    }\n    ngDoCheck() {\n      if (this.focusTrap && !this.focusTrap.hasAttached()) {\n        this.focusTrap.attachAnchors();\n      }\n    }\n    ngOnChanges(changes) {\n      const autoCaptureChange = changes['autoCapture'];\n      if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture && this.focusTrap?.hasAttached()) {\n        this._captureFocus();\n      }\n    }\n    _captureFocus() {\n      this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n      this.focusTrap?.focusInitialElementWhenReady();\n    }\n    static {\n      this.ɵfac = function CdkTrapFocus_Factory(t) {\n        return new (t || CdkTrapFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkTrapFocus,\n        selectors: [[\"\", \"cdkTrapFocus\", \"\"]],\n        inputs: {\n          enabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkTrapFocus\", \"enabled\", booleanAttribute],\n          autoCapture: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute]\n        },\n        exportAs: [\"cdkTrapFocus\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkTrapFocus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n  /** Whether the FocusTrap is enabled. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._enabled) {\n      this._focusTrapManager.register(this);\n    } else {\n      this._focusTrapManager.deregister(this);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n    super(_element, _checker, _ngZone, _document, config.defer);\n    this._focusTrapManager = _focusTrapManager;\n    this._inertStrategy = _inertStrategy;\n    this._focusTrapManager.register(this);\n  }\n  /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n  destroy() {\n    this._focusTrapManager.deregister(this);\n    super.destroy();\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _enable() {\n    this._inertStrategy.preventFocus(this);\n    this.toggleAnchors(true);\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _disable() {\n    this._inertStrategy.allowFocus(this);\n    this.toggleAnchors(false);\n  }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = /*#__PURE__*/new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n  constructor() {\n    /** Focus event handler. */\n    this._listener = null;\n  }\n  /** Adds a document event listener that keeps focus inside the FocusTrap. */\n  preventFocus(focusTrap) {\n    // Ensure there's only one listener per document\n    if (this._listener) {\n      focusTrap._document.removeEventListener('focus', this._listener, true);\n    }\n    this._listener = e => this._trapFocus(focusTrap, e);\n    focusTrap._ngZone.runOutsideAngular(() => {\n      focusTrap._document.addEventListener('focus', this._listener, true);\n    });\n  }\n  /** Removes the event listener added in preventFocus. */\n  allowFocus(focusTrap) {\n    if (!this._listener) {\n      return;\n    }\n    focusTrap._document.removeEventListener('focus', this._listener, true);\n    this._listener = null;\n  }\n  /**\n   * Refocuses the first element in the FocusTrap if the focus event target was outside\n   * the FocusTrap.\n   *\n   * This is an event listener callback. The event listener is added in runOutsideAngular,\n   * so all this code runs outside Angular as well.\n   */\n  _trapFocus(focusTrap, event) {\n    const target = event.target;\n    const focusTrapRoot = focusTrap._element;\n    // Don't refocus if target was in an overlay, because the overlay might be associated\n    // with an element inside the FocusTrap, ex. mat-select.\n    if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n      // Some legacy FocusTrap usages have logic that focuses some element on the page\n      // just before FocusTrap is destroyed. For backwards compatibility, wait\n      // to be sure FocusTrap is still enabled before refocusing.\n      setTimeout(() => {\n        // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n        if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n          focusTrap.focusFirstTabbableElement();\n        }\n      });\n    }\n  }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nlet FocusTrapManager = /*#__PURE__*/(() => {\n  class FocusTrapManager {\n    constructor() {\n      // A stack of the FocusTraps on the page. Only the FocusTrap at the\n      // top of the stack is active.\n      this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n      // Dedupe focusTraps that register multiple times.\n      this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n      let stack = this._focusTrapStack;\n      if (stack.length) {\n        stack[stack.length - 1]._disable();\n      }\n      stack.push(focusTrap);\n      focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n      focusTrap._disable();\n      const stack = this._focusTrapStack;\n      const i = stack.indexOf(focusTrap);\n      if (i !== -1) {\n        stack.splice(i, 1);\n        if (stack.length) {\n          stack[stack.length - 1]._enable();\n        }\n      }\n    }\n    static {\n      this.ɵfac = function FocusTrapManager_Factory(t) {\n        return new (t || FocusTrapManager)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusTrapManager,\n        factory: FocusTrapManager.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusTrapManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nlet ConfigurableFocusTrapFactory = /*#__PURE__*/(() => {\n  class ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n      this._checker = _checker;\n      this._ngZone = _ngZone;\n      this._focusTrapManager = _focusTrapManager;\n      this._document = _document;\n      // TODO split up the strategies into different modules, similar to DateAdapter.\n      this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = {\n      defer: false\n    }) {\n      let configObject;\n      if (typeof config === 'boolean') {\n        configObject = {\n          defer: config\n        };\n      } else {\n        configObject = config;\n      }\n      return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static {\n      this.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) {\n        return new (t || ConfigurableFocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(FocusTrapManager), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ConfigurableFocusTrapFactory,\n        factory: ConfigurableFocusTrapFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ConfigurableFocusTrapFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n  // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n  // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n  // `event.detail` is zero depending on the browser:\n  // - `event.buttons` works on Firefox, but fails on Chrome.\n  // - `detail` works on Chrome, but fails on Firefox.\n  return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n  const touch = event.touches && event.touches[0] || event.changedTouches && event.changedTouches[0];\n  // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n  // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n  // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n  // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n  return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) && (touch.radiusY == null || touch.radiusY === 1);\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = /*#__PURE__*/new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n  ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT]\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nlet InputModalityDetector = /*#__PURE__*/(() => {\n  class InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n      return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n      this._platform = _platform;\n      /**\n       * The most recently detected input modality event target. Is null if no input modality has been\n       * detected or if the associated event target is null for some unknown reason.\n       */\n      this._mostRecentTarget = null;\n      /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n      this._modality = new BehaviorSubject(null);\n      /**\n       * The timestamp of the last touch input modality. Used to determine whether mousedown events\n       * should be attributed to mouse or touch.\n       */\n      this._lastTouchMs = 0;\n      /**\n       * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n       * bound.\n       */\n      this._onKeydown = event => {\n        // If this is one of the keys we should ignore, then ignore it and don't update the input\n        // modality to keyboard.\n        if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n          return;\n        }\n        this._modality.next('keyboard');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      /**\n       * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n       * gets bound.\n       */\n      this._onMousedown = event => {\n        // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n        // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n        // after the previous touch event.\n        if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n          return;\n        }\n        // Fake mousedown events are fired by some screen readers when controls are activated by the\n        // screen reader. Attribute them to keyboard input modality.\n        this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      /**\n       * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n       * gets bound.\n       */\n      this._onTouchstart = event => {\n        // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n        // events are fired. Again, attribute to keyboard input modality.\n        if (isFakeTouchstartFromScreenReader(event)) {\n          this._modality.next('keyboard');\n          return;\n        }\n        // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n        // triggered via mouse vs touch.\n        this._lastTouchMs = Date.now();\n        this._modality.next('touch');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      this._options = {\n        ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n        ...options\n      };\n      // Skip the first emission as it's null.\n      this.modalityDetected = this._modality.pipe(skip(1));\n      this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n      // If we're not in a browser, this service should do nothing, as there's no relevant input\n      // modality to detect.\n      if (_platform.isBrowser) {\n        ngZone.runOutsideAngular(() => {\n          document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n          document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n          document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        });\n      }\n    }\n    ngOnDestroy() {\n      this._modality.complete();\n      if (this._platform.isBrowser) {\n        document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n        document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n        document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n      }\n    }\n    static {\n      this.ɵfac = function InputModalityDetector_Factory(t) {\n        return new (t || InputModalityDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(INPUT_MODALITY_DETECTOR_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InputModalityDetector,\n        factory: InputModalityDetector.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return InputModalityDetector;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = /*#__PURE__*/new InjectionToken('liveAnnouncerElement', {\n  providedIn: 'root',\n  factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n  return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\nlet uniqueIds = 0;\nlet LiveAnnouncer = /*#__PURE__*/(() => {\n  class LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n      this._ngZone = _ngZone;\n      this._defaultOptions = _defaultOptions;\n      // We inject the live element and document as `any` because the constructor signature cannot\n      // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n      // a class decorator causes TypeScript to preserve the constructor signature types.\n      this._document = _document;\n      this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n      const defaultOptions = this._defaultOptions;\n      let politeness;\n      let duration;\n      if (args.length === 1 && typeof args[0] === 'number') {\n        duration = args[0];\n      } else {\n        [politeness, duration] = args;\n      }\n      this.clear();\n      clearTimeout(this._previousTimeout);\n      if (!politeness) {\n        politeness = defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n      }\n      if (duration == null && defaultOptions) {\n        duration = defaultOptions.duration;\n      }\n      // TODO: ensure changing the politeness works on all environments we support.\n      this._liveElement.setAttribute('aria-live', politeness);\n      if (this._liveElement.id) {\n        this._exposeAnnouncerToModals(this._liveElement.id);\n      }\n      // This 100ms timeout is necessary for some browser + screen-reader combinations:\n      // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n      // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n      //   second time without clearing and then using a non-zero delay.\n      // (using JAWS 17 at time of this writing).\n      return this._ngZone.runOutsideAngular(() => {\n        if (!this._currentPromise) {\n          this._currentPromise = new Promise(resolve => this._currentResolve = resolve);\n        }\n        clearTimeout(this._previousTimeout);\n        this._previousTimeout = setTimeout(() => {\n          this._liveElement.textContent = message;\n          if (typeof duration === 'number') {\n            this._previousTimeout = setTimeout(() => this.clear(), duration);\n          }\n          this._currentResolve();\n          this._currentPromise = this._currentResolve = undefined;\n        }, 100);\n        return this._currentPromise;\n      });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n      if (this._liveElement) {\n        this._liveElement.textContent = '';\n      }\n    }\n    ngOnDestroy() {\n      clearTimeout(this._previousTimeout);\n      this._liveElement?.remove();\n      this._liveElement = null;\n      this._currentResolve?.();\n      this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n      const elementClass = 'cdk-live-announcer-element';\n      const previousElements = this._document.getElementsByClassName(elementClass);\n      const liveEl = this._document.createElement('div');\n      // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n      for (let i = 0; i < previousElements.length; i++) {\n        previousElements[i].remove();\n      }\n      liveEl.classList.add(elementClass);\n      liveEl.classList.add('cdk-visually-hidden');\n      liveEl.setAttribute('aria-atomic', 'true');\n      liveEl.setAttribute('aria-live', 'polite');\n      liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n      this._document.body.appendChild(liveEl);\n      return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n      // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n      // the `SnakBarContainer` and other usages.\n      //\n      // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n      // section of the DOM we need to look through. This should cover all the cases we support, but\n      // the selector can be expanded if it turns out to be too narrow.\n      const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n      for (let i = 0; i < modals.length; i++) {\n        const modal = modals[i];\n        const ariaOwns = modal.getAttribute('aria-owns');\n        if (!ariaOwns) {\n          modal.setAttribute('aria-owns', id);\n        } else if (ariaOwns.indexOf(id) === -1) {\n          modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function LiveAnnouncer_Factory(t) {\n        return new (t || LiveAnnouncer)(i0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: LiveAnnouncer,\n        factory: LiveAnnouncer.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LiveAnnouncer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nlet CdkAriaLive = /*#__PURE__*/(() => {\n  class CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n      return this._politeness;\n    }\n    set politeness(value) {\n      this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n      if (this._politeness === 'off') {\n        if (this._subscription) {\n          this._subscription.unsubscribe();\n          this._subscription = null;\n        }\n      } else if (!this._subscription) {\n        this._subscription = this._ngZone.runOutsideAngular(() => {\n          return this._contentObserver.observe(this._elementRef).subscribe(() => {\n            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n            const elementText = this._elementRef.nativeElement.textContent;\n            // The `MutationObserver` fires also for attribute\n            // changes which we don't want to announce.\n            if (elementText !== this._previousAnnouncedText) {\n              this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n              this._previousAnnouncedText = elementText;\n            }\n          });\n        });\n      }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n      this._elementRef = _elementRef;\n      this._liveAnnouncer = _liveAnnouncer;\n      this._contentObserver = _contentObserver;\n      this._ngZone = _ngZone;\n      this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n    }\n    static {\n      this.ɵfac = function CdkAriaLive_Factory(t) {\n        return new (t || CdkAriaLive)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(LiveAnnouncer), i0.ɵɵdirectiveInject(i1$1.ContentObserver), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkAriaLive,\n        selectors: [[\"\", \"cdkAriaLive\", \"\"]],\n        inputs: {\n          politeness: [i0.ɵɵInputFlags.None, \"cdkAriaLive\", \"politeness\"],\n          duration: [i0.ɵɵInputFlags.None, \"cdkAriaLiveDuration\", \"duration\"]\n        },\n        exportAs: [\"cdkAriaLive\"],\n        standalone: true\n      });\n    }\n  }\n  return CdkAriaLive;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Detection mode used for attributing the origin of a focus event. */\nvar FocusMonitorDetectionMode = /*#__PURE__*/function (FocusMonitorDetectionMode) {\n  /**\n   * Any mousedown, keydown, or touchstart event that happened in the previous\n   * tick or the current tick will be used to assign a focus event's origin (to\n   * either mouse, keyboard, or touch). This is the default option.\n   */\n  FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n  /**\n   * A focus event's origin is always attributed to the last corresponding\n   * mousedown, keydown, or touchstart event, no matter how long ago it occurred.\n   */\n  FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"EVENTUAL\"] = 1] = \"EVENTUAL\";\n  return FocusMonitorDetectionMode;\n}(FocusMonitorDetectionMode || {});\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nlet FocusMonitor = /*#__PURE__*/(() => {\n  class FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, /** @breaking-change 11.0.0 make document required */\n    document, options) {\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._inputModalityDetector = _inputModalityDetector;\n      /** The focus origin that the next focus event is a result of. */\n      this._origin = null;\n      /** Whether the window has just been focused. */\n      this._windowFocused = false;\n      /**\n       * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n       * focus events to touch interactions requires special logic.\n       */\n      this._originFromTouchInteraction = false;\n      /** Map of elements being monitored to their info. */\n      this._elementInfo = new Map();\n      /** The number of elements currently being monitored. */\n      this._monitoredElementCount = 0;\n      /**\n       * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n       * as well as the number of monitored elements that they contain. We have to treat focus/blur\n       * handlers differently from the rest of the events, because the browser won't emit events\n       * to the document when focus moves inside of a shadow root.\n       */\n      this._rootNodeFocusListenerCount = new Map();\n      /**\n       * Event listener for `focus` events on the window.\n       * Needs to be an arrow function in order to preserve the context when it gets bound.\n       */\n      this._windowFocusListener = () => {\n        // Make a note of when the window regains focus, so we can\n        // restore the origin info for the focused element.\n        this._windowFocused = true;\n        this._windowFocusTimeoutId = window.setTimeout(() => this._windowFocused = false);\n      };\n      /** Subject for stopping our InputModalityDetector subscription. */\n      this._stopInputModalityDetector = new Subject();\n      /**\n       * Event listener for `focus` and 'blur' events on the document.\n       * Needs to be an arrow function in order to preserve the context when it gets bound.\n       */\n      this._rootNodeFocusAndBlurListener = event => {\n        const target = _getEventTarget(event);\n        // We need to walk up the ancestor chain in order to support `checkChildren`.\n        for (let element = target; element; element = element.parentElement) {\n          if (event.type === 'focus') {\n            this._onFocus(event, element);\n          } else {\n            this._onBlur(event, element);\n          }\n        }\n      };\n      this._document = document;\n      this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n    }\n    monitor(element, checkChildren = false) {\n      const nativeElement = coerceElement(element);\n      // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n      if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n        // Note: we don't want the observable to emit at all so we don't pass any parameters.\n        return of();\n      }\n      // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n      // the shadow root, rather than the `document`, because the browser won't emit focus events\n      // to the `document`, if focus is moving within the same shadow root.\n      const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n      const cachedInfo = this._elementInfo.get(nativeElement);\n      // Check if we're already monitoring this element.\n      if (cachedInfo) {\n        if (checkChildren) {\n          // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n          // observers into ones that behave as if `checkChildren` was turned on. We need a more\n          // robust solution.\n          cachedInfo.checkChildren = true;\n        }\n        return cachedInfo.subject;\n      }\n      // Create monitored element info.\n      const info = {\n        checkChildren: checkChildren,\n        subject: new Subject(),\n        rootNode\n      };\n      this._elementInfo.set(nativeElement, info);\n      this._registerGlobalListeners(info);\n      return info.subject;\n    }\n    stopMonitoring(element) {\n      const nativeElement = coerceElement(element);\n      const elementInfo = this._elementInfo.get(nativeElement);\n      if (elementInfo) {\n        elementInfo.subject.complete();\n        this._setClasses(nativeElement);\n        this._elementInfo.delete(nativeElement);\n        this._removeGlobalListeners(elementInfo);\n      }\n    }\n    focusVia(element, origin, options) {\n      const nativeElement = coerceElement(element);\n      const focusedElement = this._getDocument().activeElement;\n      // If the element is focused already, calling `focus` again won't trigger the event listener\n      // which means that the focus classes won't be updated. If that's the case, update the classes\n      // directly without waiting for an event.\n      if (nativeElement === focusedElement) {\n        this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n      } else {\n        this._setOrigin(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n          nativeElement.focus(options);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n      return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      const doc = this._getDocument();\n      return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n      if (this._origin) {\n        // If the origin was realized via a touch interaction, we need to perform additional checks\n        // to determine whether the focus origin should be attributed to touch or program.\n        if (this._originFromTouchInteraction) {\n          return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n        } else {\n          return this._origin;\n        }\n      }\n      // If the window has just regained focus, we can restore the most recent origin from before the\n      // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n      // focus. This typically means one of two things happened:\n      //\n      // 1) The element was programmatically focused, or\n      // 2) The element was focused via screen reader navigation (which generally doesn't fire\n      //    events).\n      //\n      // Because we can't distinguish between these two cases, we default to setting `program`.\n      if (this._windowFocused && this._lastFocusOrigin) {\n        return this._lastFocusOrigin;\n      }\n      // If the interaction is coming from an input label, we consider it a mouse interactions.\n      // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n      // our detection, because all our assumptions are for `mousedown`. We need to handle this\n      // special case, because it's very common for checkboxes and radio buttons.\n      if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n        return 'mouse';\n      }\n      return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n      // Please note that this check is not perfect. Consider the following edge case:\n      //\n      // <div #parent tabindex=\"0\">\n      //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n      // </div>\n      //\n      // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n      // #child, #parent is programmatically focused. This code will attribute the focus to touch\n      // instead of program. This is a relatively minor edge-case that can be worked around by using\n      // focusVia(parent, 'program') to focus #parent.\n      return this._detectionMode === FocusMonitorDetectionMode.EVENTUAL || !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget);\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n      element.classList.toggle('cdk-focused', !!origin);\n      element.classList.toggle('cdk-touch-focused', origin === 'touch');\n      element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n      element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n      element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n      this._ngZone.runOutsideAngular(() => {\n        this._origin = origin;\n        this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n        // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n        // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n        // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n        // a touch event because when a touch event is fired, the associated focus event isn't yet in\n        // the event queue. Before doing so, clear any pending timeouts.\n        if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n          clearTimeout(this._originTimeoutId);\n          const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n          this._originTimeoutId = setTimeout(() => this._origin = null, ms);\n        }\n      });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n      // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n      // focus event affecting the monitored element. If we want to use the origin of the first event\n      // instead we should check for the cdk-focused class here and return if the element already has\n      // it. (This only matters for elements that have includesChildren = true).\n      // If we are not counting child-element-focus as focused, make sure that the event target is the\n      // monitored element itself.\n      const elementInfo = this._elementInfo.get(element);\n      const focusEventTarget = _getEventTarget(event);\n      if (!elementInfo || !elementInfo.checkChildren && element !== focusEventTarget) {\n        return;\n      }\n      this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n      // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n      // order to focus another child of the monitored element.\n      const elementInfo = this._elementInfo.get(element);\n      if (!elementInfo || elementInfo.checkChildren && event.relatedTarget instanceof Node && element.contains(event.relatedTarget)) {\n        return;\n      }\n      this._setClasses(element);\n      this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n      if (info.subject.observers.length) {\n        this._ngZone.run(() => info.subject.next(origin));\n      }\n    }\n    _registerGlobalListeners(elementInfo) {\n      if (!this._platform.isBrowser) {\n        return;\n      }\n      const rootNode = elementInfo.rootNode;\n      const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n      if (!rootNodeFocusListeners) {\n        this._ngZone.runOutsideAngular(() => {\n          rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n        });\n      }\n      this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n      // Register global listeners when first element is monitored.\n      if (++this._monitoredElementCount === 1) {\n        // Note: we listen to events in the capture phase so we\n        // can detect them even if the user stops propagation.\n        this._ngZone.runOutsideAngular(() => {\n          const window = this._getWindow();\n          window.addEventListener('focus', this._windowFocusListener);\n        });\n        // The InputModalityDetector is also just a collection of global listeners.\n        this._inputModalityDetector.modalityDetected.pipe(takeUntil(this._stopInputModalityDetector)).subscribe(modality => {\n          this._setOrigin(modality, true /* isFromInteraction */);\n        });\n      }\n    }\n    _removeGlobalListeners(elementInfo) {\n      const rootNode = elementInfo.rootNode;\n      if (this._rootNodeFocusListenerCount.has(rootNode)) {\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n        if (rootNodeFocusListeners > 1) {\n          this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n        } else {\n          rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          this._rootNodeFocusListenerCount.delete(rootNode);\n        }\n      }\n      // Unregister global listeners when last element is unmonitored.\n      if (! --this._monitoredElementCount) {\n        const window = this._getWindow();\n        window.removeEventListener('focus', this._windowFocusListener);\n        // Equivalently, stop our InputModalityDetector subscription.\n        this._stopInputModalityDetector.next();\n        // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n        clearTimeout(this._windowFocusTimeoutId);\n        clearTimeout(this._originTimeoutId);\n      }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n      this._setClasses(element, origin);\n      this._emitOrigin(elementInfo, origin);\n      this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n      const results = [];\n      this._elementInfo.forEach((info, currentElement) => {\n        if (currentElement === element || info.checkChildren && currentElement.contains(element)) {\n          results.push([currentElement, info]);\n        }\n      });\n      return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n      const {\n        _mostRecentTarget: mostRecentTarget,\n        mostRecentModality\n      } = this._inputModalityDetector;\n      // If the last interaction used the mouse on an element contained by one of the labels\n      // of an `input`/`textarea` that is currently focused, it is very likely that the\n      // user redirected focus using the label.\n      if (mostRecentModality !== 'mouse' || !mostRecentTarget || mostRecentTarget === focusEventTarget || focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA' || focusEventTarget.disabled) {\n        return false;\n      }\n      const labels = focusEventTarget.labels;\n      if (labels) {\n        for (let i = 0; i < labels.length; i++) {\n          if (labels[i].contains(mostRecentTarget)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    static {\n      this.ɵfac = function FocusMonitor_Factory(t) {\n        return new (t || FocusMonitor)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(InputModalityDetector), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusMonitor,\n        factory: FocusMonitor.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusMonitor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nlet CdkMonitorFocus = /*#__PURE__*/(() => {\n  class CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._focusOrigin = null;\n      this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n      return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n      const element = this._elementRef.nativeElement;\n      this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus')).subscribe(origin => {\n        this._focusOrigin = origin;\n        this.cdkFocusChange.emit(origin);\n      });\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      if (this._monitorSubscription) {\n        this._monitorSubscription.unsubscribe();\n      }\n    }\n    static {\n      this.ɵfac = function CdkMonitorFocus_Factory(t) {\n        return new (t || CdkMonitorFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusMonitor));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkMonitorFocus,\n        selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]],\n        outputs: {\n          cdkFocusChange: \"cdkFocusChange\"\n        },\n        exportAs: [\"cdkMonitorFocus\"],\n        standalone: true\n      });\n    }\n  }\n  return CdkMonitorFocus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Set of possible high-contrast mode backgrounds. */\nvar HighContrastMode = /*#__PURE__*/function (HighContrastMode) {\n  HighContrastMode[HighContrastMode[\"NONE\"] = 0] = \"NONE\";\n  HighContrastMode[HighContrastMode[\"BLACK_ON_WHITE\"] = 1] = \"BLACK_ON_WHITE\";\n  HighContrastMode[HighContrastMode[\"WHITE_ON_BLACK\"] = 2] = \"WHITE_ON_BLACK\";\n  return HighContrastMode;\n}(HighContrastMode || {});\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nlet HighContrastModeDetector = /*#__PURE__*/(() => {\n  class HighContrastModeDetector {\n    constructor(_platform, document) {\n      this._platform = _platform;\n      this._document = document;\n      this._breakpointSubscription = inject(BreakpointObserver).observe('(forced-colors: active)').subscribe(() => {\n        if (this._hasCheckedHighContrastMode) {\n          this._hasCheckedHighContrastMode = false;\n          this._applyBodyHighContrastModeCssClasses();\n        }\n      });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n      if (!this._platform.isBrowser) {\n        return HighContrastMode.NONE;\n      }\n      // Create a test element with an arbitrary background-color that is neither black nor\n      // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n      // appending the test element to the DOM does not affect layout by absolutely positioning it\n      const testElement = this._document.createElement('div');\n      testElement.style.backgroundColor = 'rgb(1,2,3)';\n      testElement.style.position = 'absolute';\n      this._document.body.appendChild(testElement);\n      // Get the computed style for the background color, collapsing spaces to normalize between\n      // browsers. Once we get this color, we no longer need the test element. Access the `window`\n      // via the document so we can fake it in tests. Note that we have extra null checks, because\n      // this logic will likely run during app bootstrap and throwing can break the entire app.\n      const documentWindow = this._document.defaultView || window;\n      const computedStyle = documentWindow && documentWindow.getComputedStyle ? documentWindow.getComputedStyle(testElement) : null;\n      const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n      testElement.remove();\n      switch (computedColor) {\n        // Pre Windows 11 dark theme.\n        case 'rgb(0,0,0)':\n        // Windows 11 dark themes.\n        case 'rgb(45,50,54)':\n        case 'rgb(32,32,32)':\n          return HighContrastMode.WHITE_ON_BLACK;\n        // Pre Windows 11 light theme.\n        case 'rgb(255,255,255)':\n        // Windows 11 light theme.\n        case 'rgb(255,250,239)':\n          return HighContrastMode.BLACK_ON_WHITE;\n      }\n      return HighContrastMode.NONE;\n    }\n    ngOnDestroy() {\n      this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n      if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n        const bodyClasses = this._document.body.classList;\n        bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n        this._hasCheckedHighContrastMode = true;\n        const mode = this.getHighContrastMode();\n        if (mode === HighContrastMode.BLACK_ON_WHITE) {\n          bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n        } else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n          bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function HighContrastModeDetector_Factory(t) {\n        return new (t || HighContrastModeDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HighContrastModeDetector,\n        factory: HighContrastModeDetector.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HighContrastModeDetector;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet A11yModule = /*#__PURE__*/(() => {\n  class A11yModule {\n    constructor(highContrastModeDetector) {\n      highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static {\n      this.ɵfac = function A11yModule_Factory(t) {\n        return new (t || A11yModule)(i0.ɵɵinject(HighContrastModeDetector));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: A11yModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ObserversModule]\n      });\n    }\n  }\n  return A11yModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusMonitorDetectionMode, FocusTrap, FocusTrapFactory, HighContrastMode, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, booleanAttribute, Directive, Optional, SkipSelf, Input, EventEmitter, Self, Output, inject, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      if (value) {\n        dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n      } else {\n        dest.removeProperty(key);\n      }\n    }\n  }\n  return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n  const userSelect = enable ? '' : 'none';\n  extendStyles(element.style, {\n    'touch-action': enable ? '' : 'none',\n    '-webkit-user-drag': enable ? '' : 'none',\n    '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n    'user-select': userSelect,\n    '-ms-user-select': userSelect,\n    '-webkit-user-select': userSelect,\n    '-moz-user-select': userSelect\n  });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n  extendStyles(element.style, {\n    position: enable ? '' : 'fixed',\n    top: enable ? '' : '0',\n    opacity: enable ? '' : '0',\n    left: enable ? '' : '-999em'\n  }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n  return initialTransform && initialTransform != 'none' ? transform + ' ' + initialTransform : transform;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n  // Some browsers will return it in seconds, whereas others will return milliseconds.\n  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n  return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n  const computedStyle = getComputedStyle(element);\n  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n  // If there's no transition for `all` or `transform`, we shouldn't do anything.\n  if (!property) {\n    return 0;\n  }\n  // Get the index of the property that we're interested in and match\n  // it up to the same index in `transition-delay` and `transition-duration`.\n  const propertyIndex = transitionedProperties.indexOf(property);\n  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) + parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n  const value = computedStyle.getPropertyValue(name);\n  return value.split(',').map(part => part.trim());\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n  const rect = element.getBoundingClientRect();\n  // We need to clone the `clientRect` here, because all the values on it are readonly\n  // and we need to be able to update them. Also we can't use a spread here, because\n  // the values on a `DOMRect` aren't own properties. See:\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = clientRect;\n  return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n  domRect.top += top;\n  domRect.bottom = domRect.top + domRect.height;\n  domRect.left += left;\n  domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height\n  } = rect;\n  const xThreshold = width * threshold;\n  const yThreshold = height * threshold;\n  return pointerY > top - yThreshold && pointerY < bottom + yThreshold && pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n  constructor(_document) {\n    this._document = _document;\n    /** Cached positions of the scrollable parent elements. */\n    this.positions = new Map();\n  }\n  /** Clears the cached positions. */\n  clear() {\n    this.positions.clear();\n  }\n  /** Caches the positions. Should be called at the beginning of a drag sequence. */\n  cache(elements) {\n    this.clear();\n    this.positions.set(this._document, {\n      scrollPosition: this.getViewportScrollPosition()\n    });\n    elements.forEach(element => {\n      this.positions.set(element, {\n        scrollPosition: {\n          top: element.scrollTop,\n          left: element.scrollLeft\n        },\n        clientRect: getMutableClientRect(element)\n      });\n    });\n  }\n  /** Handles scrolling while a drag is taking place. */\n  handleScroll(event) {\n    const target = _getEventTarget(event);\n    const cachedPosition = this.positions.get(target);\n    if (!cachedPosition) {\n      return null;\n    }\n    const scrollPosition = cachedPosition.scrollPosition;\n    let newTop;\n    let newLeft;\n    if (target === this._document) {\n      const viewportScrollPosition = this.getViewportScrollPosition();\n      newTop = viewportScrollPosition.top;\n      newLeft = viewportScrollPosition.left;\n    } else {\n      newTop = target.scrollTop;\n      newLeft = target.scrollLeft;\n    }\n    const topDifference = scrollPosition.top - newTop;\n    const leftDifference = scrollPosition.left - newLeft;\n    // Go through and update the cached positions of the scroll\n    // parents that are inside the element that was scrolled.\n    this.positions.forEach((position, node) => {\n      if (position.clientRect && target !== node && target.contains(node)) {\n        adjustDomRect(position.clientRect, topDifference, leftDifference);\n      }\n    });\n    scrollPosition.top = newTop;\n    scrollPosition.left = newLeft;\n    return {\n      top: topDifference,\n      left: leftDifference\n    };\n  }\n  /**\n   * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n   * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n   * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n   * if the element is offset by something like the `BlockScrollStrategy`.\n   */\n  getViewportScrollPosition() {\n    return {\n      top: window.scrollY,\n      left: window.scrollX\n    };\n  }\n}\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n  const clone = node.cloneNode(true);\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n  for (let i = 0; i < descendantsWithId.length; i++) {\n    descendantsWithId[i].removeAttribute('id');\n  }\n  if (nodeName === 'canvas') {\n    transferCanvasData(node, clone);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node, clone);\n  }\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n  const descendantElements = node.querySelectorAll(selector);\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll(selector);\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n  // Browsers throw an error when assigning the value of a file input programmatically.\n  if (clone.type !== 'file') {\n    clone.value = source.value;\n  }\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n  const context = clone.getContext('2d');\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: false\n});\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = /*#__PURE__*/new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this._toggleNativeDragInteractions();\n      this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n    }\n  }\n  constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n    this._config = _config;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._dragDropRegistry = _dragDropRegistry;\n    /**\n     * CSS `transform` applied to the element when it isn't being dragged. We need a\n     * passive transform in order for the dragged element to retain its new position\n     * after the user has stopped dragging and because we need to know the relative\n     * position in case they start dragging again. This corresponds to `element.style.transform`.\n     */\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n    /** CSS `transform` that is applied to the element while it's being dragged. */\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    /**\n     * Whether the dragging sequence has been started. Doesn't\n     * necessarily mean that the element has been moved.\n     */\n    this._hasStartedDragging = false;\n    /** Emits when the item is being moved. */\n    this._moveEvents = new Subject();\n    /** Subscription to pointer movement events. */\n    this._pointerMoveSubscription = Subscription.EMPTY;\n    /** Subscription to the event that is dispatched when the user lifts their pointer. */\n    this._pointerUpSubscription = Subscription.EMPTY;\n    /** Subscription to the viewport being scrolled. */\n    this._scrollSubscription = Subscription.EMPTY;\n    /** Subscription to the viewport being resized. */\n    this._resizeSubscription = Subscription.EMPTY;\n    /** Cached reference to the boundary element. */\n    this._boundaryElement = null;\n    /** Whether the native dragging interactions have been enabled on the root element. */\n    this._nativeInteractionsEnabled = true;\n    /** Elements that can be used to drag the draggable item. */\n    this._handles = [];\n    /** Registered handles that are currently disabled. */\n    this._disabledHandles = new Set();\n    /** Layout direction of the item. */\n    this._direction = 'ltr';\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     */\n    this.dragStartDelay = 0;\n    this._disabled = false;\n    /** Emits as the drag sequence is being prepared. */\n    this.beforeStarted = new Subject();\n    /** Emits when the user starts dragging the item. */\n    this.started = new Subject();\n    /** Emits when the user has released a drag item, before any animations have started. */\n    this.released = new Subject();\n    /** Emits when the user stops dragging an item in the container. */\n    this.ended = new Subject();\n    /** Emits when the user has moved the item into a new container. */\n    this.entered = new Subject();\n    /** Emits when the user removes the item its container by dragging it into another container. */\n    this.exited = new Subject();\n    /** Emits when the user drops the item inside a container. */\n    this.dropped = new Subject();\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     */\n    this.moved = this._moveEvents;\n    /** Handler for the `mousedown`/`touchstart` events. */\n    this._pointerDown = event => {\n      this.beforeStarted.next();\n      // Delegate the event based on whether it started from a handle or the element itself.\n      if (this._handles.length) {\n        const targetHandle = this._getTargetHandle(event);\n        if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n          this._initializeDragSequence(targetHandle, event);\n        }\n      } else if (!this.disabled) {\n        this._initializeDragSequence(this._rootElement, event);\n      }\n    };\n    /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n    this._pointerMove = event => {\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      if (!this._hasStartedDragging) {\n        const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n        const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n        const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n        // Only start dragging after the user has moved more than the minimum distance in either\n        // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n        // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n        // per pixel of movement (e.g. if the user moves their pointer quickly).\n        if (isOverThreshold) {\n          const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n          const container = this._dropContainer;\n          if (!isDelayElapsed) {\n            this._endDragSequence(event);\n            return;\n          }\n          // Prevent other drag sequences from starting while something in the container is still\n          // being dragged. This can happen while we're waiting for the drop animation to finish\n          // and can cause errors, because some elements might still be moving around.\n          if (!container || !container.isDragging() && !container.isReceiving()) {\n            // Prevent the default action as soon as the dragging sequence is considered as\n            // \"started\" since waiting for the next event can allow the device to begin scrolling.\n            event.preventDefault();\n            this._hasStartedDragging = true;\n            this._ngZone.run(() => this._startDragSequence(event));\n          }\n        }\n        return;\n      }\n      // We prevent the default action down here so that we know that dragging has started. This is\n      // important for touch devices where doing this too early can unnecessarily block scrolling,\n      // if there's a dragging delay.\n      event.preventDefault();\n      const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n      this._hasMoved = true;\n      this._lastKnownPointerPosition = pointerPosition;\n      this._updatePointerDirectionDelta(constrainedPointerPosition);\n      if (this._dropContainer) {\n        this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n      } else {\n        // If there's a position constraint function, we want the element's top/left to be at the\n        // specific position on the page. Use the initial position as a reference if that's the case.\n        const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n        const activeTransform = this._activeTransform;\n        activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n        activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n        this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n      }\n      // Since this event gets fired for every pixel while dragging, we only\n      // want to fire it if the consumer opted into it. Also we have to\n      // re-enter the zone because we run all of the events on the outside.\n      if (this._moveEvents.observers.length) {\n        this._ngZone.run(() => {\n          this._moveEvents.next({\n            source: this,\n            pointerPosition: constrainedPointerPosition,\n            event,\n            distance: this._getDragDistance(constrainedPointerPosition),\n            delta: this._pointerDirectionDelta\n          });\n        });\n      }\n    };\n    /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n    this._pointerUp = event => {\n      this._endDragSequence(event);\n    };\n    /** Handles a native `dragstart` event. */\n    this._nativeDragStart = event => {\n      if (this._handles.length) {\n        const targetHandle = this._getTargetHandle(event);\n        if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n          event.preventDefault();\n        }\n      } else if (!this.disabled) {\n        // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n        // but some cases like dragging of links can slip through (see #24403).\n        event.preventDefault();\n      }\n    };\n    this.withRootElement(element).withParent(_config.parentDragRef || null);\n    this._parentPositions = new ParentPositionTracker(_document);\n    _dragDropRegistry.registerDragItem(this);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._placeholder;\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._rootElement;\n  }\n  /**\n   * Gets the currently-visible element that represents the drag item.\n   * While dragging this is the placeholder, otherwise it's the root element.\n   */\n  getVisibleElement() {\n    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n  }\n  /** Registers the handles that can be used to drag the element. */\n  withHandles(handles) {\n    this._handles = handles.map(handle => coerceElement(handle));\n    this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n    this._toggleNativeDragInteractions();\n    // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n    // the set, rather than iterate over it and filter out the destroyed handles, because while\n    // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n    // use an array internally which may throw an error.\n    const disabledHandles = new Set();\n    this._disabledHandles.forEach(handle => {\n      if (this._handles.indexOf(handle) > -1) {\n        disabledHandles.add(handle);\n      }\n    });\n    this._disabledHandles = disabledHandles;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag preview.\n   * @param template Template that from which to stamp out the preview.\n   */\n  withPreviewTemplate(template) {\n    this._previewTemplate = template;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag placeholder.\n   * @param template Template that from which to stamp out the placeholder.\n   */\n  withPlaceholderTemplate(template) {\n    this._placeholderTemplate = template;\n    return this;\n  }\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement) {\n    const element = coerceElement(rootElement);\n    if (element !== this._rootElement) {\n      if (this._rootElement) {\n        this._removeRootElementListeners(this._rootElement);\n      }\n      this._ngZone.runOutsideAngular(() => {\n        element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n      });\n      this._initialTransform = undefined;\n      this._rootElement = element;\n    }\n    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n      this._ownerSVGElement = this._rootElement.ownerSVGElement;\n    }\n    return this;\n  }\n  /**\n   * Element to which the draggable's position will be constrained.\n   */\n  withBoundaryElement(boundaryElement) {\n    this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n    this._resizeSubscription.unsubscribe();\n    if (boundaryElement) {\n      this._resizeSubscription = this._viewportRuler.change(10).subscribe(() => this._containInsideBoundaryOnResize());\n    }\n    return this;\n  }\n  /** Sets the parent ref that the ref is nested in.  */\n  withParent(parent) {\n    this._parentDragRef = parent;\n    return this;\n  }\n  /** Removes the dragging functionality from the DOM element. */\n  dispose() {\n    this._removeRootElementListeners(this._rootElement);\n    // Do this check before removing from the registry since it'll\n    // stop being considered as dragged once it is removed.\n    if (this.isDragging()) {\n      // Since we move out the element to the end of the body while it's being\n      // dragged, we have to make sure that it's removed if it gets destroyed.\n      this._rootElement?.remove();\n    }\n    this._anchor?.remove();\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeSubscriptions();\n    this.beforeStarted.complete();\n    this.started.complete();\n    this.released.complete();\n    this.ended.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this._moveEvents.complete();\n    this._handles = [];\n    this._disabledHandles.clear();\n    this._dropContainer = undefined;\n    this._resizeSubscription.unsubscribe();\n    this._parentPositions.clear();\n    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate = this._previewTemplate = this._anchor = this._parentDragRef = null;\n  }\n  /** Checks whether the element is currently being dragged. */\n  isDragging() {\n    return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._rootElement.style.transform = this._initialTransform || '';\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\n   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n   * @param handle Handle element that should be disabled.\n   */\n  disableHandle(handle) {\n    if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n      this._disabledHandles.add(handle);\n      toggleNativeDragInteractions(handle, true);\n    }\n  }\n  /**\n   * Enables a handle, if it has been disabled.\n   * @param handle Handle element to be enabled.\n   */\n  enableHandle(handle) {\n    if (this._disabledHandles.has(handle)) {\n      this._disabledHandles.delete(handle);\n      toggleNativeDragInteractions(handle, this.disabled);\n    }\n  }\n  /** Sets the layout direction of the draggable item. */\n  withDirection(direction) {\n    this._direction = direction;\n    return this;\n  }\n  /** Sets the container that the item is part of. */\n  _withDropContainer(container) {\n    this._dropContainer = container;\n  }\n  /**\n   * Gets the current position in pixels the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n    return {\n      x: position.x,\n      y: position.y\n    };\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform.x = value.x;\n    this._passiveTransform.y = value.y;\n    if (!this._dropContainer) {\n      this._applyRootElementTransform(value.x, value.y);\n    }\n    return this;\n  }\n  /**\n   * Sets the container into which to insert the preview element.\n   * @param value Container into which to insert the preview.\n   */\n  withPreviewContainer(value) {\n    this._previewContainer = value;\n    return this;\n  }\n  /** Updates the item's sort order based on the last-known pointer position. */\n  _sortFromLastPointerPosition() {\n    const position = this._lastKnownPointerPosition;\n    if (position && this._dropContainer) {\n      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n    }\n  }\n  /** Unsubscribes from the global subscriptions. */\n  _removeSubscriptions() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n    this._scrollSubscription.unsubscribe();\n  }\n  /** Destroys the preview element and its ViewRef. */\n  _destroyPreview() {\n    this._preview?.remove();\n    this._previewRef?.destroy();\n    this._preview = this._previewRef = null;\n  }\n  /** Destroys the placeholder element and its ViewRef. */\n  _destroyPlaceholder() {\n    this._placeholder?.remove();\n    this._placeholderRef?.destroy();\n    this._placeholder = this._placeholderRef = null;\n  }\n  /**\n   * Clears subscriptions and stops the dragging sequence.\n   * @param event Browser event object that ended the sequence.\n   */\n  _endDragSequence(event) {\n    // Note that here we use `isDragging` from the service, rather than from `this`.\n    // The difference is that the one from the service reflects whether a dragging sequence\n    // has been initiated, whereas the one on `this` includes whether the user has passed\n    // the minimum dragging threshold.\n    if (!this._dragDropRegistry.isDragging(this)) {\n      return;\n    }\n    this._removeSubscriptions();\n    this._dragDropRegistry.stopDragging(this);\n    this._toggleNativeDragInteractions();\n    if (this._handles) {\n      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n    }\n    if (!this._hasStartedDragging) {\n      return;\n    }\n    this.released.next({\n      source: this,\n      event\n    });\n    if (this._dropContainer) {\n      // Stop scrolling immediately, instead of waiting for the animation to finish.\n      this._dropContainer._stopScrolling();\n      this._animatePreviewToPlaceholder().then(() => {\n        this._cleanupDragArtifacts(event);\n        this._cleanupCachedDimensions();\n        this._dragDropRegistry.stopDragging(this);\n      });\n    } else {\n      // Convert the active transform into a passive one. This means that next time\n      // the user starts dragging the item, its position will be calculated relatively\n      // to the new passive transform.\n      this._passiveTransform.x = this._activeTransform.x;\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      this._passiveTransform.y = this._activeTransform.y;\n      this._ngZone.run(() => {\n        this.ended.next({\n          source: this,\n          distance: this._getDragDistance(pointerPosition),\n          dropPoint: pointerPosition,\n          event\n        });\n      });\n      this._cleanupCachedDimensions();\n      this._dragDropRegistry.stopDragging(this);\n    }\n  }\n  /** Starts the dragging sequence. */\n  _startDragSequence(event) {\n    if (isTouchEvent(event)) {\n      this._lastTouchEventTime = Date.now();\n    }\n    this._toggleNativeDragInteractions();\n    const dropContainer = this._dropContainer;\n    if (dropContainer) {\n      const element = this._rootElement;\n      const parent = element.parentNode;\n      const placeholder = this._placeholder = this._createPlaceholderElement();\n      const anchor = this._anchor = this._anchor || this._document.createComment('');\n      // Needs to happen before the root element is moved.\n      const shadowRoot = this._getShadowRoot();\n      // Insert an anchor node so that we can restore the element's position in the DOM.\n      parent.insertBefore(anchor, element);\n      // There's no risk of transforms stacking when inside a drop container so\n      // we can keep the initial transform up to date any time dragging starts.\n      this._initialTransform = element.style.transform || '';\n      // Create the preview after the initial transform has\n      // been cached, because it can be affected by the transform.\n      this._preview = this._createPreviewElement();\n      // We move the element out at the end of the body and we make it hidden, because keeping it in\n      // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n      toggleVisibility(element, false, dragImportantProperties);\n      this._document.body.appendChild(parent.replaceChild(placeholder, element));\n      this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n      this.started.next({\n        source: this,\n        event\n      }); // Emit before notifying the container.\n      dropContainer.start();\n      this._initialContainer = dropContainer;\n      this._initialIndex = dropContainer.getItemIndex(this);\n    } else {\n      this.started.next({\n        source: this,\n        event\n      });\n      this._initialContainer = this._initialIndex = undefined;\n    }\n    // Important to run after we've called `start` on the parent container\n    // so that it has had time to resolve its scrollable parents.\n    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n  }\n  /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  _initializeDragSequence(referenceElement, event) {\n    // Stop propagation if the item is inside another\n    // draggable so we don't start multiple drag sequences.\n    if (this._parentDragRef) {\n      event.stopPropagation();\n    }\n    const isDragging = this.isDragging();\n    const isTouchSequence = isTouchEvent(event);\n    const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n    const rootElement = this._rootElement;\n    const target = _getEventTarget(event);\n    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime && this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n    const isFakeEvent = isTouchSequence ? isFakeTouchstartFromScreenReader(event) : isFakeMousedownFromScreenReader(event);\n    // If the event started from an element with the native HTML drag&drop, it'll interfere\n    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n    // events from firing on touch devices.\n    if (target && target.draggable && event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n      return;\n    }\n    // If we've got handles, we need to disable the tap highlight on the entire root element,\n    // otherwise iOS will still add it, even though all the drag interactions on the handle\n    // are disabled.\n    if (this._handles.length) {\n      const rootStyles = rootElement.style;\n      this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n      rootStyles.webkitTapHighlightColor = 'transparent';\n    }\n    this._hasStartedDragging = this._hasMoved = false;\n    // Avoid multiple subscriptions and memory leaks when multi touch\n    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n    this._removeSubscriptions();\n    this._initialDomRect = this._rootElement.getBoundingClientRect();\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n    if (this._boundaryElement) {\n      this._boundaryRect = getMutableClientRect(this._boundaryElement);\n    }\n    // If we have a custom preview we can't know ahead of time how large it'll be so we position\n    // it next to the cursor. The exception is when the consumer has opted into making the preview\n    // the same size as the root element, in which case we do know the size.\n    const previewTemplate = this._previewTemplate;\n    this._pickupPositionInElement = previewTemplate && previewTemplate.template && !previewTemplate.matchSize ? {\n      x: 0,\n      y: 0\n    } : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition = this._getPointerPositionOnPage(event);\n    this._pointerDirectionDelta = {\n      x: 0,\n      y: 0\n    };\n    this._pointerPositionAtLastDirectionChange = {\n      x: pointerPosition.x,\n      y: pointerPosition.y\n    };\n    this._dragStartTime = Date.now();\n    this._dragDropRegistry.startDragging(this, event);\n  }\n  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n  _cleanupDragArtifacts(event) {\n    // Restore the element's visibility and insert it at its old position in the DOM.\n    // It's important that we maintain the position, because moving the element around in the DOM\n    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n    // while moving the existing elements in all other cases.\n    toggleVisibility(this._rootElement, true, dragImportantProperties);\n    this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._initialDomRect = this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n    // Re-enter the NgZone since we bound `document` events on the outside.\n    this._ngZone.run(() => {\n      const container = this._dropContainer;\n      const currentIndex = container.getItemIndex(this);\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      const distance = this._getDragDistance(pointerPosition);\n      const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n      this.ended.next({\n        source: this,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      this.dropped.next({\n        item: this,\n        currentIndex,\n        previousIndex: this._initialIndex,\n        container: container,\n        previousContainer: this._initialContainer,\n        isPointerOverContainer,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n      this._dropContainer = this._initialContainer;\n    });\n  }\n  /**\n   * Updates the item's position in its drop container, or moves it\n   * into a new one, depending on its current drag position.\n   */\n  _updateActiveDropContainer({\n    x,\n    y\n  }, {\n    x: rawX,\n    y: rawY\n  }) {\n    // Drop container that draggable has been moved into.\n    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n    // If we couldn't find a new container to move the item into, and the item has left its\n    // initial container, check whether the it's over the initial container. This handles the\n    // case where two containers are connected one way and the user tries to undo dragging an\n    // item into a new container.\n    if (!newContainer && this._dropContainer !== this._initialContainer && this._initialContainer._isOverContainer(x, y)) {\n      newContainer = this._initialContainer;\n    }\n    if (newContainer && newContainer !== this._dropContainer) {\n      this._ngZone.run(() => {\n        // Notify the old container that the item has left.\n        this.exited.next({\n          item: this,\n          container: this._dropContainer\n        });\n        this._dropContainer.exit(this);\n        // Notify the new container that the item has entered.\n        this._dropContainer = newContainer;\n        this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n        // If we're re-entering the initial container and sorting is disabled,\n        // put item the into its starting index to begin with.\n        newContainer.sortingDisabled ? this._initialIndex : undefined);\n        this.entered.next({\n          item: this,\n          container: newContainer,\n          currentIndex: newContainer.getItemIndex(this)\n        });\n      });\n    }\n    // Dragging may have been interrupted as a result of the events above.\n    if (this.isDragging()) {\n      this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n      this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n      if (this.constrainPosition) {\n        this._applyPreviewTransform(x, y);\n      } else {\n        this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n      }\n    }\n  }\n  /**\n   * Creates the element that will be rendered next to the user's pointer\n   * and will be used as a preview of the element that is being dragged.\n   */\n  _createPreviewElement() {\n    const previewConfig = this._previewTemplate;\n    const previewClass = this.previewClass;\n    const previewTemplate = previewConfig ? previewConfig.template : null;\n    let preview;\n    if (previewTemplate && previewConfig) {\n      // Measure the element before we've inserted the preview\n      // since the insertion could throw off the measurement.\n      const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n      viewRef.detectChanges();\n      preview = getRootNode(viewRef, this._document);\n      this._previewRef = viewRef;\n      if (previewConfig.matchSize) {\n        matchElementSize(preview, rootRect);\n      } else {\n        preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n      }\n    } else {\n      preview = deepCloneNode(this._rootElement);\n      matchElementSize(preview, this._initialDomRect);\n      if (this._initialTransform) {\n        preview.style.transform = this._initialTransform;\n      }\n    }\n    extendStyles(preview.style, {\n      // It's important that we disable the pointer events on the preview, because\n      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n      'pointer-events': 'none',\n      // We have to reset the margin, because it can throw off positioning relative to the viewport.\n      'margin': '0',\n      'position': 'fixed',\n      'top': '0',\n      'left': '0',\n      'z-index': `${this._config.zIndex || 1000}`\n    }, dragImportantProperties);\n    toggleNativeDragInteractions(preview, false);\n    preview.classList.add('cdk-drag-preview');\n    preview.setAttribute('dir', this._direction);\n    if (previewClass) {\n      if (Array.isArray(previewClass)) {\n        previewClass.forEach(className => preview.classList.add(className));\n      } else {\n        preview.classList.add(previewClass);\n      }\n    }\n    return preview;\n  }\n  /**\n   * Animates the preview element from its current position to the location of the drop placeholder.\n   * @returns Promise that resolves when the animation completes.\n   */\n  _animatePreviewToPlaceholder() {\n    // If the user hasn't moved yet, the transitionend event won't fire.\n    if (!this._hasMoved) {\n      return Promise.resolve();\n    }\n    const placeholderRect = this._placeholder.getBoundingClientRect();\n    // Apply the class that adds a transition to the preview.\n    this._preview.classList.add('cdk-drag-animating');\n    // Move the preview to the placeholder position.\n    this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n    // apply its style, we take advantage of the available info to figure out whether we need to\n    // bind the event in the first place.\n    const duration = getTransformTransitionDurationInMs(this._preview);\n    if (duration === 0) {\n      return Promise.resolve();\n    }\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        const handler = event => {\n          if (!event || _getEventTarget(event) === this._preview && event.propertyName === 'transform') {\n            this._preview?.removeEventListener('transitionend', handler);\n            resolve();\n            clearTimeout(timeout);\n          }\n        };\n        // If a transition is short enough, the browser might not fire the `transitionend` event.\n        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n        // fire if the transition hasn't completed when it was supposed to.\n        const timeout = setTimeout(handler, duration * 1.5);\n        this._preview.addEventListener('transitionend', handler);\n      });\n    });\n  }\n  /** Creates an element that will be shown instead of the current element while dragging. */\n  _createPlaceholderElement() {\n    const placeholderConfig = this._placeholderTemplate;\n    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n    let placeholder;\n    if (placeholderTemplate) {\n      this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n      this._placeholderRef.detectChanges();\n      placeholder = getRootNode(this._placeholderRef, this._document);\n    } else {\n      placeholder = deepCloneNode(this._rootElement);\n    }\n    // Stop pointer events on the preview so the user can't\n    // interact with it while the preview is animating.\n    placeholder.style.pointerEvents = 'none';\n    placeholder.classList.add('cdk-drag-placeholder');\n    return placeholder;\n  }\n  /**\n   * Figures out the coordinates at which an element was picked up.\n   * @param referenceElement Element that initiated the dragging.\n   * @param event Event that initiated the dragging.\n   */\n  _getPointerPositionInElement(elementRect, referenceElement, event) {\n    const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n    const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n    const scrollPosition = this._getViewportScrollPosition();\n    const x = point.pageX - referenceRect.left - scrollPosition.left;\n    const y = point.pageY - referenceRect.top - scrollPosition.top;\n    return {\n      x: referenceRect.left - elementRect.left + x,\n      y: referenceRect.top - elementRect.top + y\n    };\n  }\n  /** Determines the point of the page that was touched by the user. */\n  _getPointerPositionOnPage(event) {\n    const scrollPosition = this._getViewportScrollPosition();\n    const point = isTouchEvent(event) ?\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n    // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n    // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n    // throwing an error. The value returned here will be incorrect, but since this only\n    // breaks inside a developer tool and the value is only used for secondary information,\n    // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n    event.touches[0] || event.changedTouches[0] || {\n      pageX: 0,\n      pageY: 0\n    } : event;\n    const x = point.pageX - scrollPosition.left;\n    const y = point.pageY - scrollPosition.top;\n    // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n    // coordinate system\n    if (this._ownerSVGElement) {\n      const svgMatrix = this._ownerSVGElement.getScreenCTM();\n      if (svgMatrix) {\n        const svgPoint = this._ownerSVGElement.createSVGPoint();\n        svgPoint.x = x;\n        svgPoint.y = y;\n        return svgPoint.matrixTransform(svgMatrix.inverse());\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Gets the pointer position on the page, accounting for any position constraints. */\n  _getConstrainedPointerPosition(point) {\n    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n    let {\n      x,\n      y\n    } = this.constrainPosition ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement) : point;\n    if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n      y = this._pickupPositionOnPage.y - (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n      x = this._pickupPositionOnPage.x - (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n    }\n    if (this._boundaryRect) {\n      // If not using a custom constrain we need to account for the pickup position in the element\n      // otherwise we do not need to do this, as it has already been accounted for\n      const {\n        x: pickupX,\n        y: pickupY\n      } = !this.constrainPosition ? this._pickupPositionInElement : {\n        x: 0,\n        y: 0\n      };\n      const boundaryRect = this._boundaryRect;\n      const {\n        width: previewWidth,\n        height: previewHeight\n      } = this._getPreviewRect();\n      const minY = boundaryRect.top + pickupY;\n      const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n      const minX = boundaryRect.left + pickupX;\n      const maxX = boundaryRect.right - (previewWidth - pickupX);\n      x = clamp$1(x, minX, maxX);\n      y = clamp$1(y, minY, maxY);\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the current drag delta, based on the user's current pointer position on the page. */\n  _updatePointerDirectionDelta(pointerPositionOnPage) {\n    const {\n      x,\n      y\n    } = pointerPositionOnPage;\n    const delta = this._pointerDirectionDelta;\n    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n    // Amount of pixels the user has dragged since the last time the direction changed.\n    const changeX = Math.abs(x - positionSinceLastChange.x);\n    const changeY = Math.abs(y - positionSinceLastChange.y);\n    // Because we handle pointer events on a per-pixel basis, we don't want the delta\n    // to change for every pixel, otherwise anything that depends on it can look erratic.\n    // To make the delta more consistent, we track how much the user has moved since the last\n    // delta change and we only update it after it has reached a certain threshold.\n    if (changeX > this._config.pointerDirectionChangeThreshold) {\n      delta.x = x > positionSinceLastChange.x ? 1 : -1;\n      positionSinceLastChange.x = x;\n    }\n    if (changeY > this._config.pointerDirectionChangeThreshold) {\n      delta.y = y > positionSinceLastChange.y ? 1 : -1;\n      positionSinceLastChange.y = y;\n    }\n    return delta;\n  }\n  /** Toggles the native drag interactions, based on how many handles are registered. */\n  _toggleNativeDragInteractions() {\n    if (!this._rootElement || !this._handles) {\n      return;\n    }\n    const shouldEnable = this._handles.length > 0 || !this.isDragging();\n    if (shouldEnable !== this._nativeInteractionsEnabled) {\n      this._nativeInteractionsEnabled = shouldEnable;\n      toggleNativeDragInteractions(this._rootElement, shouldEnable);\n    }\n  }\n  /** Removes the manually-added event listeners from the root element. */\n  _removeRootElementListeners(element) {\n    element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n    element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n  }\n  /**\n   * Applies a `transform` to the root element, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyRootElementTransform(x, y) {\n    const transform = getTransform(x, y);\n    const styles = this._rootElement.style;\n    // Cache the previous transform amount only after the first drag sequence, because\n    // we don't want our own transforms to stack on top of each other.\n    // Should be excluded none because none + translate3d(x, y, x) is invalid css\n    if (this._initialTransform == null) {\n      this._initialTransform = styles.transform && styles.transform != 'none' ? styles.transform : '';\n    }\n    // Preserve the previous `transform` value, if there was one. Note that we apply our own\n    // transform before the user's, because things like rotation can affect which direction\n    // the element will be translated towards.\n    styles.transform = combineTransforms(transform, this._initialTransform);\n  }\n  /**\n   * Applies a `transform` to the preview, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyPreviewTransform(x, y) {\n    // Only apply the initial transform if the preview is a clone of the original element, otherwise\n    // it could be completely different and the transform might not make sense anymore.\n    const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n    const transform = getTransform(x, y);\n    this._preview.style.transform = combineTransforms(transform, initialTransform);\n  }\n  /**\n   * Gets the distance that the user has dragged during the current drag sequence.\n   * @param currentPosition Current position of the user's pointer.\n   */\n  _getDragDistance(currentPosition) {\n    const pickupPosition = this._pickupPositionOnPage;\n    if (pickupPosition) {\n      return {\n        x: currentPosition.x - pickupPosition.x,\n        y: currentPosition.y - pickupPosition.y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n  _cleanupCachedDimensions() {\n    this._boundaryRect = this._previewRect = undefined;\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the element is still inside its boundary after the viewport has been resized.\n   * If not, the position is adjusted so that the element fits again.\n   */\n  _containInsideBoundaryOnResize() {\n    let {\n      x,\n      y\n    } = this._passiveTransform;\n    if (x === 0 && y === 0 || this.isDragging() || !this._boundaryElement) {\n      return;\n    }\n    // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n    const elementRect = this._rootElement.getBoundingClientRect();\n    const boundaryRect = this._boundaryElement.getBoundingClientRect();\n    // It's possible that the element got hidden away after dragging (e.g. by switching to a\n    // different tab). Don't do anything in this case so we don't clear the user's position.\n    if (boundaryRect.width === 0 && boundaryRect.height === 0 || elementRect.width === 0 && elementRect.height === 0) {\n      return;\n    }\n    const leftOverflow = boundaryRect.left - elementRect.left;\n    const rightOverflow = elementRect.right - boundaryRect.right;\n    const topOverflow = boundaryRect.top - elementRect.top;\n    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n    // If the element has become wider than the boundary, we can't\n    // do much to make it fit so we just anchor it to the left.\n    if (boundaryRect.width > elementRect.width) {\n      if (leftOverflow > 0) {\n        x += leftOverflow;\n      }\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      }\n    } else {\n      x = 0;\n    }\n    // If the element has become taller than the boundary, we can't\n    // do much to make it fit so we just anchor it to the top.\n    if (boundaryRect.height > elementRect.height) {\n      if (topOverflow > 0) {\n        y += topOverflow;\n      }\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      }\n    } else {\n      y = 0;\n    }\n    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n      this.setFreeDragPosition({\n        y,\n        x\n      });\n    }\n  }\n  /** Gets the drag start delay, based on the event type. */\n  _getDragStartDelay(event) {\n    const value = this.dragStartDelay;\n    if (typeof value === 'number') {\n      return value;\n    } else if (isTouchEvent(event)) {\n      return value.touch;\n    }\n    return value ? value.mouse : 0;\n  }\n  /** Updates the internal state of the draggable element when scrolling has occurred. */\n  _updateOnScroll(event) {\n    const scrollDifference = this._parentPositions.handleScroll(event);\n    if (scrollDifference) {\n      const target = _getEventTarget(event);\n      // DOMRect dimensions are based on the scroll position of the page and its parent\n      // node so we have to update the cached boundary DOMRect if the user has scrolled.\n      if (this._boundaryRect && target !== this._boundaryElement && target.contains(this._boundaryElement)) {\n        adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n      }\n      this._pickupPositionOnPage.x += scrollDifference.left;\n      this._pickupPositionOnPage.y += scrollDifference.top;\n      // If we're in free drag mode, we have to update the active transform, because\n      // it isn't relative to the viewport like the preview inside a drop list.\n      if (!this._dropContainer) {\n        this._activeTransform.x -= scrollDifference.left;\n        this._activeTransform.y -= scrollDifference.top;\n        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n      }\n    }\n  }\n  /** Gets the scroll position of the viewport. */\n  _getViewportScrollPosition() {\n    return this._parentPositions.positions.get(this._document)?.scrollPosition || this._parentPositions.getViewportScrollPosition();\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (this._cachedShadowRoot === undefined) {\n      this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Gets the element into which the drag preview should be inserted. */\n  _getPreviewInsertionPoint(initialParent, shadowRoot) {\n    const previewContainer = this._previewContainer || 'global';\n    if (previewContainer === 'parent') {\n      return initialParent;\n    }\n    if (previewContainer === 'global') {\n      const documentRef = this._document;\n      // We can't use the body if the user is in fullscreen mode,\n      // because the preview will render under the fullscreen element.\n      // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n      return shadowRoot || documentRef.fullscreenElement || documentRef.webkitFullscreenElement || documentRef.mozFullScreenElement || documentRef.msFullscreenElement || documentRef.body;\n    }\n    return coerceElement(previewContainer);\n  }\n  /** Lazily resolves and returns the dimensions of the preview. */\n  _getPreviewRect() {\n    // Cache the preview element rect if we haven't cached it already or if\n    // we cached it too early before the element dimensions were computed.\n    if (!this._previewRect || !this._previewRect.width && !this._previewRect.height) {\n      this._previewRect = this._preview ? this._preview.getBoundingClientRect() : this._initialDomRect;\n    }\n    return this._previewRect;\n  }\n  /** Gets a handle that is the target of an event. */\n  _getTargetHandle(event) {\n    return this._handles.find(handle => {\n      return event.target && (event.target === handle || handle.contains(event.target));\n    });\n  }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n  // Round the transforms since some browsers will\n  // blur the elements for sub-pixel transforms.\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n  const rootNodes = viewRef.rootNodes;\n  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n    return rootNodes[0];\n  }\n  const wrapper = _document.createElement('div');\n  rootNodes.forEach(node => wrapper.appendChild(node));\n  return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n  target.style.width = `${sourceRect.width}px`;\n  target.style.height = `${sourceRect.height}px`;\n  target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n  if (from === to) {\n    return;\n  }\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n  array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const from = clamp(currentIndex, currentArray.length - 1);\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n  }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray[currentIndex]);\n  }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n  return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n  constructor(_element, _dragDropRegistry) {\n    this._element = _element;\n    this._dragDropRegistry = _dragDropRegistry;\n    /** Cache of the dimensions of all the items inside the container. */\n    this._itemPositions = [];\n    /** Direction in which the list is oriented. */\n    this.orientation = 'vertical';\n    /**\n     * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n     * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n     * overlap with the swapped item after the swapping occurred.\n     */\n    this._previousSwap = {\n      drag: null,\n      delta: 0,\n      overlaps: false\n    };\n  }\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const siblings = this._itemPositions;\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n    if (newIndex === -1 && siblings.length > 0) {\n      return null;\n    }\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n    const siblingAtNewPosition = siblings[newIndex];\n    const currentPosition = siblings[currentIndex].clientRect;\n    const newPosition = siblingAtNewPosition.clientRect;\n    const delta = currentIndex > newIndex ? 1 : -1;\n    // How many pixels the item's placeholder should be offset.\n    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n    // How many pixels all the other items should be offset.\n    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n    // Save the previous order of the items before moving the item to its new index.\n    // We use this to check whether an item has been moved as a result of the sorting.\n    const oldOrder = siblings.slice();\n    // Shuffle the array in place.\n    moveItemInArray(siblings, currentIndex, newIndex);\n    siblings.forEach((sibling, index) => {\n      // Don't do anything if the position hasn't changed.\n      if (oldOrder[index] === sibling) {\n        return;\n      }\n      const isDraggedItem = sibling.drag === item;\n      const offset = isDraggedItem ? itemOffset : siblingOffset;\n      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() : sibling.drag.getRootElement();\n      // Update the offset to reflect the new position.\n      sibling.offset += offset;\n      // Since we're moving the items with a `transform`, we need to adjust their cached\n      // client rects to reflect their new position, as well as swap their positions in the cache.\n      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n      // elements may be mid-animation which will give us a wrong result.\n      if (isHorizontal) {\n        // Round the transforms since some browsers will\n        // blur the elements, for sub-pixel transforms.\n        elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, 0, offset);\n      } else {\n        elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, offset, 0);\n      }\n    });\n    // Note that it's important that we do this after the client rects have been adjusted.\n    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n    this._previousSwap.drag = siblingAtNewPosition.drag;\n    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    return {\n      previousIndex: currentIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    const newIndex = index == null || index < 0 ?\n    // We use the coordinates of where the item entered the drop\n    // zone to figure out at which index it should be inserted.\n    this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    const activeDraggables = this._activeDraggables;\n    const currentIndex = activeDraggables.indexOf(item);\n    const placeholder = item.getPlaceholderElement();\n    let newPositionReference = activeDraggables[newIndex];\n    // If the item at the new position is the same as the item that is being dragged,\n    // it means that we're trying to restore the item to its initial position. In this\n    // case we should use the next item from the list as the reference.\n    if (newPositionReference === item) {\n      newPositionReference = activeDraggables[newIndex + 1];\n    }\n    // If we didn't find a new position reference, it means that either the item didn't start off\n    // in this container, or that the item requested to be inserted at the end of the list.\n    if (!newPositionReference && (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) && this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n      newPositionReference = activeDraggables[0];\n    }\n    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n    // into another container and back again), we have to ensure that it isn't duplicated.\n    if (currentIndex > -1) {\n      activeDraggables.splice(currentIndex, 1);\n    }\n    // Don't use items that are being dragged as a reference, because\n    // their element has been moved down to the bottom of the body.\n    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n      const element = newPositionReference.getRootElement();\n      element.parentElement.insertBefore(placeholder, element);\n      activeDraggables.splice(newIndex, 0, item);\n    } else {\n      coerceElement(this._element).appendChild(placeholder);\n      activeDraggables.push(item);\n    }\n    // The transform needs to be cleared so it doesn't throw off the measurements.\n    placeholder.style.transform = '';\n    // Note that usually `start` is called together with `enter` when an item goes into a new\n    // container. This will cache item positions, but we need to refresh them since the amount\n    // of items has changed.\n    this._cacheItemPositions();\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeDraggables = items.slice();\n    this._cacheItemPositions();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    // TODO(crisbeto): may have to wait for the animations to finish.\n    this._activeDraggables.forEach(item => {\n      const rootElement = item.getRootElement();\n      if (rootElement) {\n        const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n        rootElement.style.transform = initialTransform || '';\n      }\n    });\n    this._itemPositions = [];\n    this._activeDraggables = [];\n    this._previousSwap.drag = null;\n    this._previousSwap.delta = 0;\n    this._previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeDraggables;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n    // The rest of the logic still stands no matter what orientation we're in, however\n    // we need to invert the array when determining the index.\n    const items = this.orientation === 'horizontal' && this.direction === 'rtl' ? this._itemPositions.slice().reverse() : this._itemPositions;\n    return items.findIndex(currentItem => currentItem.drag === item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll(topDifference, leftDifference) {\n    // Since we know the amount that the user has scrolled we can shift all of the\n    // client rectangles ourselves. This is cheaper than re-measuring everything and\n    // we can avoid inconsistent behavior where we might be measuring the element before\n    // its position has changed.\n    this._itemPositions.forEach(({\n      clientRect\n    }) => {\n      adjustDomRect(clientRect, topDifference, leftDifference);\n    });\n    // We need two loops for this, because we want all of the cached\n    // positions to be up-to-date before we re-sort the item.\n    this._itemPositions.forEach(({\n      drag\n    }) => {\n      if (this._dragDropRegistry.isDragging(drag)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        drag._sortFromLastPointerPosition();\n      }\n    });\n  }\n  /** Refreshes the position cache of the items and sibling containers. */\n  _cacheItemPositions() {\n    const isHorizontal = this.orientation === 'horizontal';\n    this._itemPositions = this._activeDraggables.map(drag => {\n      const elementToMeasure = drag.getVisibleElement();\n      return {\n        drag,\n        offset: 0,\n        initialTransform: elementToMeasure.style.transform || '',\n        clientRect: getMutableClientRect(elementToMeasure)\n      };\n    }).sort((a, b) => {\n      return isHorizontal ? a.clientRect.left - b.clientRect.left : a.clientRect.top - b.clientRect.top;\n    });\n  }\n  /**\n   * Gets the offset in pixels by which the item that is being dragged should be moved.\n   * @param currentPosition Current position of the item.\n   * @param newPosition Position of the item where the current item should be moved.\n   * @param delta Direction in which the user is moving.\n   */\n  _getItemOffsetPx(currentPosition, newPosition, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left : newPosition.top - currentPosition.top;\n    // Account for differences in the item width/height.\n    if (delta === -1) {\n      itemOffset += isHorizontal ? newPosition.width - currentPosition.width : newPosition.height - currentPosition.height;\n    }\n    return itemOffset;\n  }\n  /**\n   * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n   * @param currentIndex Index of the item currently being dragged.\n   * @param siblings All of the items in the list.\n   * @param delta Direction in which the user is moving.\n   */\n  _getSiblingOffsetPx(currentIndex, siblings, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentPosition = siblings[currentIndex].clientRect;\n    const immediateSibling = siblings[currentIndex + delta * -1];\n    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n    if (immediateSibling) {\n      const start = isHorizontal ? 'left' : 'top';\n      const end = isHorizontal ? 'right' : 'bottom';\n      // Get the spacing between the start of the current item and the end of the one immediately\n      // after it in the direction in which the user is dragging, or vice versa. We add it to the\n      // offset in order to push the element to where it will be when it's inline and is influenced\n      // by the `margin` of its siblings.\n      if (delta === -1) {\n        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n      } else {\n        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n      }\n    }\n    return siblingOffset;\n  }\n  /**\n   * Checks if pointer is entering in the first position\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _shouldEnterAsFirstChild(pointerX, pointerY) {\n    if (!this._activeDraggables.length) {\n      return false;\n    }\n    const itemPositions = this._itemPositions;\n    const isHorizontal = this.orientation === 'horizontal';\n    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n    // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n    const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n    if (reversed) {\n      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n    } else {\n      const firstItemRect = itemPositions[0].clientRect;\n      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const index = this._itemPositions.findIndex(({\n      drag,\n      clientRect\n    }) => {\n      // Skip the item itself.\n      if (drag === item) {\n        return false;\n      }\n      if (delta) {\n        const direction = isHorizontal ? delta.x : delta.y;\n        // If the user is still hovering over the same item as last time, their cursor hasn't left\n        // the item after we made the swap, and they didn't change the direction in which they're\n        // dragging, we don't consider it a direction swap.\n        if (drag === this._previousSwap.drag && this._previousSwap.overlaps && direction === this._previousSwap.delta) {\n          return false;\n        }\n      }\n      return isHorizontal ?\n      // Round these down since most browsers report client rects with\n      // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n      pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n    });\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection = /*#__PURE__*/function (AutoScrollVerticalDirection) {\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n  return AutoScrollVerticalDirection;\n}(AutoScrollVerticalDirection || {});\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection = /*#__PURE__*/function (AutoScrollHorizontalDirection) {\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n  return AutoScrollHorizontalDirection;\n}(AutoScrollHorizontalDirection || {});\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n  constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n    this._dragDropRegistry = _dragDropRegistry;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    /** Whether starting a dragging sequence from this container is disabled. */\n    this.disabled = false;\n    /** Whether sorting items within the list is disabled. */\n    this.sortingDisabled = false;\n    /**\n     * Whether auto-scrolling the view when the user\n     * moves their pointer close to the edges is disabled.\n     */\n    this.autoScrollDisabled = false;\n    /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n    this.autoScrollStep = 2;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     */\n    this.enterPredicate = () => true;\n    /** Function that is used to determine whether an item can be sorted into a particular index. */\n    this.sortPredicate = () => true;\n    /** Emits right before dragging has started. */\n    this.beforeStarted = new Subject();\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     */\n    this.entered = new Subject();\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     */\n    this.exited = new Subject();\n    /** Emits when the user drops an item inside the container. */\n    this.dropped = new Subject();\n    /** Emits as the user is swapping items while actively dragging. */\n    this.sorted = new Subject();\n    /** Emits when a dragging sequence is started in a list connected to the current one. */\n    this.receivingStarted = new Subject();\n    /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n    this.receivingStopped = new Subject();\n    /** Whether an item in the list is being dragged. */\n    this._isDragging = false;\n    /** Draggable items in the container. */\n    this._draggables = [];\n    /** Drop lists that are connected to the current one. */\n    this._siblings = [];\n    /** Connected siblings that currently have a dragged item. */\n    this._activeSiblings = new Set();\n    /** Subscription to the window being scrolled. */\n    this._viewportScrollSubscription = Subscription.EMPTY;\n    /** Vertical direction in which the list is currently scrolling. */\n    this._verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    /** Horizontal direction in which the list is currently scrolling. */\n    this._horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    /** Used to signal to the current auto-scroll sequence when to stop. */\n    this._stopScrollTimers = new Subject();\n    /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n    this._cachedShadowRoot = null;\n    /** Starts the interval that'll auto-scroll the element. */\n    this._startScrollInterval = () => {\n      this._stopScrolling();\n      interval(0, animationFrameScheduler).pipe(takeUntil(this._stopScrollTimers)).subscribe(() => {\n        const node = this._scrollNode;\n        const scrollStep = this.autoScrollStep;\n        if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n          node.scrollBy(0, -scrollStep);\n        } else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n          node.scrollBy(0, scrollStep);\n        }\n        if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n          node.scrollBy(-scrollStep, 0);\n        } else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n          node.scrollBy(scrollStep, 0);\n        }\n      });\n    };\n    this.element = coerceElement(element);\n    this._document = _document;\n    this.withScrollableParents([this.element]);\n    _dragDropRegistry.registerDropContainer(this);\n    this._parentPositions = new ParentPositionTracker(_document);\n    this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n    this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n  }\n  /** Removes the drop list functionality from the DOM element. */\n  dispose() {\n    this._stopScrolling();\n    this._stopScrollTimers.complete();\n    this._viewportScrollSubscription.unsubscribe();\n    this.beforeStarted.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this.sorted.complete();\n    this.receivingStarted.complete();\n    this.receivingStopped.complete();\n    this._activeSiblings.clear();\n    this._scrollNode = null;\n    this._parentPositions.clear();\n    this._dragDropRegistry.removeDropContainer(this);\n  }\n  /** Whether an item from this list is currently being dragged. */\n  isDragging() {\n    return this._isDragging;\n  }\n  /** Starts dragging an item. */\n  start() {\n    this._draggingStarted();\n    this._notifyReceivingSiblings();\n  }\n  /**\n   * Attempts to move an item into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    this._draggingStarted();\n    // If sorting is disabled, we want the item to return to its starting\n    // position if the user is returning it to its initial container.\n    if (index == null && this.sortingDisabled) {\n      index = this._draggables.indexOf(item);\n    }\n    this._sortStrategy.enter(item, pointerX, pointerY, index);\n    // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n    // can change when the sort strategy moves the item around inside `enter`.\n    this._cacheParentPositions();\n    // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n    this._notifyReceivingSiblings();\n    this.entered.next({\n      item,\n      container: this,\n      currentIndex: this.getItemIndex(item)\n    });\n  }\n  /**\n   * Removes an item from the container after it was dragged into another container by the user.\n   * @param item Item that was dragged out.\n   */\n  exit(item) {\n    this._reset();\n    this.exited.next({\n      item,\n      container: this\n    });\n  }\n  /**\n   * Drops an item into this container.\n   * @param item Item being dropped into the container.\n   * @param currentIndex Index at which the item should be inserted.\n   * @param previousIndex Index of the item when dragging started.\n   * @param previousContainer Container from which the item got dragged in.\n   * @param isPointerOverContainer Whether the user's pointer was over the\n   *    container when the item was dropped.\n   * @param distance Distance the user has dragged since the start of the dragging sequence.\n   * @param event Event that triggered the dropping sequence.\n   *\n   * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n   */\n  drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n    this._reset();\n    this.dropped.next({\n      item,\n      currentIndex,\n      previousIndex,\n      container: this,\n      previousContainer,\n      isPointerOverContainer,\n      distance,\n      dropPoint,\n      event\n    });\n  }\n  /**\n   * Sets the draggable items that are a part of this list.\n   * @param items Items that are a part of this list.\n   */\n  withItems(items) {\n    const previousItems = this._draggables;\n    this._draggables = items;\n    items.forEach(item => item._withDropContainer(this));\n    if (this.isDragging()) {\n      const draggedItems = previousItems.filter(item => item.isDragging());\n      // If all of the items being dragged were removed\n      // from the list, abort the current drag sequence.\n      if (draggedItems.every(item => items.indexOf(item) === -1)) {\n        this._reset();\n      } else {\n        this._sortStrategy.withItems(this._draggables);\n      }\n    }\n    return this;\n  }\n  /** Sets the layout direction of the drop list. */\n  withDirection(direction) {\n    this._sortStrategy.direction = direction;\n    return this;\n  }\n  /**\n   * Sets the containers that are connected to this one. When two or more containers are\n   * connected, the user will be allowed to transfer items between them.\n   * @param connectedTo Other containers that the current containers should be connected to.\n   */\n  connectedTo(connectedTo) {\n    this._siblings = connectedTo.slice();\n    return this;\n  }\n  /**\n   * Sets the orientation of the container.\n   * @param orientation New orientation for the container.\n   */\n  withOrientation(orientation) {\n    // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n    // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n    this._sortStrategy.orientation = orientation;\n    return this;\n  }\n  /**\n   * Sets which parent elements are can be scrolled while the user is dragging.\n   * @param elements Elements that can be scrolled.\n   */\n  withScrollableParents(elements) {\n    const element = coerceElement(this.element);\n    // We always allow the current element to be scrollable\n    // so we need to ensure that it's in the array.\n    this._scrollableElements = elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n    return this;\n  }\n  /** Gets the scrollable parents that are registered with this drop container. */\n  getScrollableParents() {\n    return this._scrollableElements;\n  }\n  /**\n   * Figures out the index of an item in the container.\n   * @param item Item whose index should be determined.\n   */\n  getItemIndex(item) {\n    return this._isDragging ? this._sortStrategy.getItemIndex(item) : this._draggables.indexOf(item);\n  }\n  /**\n   * Whether the list is able to receive the item that\n   * is currently being dragged inside a connected drop list.\n   */\n  isReceiving() {\n    return this._activeSiblings.size > 0;\n  }\n  /**\n   * Sorts an item inside the container based on its position.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  _sortItem(item, pointerX, pointerY, pointerDelta) {\n    // Don't sort the item if sorting is disabled or it's out of range.\n    if (this.sortingDisabled || !this._domRect || !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n      return;\n    }\n    const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n    if (result) {\n      this.sorted.next({\n        previousIndex: result.previousIndex,\n        currentIndex: result.currentIndex,\n        container: this,\n        item\n      });\n    }\n  }\n  /**\n   * Checks whether the user's pointer is close to the edges of either the\n   * viewport or the drop list and starts the auto-scroll sequence.\n   * @param pointerX User's pointer position along the x axis.\n   * @param pointerY User's pointer position along the y axis.\n   */\n  _startScrollingIfNecessary(pointerX, pointerY) {\n    if (this.autoScrollDisabled) {\n      return;\n    }\n    let scrollNode;\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Check whether we should start scrolling any of the parent containers.\n    this._parentPositions.positions.forEach((position, element) => {\n      // We have special handling for the `document` below. Also this would be\n      // nicer with a  for...of loop, but it requires changing a compiler flag.\n      if (element === this._document || !position.clientRect || scrollNode) {\n        return;\n      }\n      if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._sortStrategy.direction, pointerX, pointerY);\n        if (verticalScrollDirection || horizontalScrollDirection) {\n          scrollNode = element;\n        }\n      }\n    });\n    // Otherwise check if we can start scrolling the viewport.\n    if (!verticalScrollDirection && !horizontalScrollDirection) {\n      const {\n        width,\n        height\n      } = this._viewportRuler.getViewportSize();\n      const domRect = {\n        width,\n        height,\n        top: 0,\n        right: width,\n        bottom: height,\n        left: 0\n      };\n      verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n      horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n      scrollNode = window;\n    }\n    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection || horizontalScrollDirection !== this._horizontalScrollDirection || scrollNode !== this._scrollNode)) {\n      this._verticalScrollDirection = verticalScrollDirection;\n      this._horizontalScrollDirection = horizontalScrollDirection;\n      this._scrollNode = scrollNode;\n      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n        this._ngZone.runOutsideAngular(this._startScrollInterval);\n      } else {\n        this._stopScrolling();\n      }\n    }\n  }\n  /** Stops any currently-running auto-scroll sequences. */\n  _stopScrolling() {\n    this._stopScrollTimers.next();\n  }\n  /** Starts the dragging sequence within the list. */\n  _draggingStarted() {\n    const styles = coerceElement(this.element).style;\n    this.beforeStarted.next();\n    this._isDragging = true;\n    // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n    // scrolling. The browser seems to round the value based on the snapping points which means\n    // that we can't increment/decrement the scroll position.\n    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n    styles.scrollSnapType = styles.msScrollSnapType = 'none';\n    this._sortStrategy.start(this._draggables);\n    this._cacheParentPositions();\n    this._viewportScrollSubscription.unsubscribe();\n    this._listenToScrollEvents();\n  }\n  /** Caches the positions of the configured scrollable parents. */\n  _cacheParentPositions() {\n    const element = coerceElement(this.element);\n    this._parentPositions.cache(this._scrollableElements);\n    // The list element is always in the `scrollableElements`\n    // so we can take advantage of the cached `DOMRect`.\n    this._domRect = this._parentPositions.positions.get(element).clientRect;\n  }\n  /** Resets the container to its initial state. */\n  _reset() {\n    this._isDragging = false;\n    const styles = coerceElement(this.element).style;\n    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n    this._siblings.forEach(sibling => sibling._stopReceiving(this));\n    this._sortStrategy.reset();\n    this._stopScrolling();\n    this._viewportScrollSubscription.unsubscribe();\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the user's pointer is positioned over the container.\n   * @param x Pointer position along the X axis.\n   * @param y Pointer position along the Y axis.\n   */\n  _isOverContainer(x, y) {\n    return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n  }\n  /**\n   * Figures out whether an item should be moved into a sibling\n   * drop container, based on its current position.\n   * @param item Drag item that is being moved.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _getSiblingContainerFromPosition(item, x, y) {\n    return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n  }\n  /**\n   * Checks whether the drop list can receive the passed-in item.\n   * @param item Item that is being dragged into the list.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _canReceive(item, x, y) {\n    if (!this._domRect || !isInsideClientRect(this._domRect, x, y) || !this.enterPredicate(item, this)) {\n      return false;\n    }\n    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n    // If there's no element at the pointer position, then\n    // the client rect is probably scrolled out of the view.\n    if (!elementFromPoint) {\n      return false;\n    }\n    const nativeElement = coerceElement(this.element);\n    // The `DOMRect`, that we're using to find the container over which the user is\n    // hovering, doesn't give us any information on whether the element has been scrolled\n    // out of the view or whether it's overlapping with other containers. This means that\n    // we could end up transferring the item into a container that's invisible or is positioned\n    // below another one. We use the result from `elementFromPoint` to get the top-most element\n    // at the pointer position and to find whether it's one of the intersecting drop containers.\n    return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n  }\n  /**\n   * Called by one of the connected drop lists when a dragging sequence has started.\n   * @param sibling Sibling in which dragging has started.\n   */\n  _startReceiving(sibling, items) {\n    const activeSiblings = this._activeSiblings;\n    if (!activeSiblings.has(sibling) && items.every(item => {\n      // Note that we have to add an exception to the `enterPredicate` for items that started off\n      // in this drop list. The drag ref has logic that allows an item to return to its initial\n      // container, if it has left the initial container and none of the connected containers\n      // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n      return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n    })) {\n      activeSiblings.add(sibling);\n      this._cacheParentPositions();\n      this._listenToScrollEvents();\n      this.receivingStarted.next({\n        initiator: sibling,\n        receiver: this,\n        items\n      });\n    }\n  }\n  /**\n   * Called by a connected drop list when dragging has stopped.\n   * @param sibling Sibling whose dragging has stopped.\n   */\n  _stopReceiving(sibling) {\n    this._activeSiblings.delete(sibling);\n    this._viewportScrollSubscription.unsubscribe();\n    this.receivingStopped.next({\n      initiator: sibling,\n      receiver: this\n    });\n  }\n  /**\n   * Starts listening to scroll events on the viewport.\n   * Used for updating the internal state of the list.\n   */\n  _listenToScrollEvents() {\n    this._viewportScrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(event => {\n      if (this.isDragging()) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n          this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n        }\n      } else if (this.isReceiving()) {\n        this._cacheParentPositions();\n      }\n    });\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (!this._cachedShadowRoot) {\n      const shadowRoot = _getShadowRoot(coerceElement(this.element));\n      this._cachedShadowRoot = shadowRoot || this._document;\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Notifies any siblings that may potentially receive the item. */\n  _notifyReceivingSiblings() {\n    const draggedItems = this._sortStrategy.getActiveItemsSnapshot().filter(item => item.isDragging());\n    this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n  }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n  const {\n    top,\n    bottom,\n    height\n  } = clientRect;\n  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n    return AutoScrollVerticalDirection.UP;\n  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n    return AutoScrollVerticalDirection.DOWN;\n  }\n  return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n  const {\n    left,\n    right,\n    width\n  } = clientRect;\n  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n    return AutoScrollHorizontalDirection.LEFT;\n  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n    return AutoScrollHorizontalDirection.RIGHT;\n  }\n  return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n  let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  // Note that we here we do some extra checks for whether the element is actually scrollable in\n  // a certain direction and we only assign the scroll direction if it is. We do this so that we\n  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n  if (computedVertical) {\n    const scrollTop = element.scrollTop;\n    if (computedVertical === AutoScrollVerticalDirection.UP) {\n      if (scrollTop > 0) {\n        verticalScrollDirection = AutoScrollVerticalDirection.UP;\n      }\n    } else if (element.scrollHeight - scrollTop > element.clientHeight) {\n      verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n    }\n  }\n  if (computedHorizontal) {\n    const scrollLeft = element.scrollLeft;\n    if (direction === 'rtl') {\n      if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n        // In RTL `scrollLeft` will be negative when scrolled.\n        if (scrollLeft < 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n        }\n      } else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n      }\n    } else {\n      if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n        if (scrollLeft > 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n        }\n      } else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n      }\n    }\n  }\n  return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: false,\n  capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nlet DragDropRegistry = /*#__PURE__*/(() => {\n  class DragDropRegistry {\n    constructor(_ngZone, _document) {\n      this._ngZone = _ngZone;\n      /** Registered drop container instances. */\n      this._dropInstances = new Set();\n      /** Registered drag item instances. */\n      this._dragInstances = new Set();\n      /** Drag item instances that are currently being dragged. */\n      this._activeDragInstances = [];\n      /** Keeps track of the event listeners that we've bound to the `document`. */\n      this._globalListeners = new Map();\n      /**\n       * Predicate function to check if an item is being dragged.  Moved out into a property,\n       * because it'll be called a lot and we don't want to create a new function every time.\n       */\n      this._draggingPredicate = item => item.isDragging();\n      /**\n       * Emits the `touchmove` or `mousemove` events that are dispatched\n       * while the user is dragging a drag item instance.\n       */\n      this.pointerMove = new Subject();\n      /**\n       * Emits the `touchend` or `mouseup` events that are dispatched\n       * while the user is dragging a drag item instance.\n       */\n      this.pointerUp = new Subject();\n      /**\n       * Emits when the viewport has been scrolled while the user is dragging an item.\n       * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n       * @breaking-change 13.0.0\n       */\n      this.scroll = new Subject();\n      /**\n       * Event listener that will prevent the default browser action while the user is dragging.\n       * @param event Event whose default action should be prevented.\n       */\n      this._preventDefaultWhileDragging = event => {\n        if (this._activeDragInstances.length > 0) {\n          event.preventDefault();\n        }\n      };\n      /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n      this._persistentTouchmoveListener = event => {\n        if (this._activeDragInstances.length > 0) {\n          // Note that we only want to prevent the default action after dragging has actually started.\n          // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n          // but it could be pushed back if the user has set up a drag delay or threshold.\n          if (this._activeDragInstances.some(this._draggingPredicate)) {\n            event.preventDefault();\n          }\n          this.pointerMove.next(event);\n        }\n      };\n      this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n      if (!this._dropInstances.has(drop)) {\n        this._dropInstances.add(drop);\n      }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n      this._dragInstances.add(drag);\n      // The `touchmove` event gets bound once, ahead of time, because WebKit\n      // won't preventDefault on a dynamically-added `touchmove` listener.\n      // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n      if (this._dragInstances.size === 1) {\n        this._ngZone.runOutsideAngular(() => {\n          // The event handler has to be explicitly active,\n          // because newer browsers make it passive by default.\n          this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        });\n      }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n      this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n      this._dragInstances.delete(drag);\n      this.stopDragging(drag);\n      if (this._dragInstances.size === 0) {\n        this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n      }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n      // Do not process the same drag twice to avoid memory leaks and redundant listeners\n      if (this._activeDragInstances.indexOf(drag) > -1) {\n        return;\n      }\n      this._activeDragInstances.push(drag);\n      if (this._activeDragInstances.length === 1) {\n        const isTouchEvent = event.type.startsWith('touch');\n        // We explicitly bind __active__ listeners here, because newer browsers will default to\n        // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n        // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n        this._globalListeners.set(isTouchEvent ? 'touchend' : 'mouseup', {\n          handler: e => this.pointerUp.next(e),\n          options: true\n        }).set('scroll', {\n          handler: e => this.scroll.next(e),\n          // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n          // the document. See https://github.com/angular/components/issues/17144.\n          options: true\n        })\n        // Preventing the default action on `mousemove` isn't enough to disable text selection\n        // on Safari so we need to prevent the selection event as well. Alternatively this can\n        // be done by setting `user-select: none` on the `body`, however it has causes a style\n        // recalculation which can be expensive on pages with a lot of elements.\n        .set('selectstart', {\n          handler: this._preventDefaultWhileDragging,\n          options: activeCapturingEventOptions\n        });\n        // We don't have to bind a move event for touch drag sequences, because\n        // we already have a persistent global one bound from `registerDragItem`.\n        if (!isTouchEvent) {\n          this._globalListeners.set('mousemove', {\n            handler: e => this.pointerMove.next(e),\n            options: activeCapturingEventOptions\n          });\n        }\n        this._ngZone.runOutsideAngular(() => {\n          this._globalListeners.forEach((config, name) => {\n            this._document.addEventListener(name, config.handler, config.options);\n          });\n        });\n      }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n      const index = this._activeDragInstances.indexOf(drag);\n      if (index > -1) {\n        this._activeDragInstances.splice(index, 1);\n        if (this._activeDragInstances.length === 0) {\n          this._clearGlobalListeners();\n        }\n      }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n      return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n      const streams = [this.scroll];\n      if (shadowRoot && shadowRoot !== this._document) {\n        // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n        // because we want to guarantee that the event is bound outside of the `NgZone`. With\n        // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n        streams.push(new Observable(observer => {\n          return this._ngZone.runOutsideAngular(() => {\n            const eventOptions = true;\n            const callback = event => {\n              if (this._activeDragInstances.length) {\n                observer.next(event);\n              }\n            };\n            shadowRoot.addEventListener('scroll', callback, eventOptions);\n            return () => {\n              shadowRoot.removeEventListener('scroll', callback, eventOptions);\n            };\n          });\n        }));\n      }\n      return merge(...streams);\n    }\n    ngOnDestroy() {\n      this._dragInstances.forEach(instance => this.removeDragItem(instance));\n      this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n      this._clearGlobalListeners();\n      this.pointerMove.complete();\n      this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n      this._globalListeners.forEach((config, name) => {\n        this._document.removeEventListener(name, config.handler, config.options);\n      });\n      this._globalListeners.clear();\n    }\n    static {\n      this.ɵfac = function DragDropRegistry_Factory(t) {\n        return new (t || DragDropRegistry)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DragDropRegistry,\n        factory: DragDropRegistry.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DragDropRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nlet DragDrop = /*#__PURE__*/(() => {\n  class DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n      this._document = _document;\n      this._ngZone = _ngZone;\n      this._viewportRuler = _viewportRuler;\n      this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n      return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n      return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static {\n      this.ɵfac = function DragDrop_Factory(t) {\n        return new (t || DragDrop)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(DragDropRegistry));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DragDrop,\n        factory: DragDrop.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DragDrop;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = /*#__PURE__*/new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n  if (node.nodeType !== 1) {\n    throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n  }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = /*#__PURE__*/new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nlet CdkDragHandle = /*#__PURE__*/(() => {\n  class CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._stateChanges.next(this);\n    }\n    constructor(element, _parentDrag) {\n      this.element = element;\n      this._parentDrag = _parentDrag;\n      /** Emits when the state of the handle has changed. */\n      this._stateChanges = new Subject();\n      this._disabled = false;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        assertElementNode(element.nativeElement, 'cdkDragHandle');\n      }\n      _parentDrag?._addHandle(this);\n    }\n    ngOnDestroy() {\n      this._parentDrag?._removeHandle(this);\n      this._stateChanges.complete();\n    }\n    static {\n      this.ɵfac = function CdkDragHandle_Factory(t) {\n        return new (t || CdkDragHandle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDragHandle,\n        selectors: [[\"\", \"cdkDragHandle\", \"\"]],\n        hostAttrs: [1, \"cdk-drag-handle\"],\n        inputs: {\n          disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkDragHandleDisabled\", \"disabled\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DRAG_HANDLE,\n          useExisting: CdkDragHandle\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkDragHandle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = /*#__PURE__*/new InjectionToken('CDK_DRAG_CONFIG');\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = /*#__PURE__*/new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nlet CdkDrag = /*#__PURE__*/(() => {\n  class CdkDrag {\n    static {\n      this._dragInstances = [];\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n      return this._disabled || this.dropContainer && this.dropContainer.disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._dragRef.disabled = this._disabled;\n    }\n    constructor( /** Element that the draggable is attached to. */\n    element, /** Droppable container that the draggable is a part of. */\n    dropContainer,\n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n      this.element = element;\n      this.dropContainer = dropContainer;\n      this._ngZone = _ngZone;\n      this._viewContainerRef = _viewContainerRef;\n      this._dir = _dir;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._selfHandle = _selfHandle;\n      this._parentDrag = _parentDrag;\n      this._destroyed = new Subject();\n      this._handles = new BehaviorSubject([]);\n      /** Emits when the user starts dragging the item. */\n      this.started = new EventEmitter();\n      /** Emits when the user has released a drag item, before any animations have started. */\n      this.released = new EventEmitter();\n      /** Emits when the user stops dragging an item in the container. */\n      this.ended = new EventEmitter();\n      /** Emits when the user has moved the item into a new container. */\n      this.entered = new EventEmitter();\n      /** Emits when the user removes the item its container by dragging it into another container. */\n      this.exited = new EventEmitter();\n      /** Emits when the user drops the item inside a container. */\n      this.dropped = new EventEmitter();\n      /**\n       * Emits as the user is dragging the item. Use with caution,\n       * because this event will fire for every pixel that the user has dragged.\n       */\n      this.moved = new Observable(observer => {\n        const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n          source: this,\n          pointerPosition: movedEvent.pointerPosition,\n          event: movedEvent.event,\n          delta: movedEvent.delta,\n          distance: movedEvent.distance\n        }))).subscribe(observer);\n        return () => {\n          subscription.unsubscribe();\n        };\n      });\n      this._dragRef = dragDrop.createDrag(element, {\n        dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n        pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ? config.pointerDirectionChangeThreshold : 5,\n        zIndex: config?.zIndex\n      });\n      this._dragRef.data = this;\n      // We have to keep track of the drag instances in order to be able to match an element to\n      // a drag instance. We can't go through the global registry of `DragRef`, because the root\n      // element could be different.\n      CdkDrag._dragInstances.push(this);\n      if (config) {\n        this._assignDefaults(config);\n      }\n      // Note that usually the container is assigned when the drop list is picks up the item, but in\n      // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n      // where there are no items on the first change detection pass, but the items get picked up as\n      // soon as the user triggers another pass by dragging. This is a problem, because the item would\n      // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n      // is too late since the two modes save different kinds of information. We work around it by\n      // assigning the drop container both from here and the list.\n      if (dropContainer) {\n        this._dragRef._withDropContainer(dropContainer._dropListRef);\n        dropContainer.addItem(this);\n      }\n      this._syncInputs(this._dragRef);\n      this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n      return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n      return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n      this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n      return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n      this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n      // Normally this isn't in the zone, but it can cause major performance regressions for apps\n      // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n      this._ngZone.runOutsideAngular(() => {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n          this._updateRootElement();\n          this._setupHandlesListener();\n          if (this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n          }\n        });\n      });\n    }\n    ngOnChanges(changes) {\n      const rootSelectorChange = changes['rootElementSelector'];\n      const positionChange = changes['freeDragPosition'];\n      // We don't have to react to the first change since it's being\n      // handled in `ngAfterViewInit` where it needs to be deferred.\n      if (rootSelectorChange && !rootSelectorChange.firstChange) {\n        this._updateRootElement();\n      }\n      // Skip the first change since it's being handled in `ngAfterViewInit`.\n      if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n        this._dragRef.setFreeDragPosition(this.freeDragPosition);\n      }\n    }\n    ngOnDestroy() {\n      if (this.dropContainer) {\n        this.dropContainer.removeItem(this);\n      }\n      const index = CdkDrag._dragInstances.indexOf(this);\n      if (index > -1) {\n        CdkDrag._dragInstances.splice(index, 1);\n      }\n      // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n      this._ngZone.runOutsideAngular(() => {\n        this._handles.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n      });\n    }\n    _addHandle(handle) {\n      const handles = this._handles.getValue();\n      handles.push(handle);\n      this._handles.next(handles);\n    }\n    _removeHandle(handle) {\n      const handles = this._handles.getValue();\n      const index = handles.indexOf(handle);\n      if (index > -1) {\n        handles.splice(index, 1);\n        this._handles.next(handles);\n      }\n    }\n    _setPreviewTemplate(preview) {\n      this._previewTemplate = preview;\n    }\n    _resetPreviewTemplate(preview) {\n      if (preview === this._previewTemplate) {\n        this._previewTemplate = null;\n      }\n    }\n    _setPlaceholderTemplate(placeholder) {\n      this._placeholderTemplate = placeholder;\n    }\n    _resetPlaceholderTemplate(placeholder) {\n      if (placeholder === this._placeholderTemplate) {\n        this._placeholderTemplate = null;\n      }\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n      const element = this.element.nativeElement;\n      let rootElement = element;\n      if (this.rootElementSelector) {\n        rootElement = element.closest !== undefined ? element.closest(this.rootElementSelector) :\n        // Comment tag doesn't have closest method, so use parent's one.\n        element.parentElement?.closest(this.rootElementSelector);\n      }\n      if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        assertElementNode(rootElement, 'cdkDrag');\n      }\n      this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n      const boundary = this.boundaryElement;\n      if (!boundary) {\n        return null;\n      }\n      if (typeof boundary === 'string') {\n        return this.element.nativeElement.closest(boundary);\n      }\n      return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n      ref.beforeStarted.subscribe(() => {\n        if (!ref.isDragging()) {\n          const dir = this._dir;\n          const dragStartDelay = this.dragStartDelay;\n          const placeholder = this._placeholderTemplate ? {\n            template: this._placeholderTemplate.templateRef,\n            context: this._placeholderTemplate.data,\n            viewContainer: this._viewContainerRef\n          } : null;\n          const preview = this._previewTemplate ? {\n            template: this._previewTemplate.templateRef,\n            context: this._previewTemplate.data,\n            matchSize: this._previewTemplate.matchSize,\n            viewContainer: this._viewContainerRef\n          } : null;\n          ref.disabled = this.disabled;\n          ref.lockAxis = this.lockAxis;\n          ref.dragStartDelay = typeof dragStartDelay === 'object' && dragStartDelay ? dragStartDelay : coerceNumberProperty(dragStartDelay);\n          ref.constrainPosition = this.constrainPosition;\n          ref.previewClass = this.previewClass;\n          ref.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(placeholder).withPreviewTemplate(preview).withPreviewContainer(this.previewContainer || 'global');\n          if (dir) {\n            ref.withDirection(dir.value);\n          }\n        }\n      });\n      // This only needs to be resolved once.\n      ref.beforeStarted.pipe(take(1)).subscribe(() => {\n        // If we managed to resolve a parent through DI, use it.\n        if (this._parentDrag) {\n          ref.withParent(this._parentDrag._dragRef);\n          return;\n        }\n        // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n        // the item was projected into another item by something like `ngTemplateOutlet`.\n        let parent = this.element.nativeElement.parentElement;\n        while (parent) {\n          if (parent.classList.contains(DRAG_HOST_CLASS)) {\n            ref.withParent(CdkDrag._dragInstances.find(drag => {\n              return drag.element.nativeElement === parent;\n            })?._dragRef || null);\n            break;\n          }\n          parent = parent.parentElement;\n        }\n      });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n      ref.started.subscribe(startEvent => {\n        this.started.emit({\n          source: this,\n          event: startEvent.event\n        });\n        // Since all of these events run outside of change detection,\n        // we need to ensure that everything is marked correctly.\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.released.subscribe(releaseEvent => {\n        this.released.emit({\n          source: this,\n          event: releaseEvent.event\n        });\n      });\n      ref.ended.subscribe(endEvent => {\n        this.ended.emit({\n          source: this,\n          distance: endEvent.distance,\n          dropPoint: endEvent.dropPoint,\n          event: endEvent.event\n        });\n        // Since all of these events run outside of change detection,\n        // we need to ensure that everything is marked correctly.\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.entered.subscribe(enterEvent => {\n        this.entered.emit({\n          container: enterEvent.container.data,\n          item: this,\n          currentIndex: enterEvent.currentIndex\n        });\n      });\n      ref.exited.subscribe(exitEvent => {\n        this.exited.emit({\n          container: exitEvent.container.data,\n          item: this\n        });\n      });\n      ref.dropped.subscribe(dropEvent => {\n        this.dropped.emit({\n          previousIndex: dropEvent.previousIndex,\n          currentIndex: dropEvent.currentIndex,\n          previousContainer: dropEvent.previousContainer.data,\n          container: dropEvent.container.data,\n          isPointerOverContainer: dropEvent.isPointerOverContainer,\n          item: this,\n          distance: dropEvent.distance,\n          dropPoint: dropEvent.dropPoint,\n          event: dropEvent.event\n        });\n      });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n      const {\n        lockAxis,\n        dragStartDelay,\n        constrainPosition,\n        previewClass,\n        boundaryElement,\n        draggingDisabled,\n        rootElementSelector,\n        previewContainer\n      } = config;\n      this.disabled = draggingDisabled == null ? false : draggingDisabled;\n      this.dragStartDelay = dragStartDelay || 0;\n      if (lockAxis) {\n        this.lockAxis = lockAxis;\n      }\n      if (constrainPosition) {\n        this.constrainPosition = constrainPosition;\n      }\n      if (previewClass) {\n        this.previewClass = previewClass;\n      }\n      if (boundaryElement) {\n        this.boundaryElement = boundaryElement;\n      }\n      if (rootElementSelector) {\n        this.rootElementSelector = rootElementSelector;\n      }\n      if (previewContainer) {\n        this.previewContainer = previewContainer;\n      }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n      // Listen for any newly-added handles.\n      this._handles.pipe(\n      // Sync the new handles with the DragRef.\n      tap(handles => {\n        const handleElements = handles.map(handle => handle.element);\n        // Usually handles are only allowed to be a descendant of the drag element, but if\n        // the consumer defined a different drag root, we should allow the drag element\n        // itself to be a handle too.\n        if (this._selfHandle && this.rootElementSelector) {\n          handleElements.push(this.element);\n        }\n        this._dragRef.withHandles(handleElements);\n      }),\n      // Listen if the state of any of the handles changes.\n      switchMap(handles => {\n        return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n      }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n        // Enabled/disable the handle that changed in the DragRef.\n        const dragRef = this._dragRef;\n        const handle = handleInstance.element.nativeElement;\n        handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n      });\n    }\n    static {\n      this.ɵfac = function CdkDrag_Factory(t) {\n        return new (t || CdkDrag)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(DragDrop), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10), i0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDrag,\n        selectors: [[\"\", \"cdkDrag\", \"\"]],\n        hostAttrs: [1, \"cdk-drag\"],\n        hostVars: 4,\n        hostBindings: function CdkDrag_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n          }\n        },\n        inputs: {\n          data: [i0.ɵɵInputFlags.None, \"cdkDragData\", \"data\"],\n          lockAxis: [i0.ɵɵInputFlags.None, \"cdkDragLockAxis\", \"lockAxis\"],\n          rootElementSelector: [i0.ɵɵInputFlags.None, \"cdkDragRootElement\", \"rootElementSelector\"],\n          boundaryElement: [i0.ɵɵInputFlags.None, \"cdkDragBoundary\", \"boundaryElement\"],\n          dragStartDelay: [i0.ɵɵInputFlags.None, \"cdkDragStartDelay\", \"dragStartDelay\"],\n          freeDragPosition: [i0.ɵɵInputFlags.None, \"cdkDragFreeDragPosition\", \"freeDragPosition\"],\n          disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkDragDisabled\", \"disabled\", booleanAttribute],\n          constrainPosition: [i0.ɵɵInputFlags.None, \"cdkDragConstrainPosition\", \"constrainPosition\"],\n          previewClass: [i0.ɵɵInputFlags.None, \"cdkDragPreviewClass\", \"previewClass\"],\n          previewContainer: [i0.ɵɵInputFlags.None, \"cdkDragPreviewContainer\", \"previewContainer\"]\n        },\n        outputs: {\n          started: \"cdkDragStarted\",\n          released: \"cdkDragReleased\",\n          ended: \"cdkDragEnded\",\n          entered: \"cdkDragEntered\",\n          exited: \"cdkDragExited\",\n          dropped: \"cdkDragDropped\",\n          moved: \"cdkDragMoved\"\n        },\n        exportAs: [\"cdkDrag\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DRAG_PARENT,\n          useExisting: CdkDrag\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkDrag;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = /*#__PURE__*/new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nlet CdkDropListGroup = /*#__PURE__*/(() => {\n  class CdkDropListGroup {\n    constructor() {\n      /** Drop lists registered inside the group. */\n      this._items = new Set();\n      /** Whether starting a dragging sequence from inside this group is disabled. */\n      this.disabled = false;\n    }\n    ngOnDestroy() {\n      this._items.clear();\n    }\n    static {\n      this.ɵfac = function CdkDropListGroup_Factory(t) {\n        return new (t || CdkDropListGroup)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDropListGroup,\n        selectors: [[\"\", \"cdkDropListGroup\", \"\"]],\n        inputs: {\n          disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute]\n        },\n        exportAs: [\"cdkDropListGroup\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DROP_LIST_GROUP,\n          useExisting: CdkDropListGroup\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkDropListGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/** Container that wraps a set of draggable items. */\nlet CdkDropList = /*#__PURE__*/(() => {\n  class CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static {\n      this._dropLists = [];\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n      return this._disabled || !!this._group && this._group.disabled;\n    }\n    set disabled(value) {\n      // Usually we sync the directive and ref state right before dragging starts, in order to have\n      // a single point of failure and to avoid having to use setters for everything. `disabled` is\n      // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n      // the user in a disabled state, so we also need to sync it as it's being set.\n      this._dropListRef.disabled = this._disabled = value;\n    }\n    constructor( /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n      this.element = element;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._scrollDispatcher = _scrollDispatcher;\n      this._dir = _dir;\n      this._group = _group;\n      /** Emits when the list has been destroyed. */\n      this._destroyed = new Subject();\n      /**\n       * Other draggable containers that this container is connected to and into which the\n       * container's items can be transferred. Can either be references to other drop containers,\n       * or their unique IDs.\n       */\n      this.connectedTo = [];\n      /**\n       * Unique ID for the drop zone. Can be used as a reference\n       * in the `connectedTo` of another `CdkDropList`.\n       */\n      this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n      /**\n       * Function that is used to determine whether an item\n       * is allowed to be moved into a drop container.\n       */\n      this.enterPredicate = () => true;\n      /** Functions that is used to determine whether an item can be sorted into a particular index. */\n      this.sortPredicate = () => true;\n      /** Emits when the user drops an item inside the container. */\n      this.dropped = new EventEmitter();\n      /**\n       * Emits when the user has moved a new drag item into this container.\n       */\n      this.entered = new EventEmitter();\n      /**\n       * Emits when the user removes an item from the container\n       * by dragging it into another container.\n       */\n      this.exited = new EventEmitter();\n      /** Emits as the user is swapping items while actively dragging. */\n      this.sorted = new EventEmitter();\n      /**\n       * Keeps track of the items that are registered with this container. Historically we used to\n       * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n       * well which means that we can't handle cases like dragging the headers of a `mat-table`\n       * correctly. What we do instead is to have the items register themselves with the container\n       * and then we sort them based on their position in the DOM.\n       */\n      this._unsortedItems = new Set();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        assertElementNode(element.nativeElement, 'cdkDropList');\n      }\n      this._dropListRef = dragDrop.createDropList(element);\n      this._dropListRef.data = this;\n      if (config) {\n        this._assignDefaults(config);\n      }\n      this._dropListRef.enterPredicate = (drag, drop) => {\n        return this.enterPredicate(drag.data, drop.data);\n      };\n      this._dropListRef.sortPredicate = (index, drag, drop) => {\n        return this.sortPredicate(index, drag.data, drop.data);\n      };\n      this._setupInputSyncSubscription(this._dropListRef);\n      this._handleEvents(this._dropListRef);\n      CdkDropList._dropLists.push(this);\n      if (_group) {\n        _group._items.add(this);\n      }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n      this._unsortedItems.add(item);\n      if (this._dropListRef.isDragging()) {\n        this._syncItemsWithRef();\n      }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n      this._unsortedItems.delete(item);\n      if (this._dropListRef.isDragging()) {\n        this._syncItemsWithRef();\n      }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n      return Array.from(this._unsortedItems).sort((a, b) => {\n        const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n        // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        // tslint:disable-next-line:no-bitwise\n        return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n      });\n    }\n    ngOnDestroy() {\n      const index = CdkDropList._dropLists.indexOf(this);\n      if (index > -1) {\n        CdkDropList._dropLists.splice(index, 1);\n      }\n      if (this._group) {\n        this._group._items.delete(this);\n      }\n      this._unsortedItems.clear();\n      this._dropListRef.dispose();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n      if (this._dir) {\n        this._dir.change.pipe(startWith(this._dir.value), takeUntil(this._destroyed)).subscribe(value => ref.withDirection(value));\n      }\n      ref.beforeStarted.subscribe(() => {\n        const siblings = coerceArray(this.connectedTo).map(drop => {\n          if (typeof drop === 'string') {\n            const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n            if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n              console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n            }\n            return correspondingDropList;\n          }\n          return drop;\n        });\n        if (this._group) {\n          this._group._items.forEach(drop => {\n            if (siblings.indexOf(drop) === -1) {\n              siblings.push(drop);\n            }\n          });\n        }\n        // Note that we resolve the scrollable parents here so that we delay the resolution\n        // as long as possible, ensuring that the element is in its final place in the DOM.\n        if (!this._scrollableParentsResolved) {\n          const scrollableParents = this._scrollDispatcher.getAncestorScrollContainers(this.element).map(scrollable => scrollable.getElementRef().nativeElement);\n          this._dropListRef.withScrollableParents(scrollableParents);\n          // Only do this once since it involves traversing the DOM and the parents\n          // shouldn't be able to change without the drop list being destroyed.\n          this._scrollableParentsResolved = true;\n        }\n        ref.disabled = this.disabled;\n        ref.lockAxis = this.lockAxis;\n        ref.sortingDisabled = this.sortingDisabled;\n        ref.autoScrollDisabled = this.autoScrollDisabled;\n        ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n        ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef)).withOrientation(this.orientation);\n      });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n      ref.beforeStarted.subscribe(() => {\n        this._syncItemsWithRef();\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.entered.subscribe(event => {\n        this.entered.emit({\n          container: this,\n          item: event.item.data,\n          currentIndex: event.currentIndex\n        });\n      });\n      ref.exited.subscribe(event => {\n        this.exited.emit({\n          container: this,\n          item: event.item.data\n        });\n        this._changeDetectorRef.markForCheck();\n      });\n      ref.sorted.subscribe(event => {\n        this.sorted.emit({\n          previousIndex: event.previousIndex,\n          currentIndex: event.currentIndex,\n          container: this,\n          item: event.item.data\n        });\n      });\n      ref.dropped.subscribe(dropEvent => {\n        this.dropped.emit({\n          previousIndex: dropEvent.previousIndex,\n          currentIndex: dropEvent.currentIndex,\n          previousContainer: dropEvent.previousContainer.data,\n          container: dropEvent.container.data,\n          item: dropEvent.item.data,\n          isPointerOverContainer: dropEvent.isPointerOverContainer,\n          distance: dropEvent.distance,\n          dropPoint: dropEvent.dropPoint,\n          event: dropEvent.event\n        });\n        // Mark for check since all of these events run outside of change\n        // detection and we're not guaranteed for something else to have triggered it.\n        this._changeDetectorRef.markForCheck();\n      });\n      merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n      const {\n        lockAxis,\n        draggingDisabled,\n        sortingDisabled,\n        listAutoScrollDisabled,\n        listOrientation\n      } = config;\n      this.disabled = draggingDisabled == null ? false : draggingDisabled;\n      this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n      this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n      this.orientation = listOrientation || 'vertical';\n      if (lockAxis) {\n        this.lockAxis = lockAxis;\n      }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n      this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static {\n      this.ɵfac = function CdkDropList_Factory(t) {\n        return new (t || CdkDropList)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DragDrop), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), i0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDropList,\n        selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]],\n        hostAttrs: [1, \"cdk-drop-list\"],\n        hostVars: 7,\n        hostBindings: function CdkDropList_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx.id);\n            i0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n          }\n        },\n        inputs: {\n          connectedTo: [i0.ɵɵInputFlags.None, \"cdkDropListConnectedTo\", \"connectedTo\"],\n          data: [i0.ɵɵInputFlags.None, \"cdkDropListData\", \"data\"],\n          orientation: [i0.ɵɵInputFlags.None, \"cdkDropListOrientation\", \"orientation\"],\n          id: \"id\",\n          lockAxis: [i0.ɵɵInputFlags.None, \"cdkDropListLockAxis\", \"lockAxis\"],\n          disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkDropListDisabled\", \"disabled\", booleanAttribute],\n          sortingDisabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute],\n          enterPredicate: [i0.ɵɵInputFlags.None, \"cdkDropListEnterPredicate\", \"enterPredicate\"],\n          sortPredicate: [i0.ɵɵInputFlags.None, \"cdkDropListSortPredicate\", \"sortPredicate\"],\n          autoScrollDisabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute],\n          autoScrollStep: [i0.ɵɵInputFlags.None, \"cdkDropListAutoScrollStep\", \"autoScrollStep\"]\n        },\n        outputs: {\n          dropped: \"cdkDropListDropped\",\n          entered: \"cdkDropListEntered\",\n          exited: \"cdkDropListExited\",\n          sorted: \"cdkDropListSorted\"\n        },\n        exportAs: [\"cdkDropList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([\n        // Prevent child drop lists from picking up the same group as their parent.\n        {\n          provide: CDK_DROP_LIST_GROUP,\n          useValue: undefined\n        }, {\n          provide: CDK_DROP_LIST,\n          useExisting: CdkDropList\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkDropList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = /*#__PURE__*/new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nlet CdkDragPreview = /*#__PURE__*/(() => {\n  class CdkDragPreview {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n      this._drag = inject(CDK_DRAG_PARENT);\n      /** Whether the preview should preserve the same size as the item that is being dragged. */\n      this.matchSize = false;\n      this._drag._setPreviewTemplate(this);\n    }\n    ngOnDestroy() {\n      this._drag._resetPreviewTemplate(this);\n    }\n    static {\n      this.ɵfac = function CdkDragPreview_Factory(t) {\n        return new (t || CdkDragPreview)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDragPreview,\n        selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]],\n        inputs: {\n          data: \"data\",\n          matchSize: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"matchSize\", \"matchSize\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DRAG_PREVIEW,\n          useExisting: CdkDragPreview\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkDragPreview;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = /*#__PURE__*/new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nlet CdkDragPlaceholder = /*#__PURE__*/(() => {\n  class CdkDragPlaceholder {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n      this._drag = inject(CDK_DRAG_PARENT);\n      this._drag._setPlaceholderTemplate(this);\n    }\n    ngOnDestroy() {\n      this._drag._resetPlaceholderTemplate(this);\n    }\n    static {\n      this.ɵfac = function CdkDragPlaceholder_Factory(t) {\n        return new (t || CdkDragPlaceholder)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkDragPlaceholder,\n        selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]],\n        inputs: {\n          data: \"data\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_DRAG_PLACEHOLDER,\n          useExisting: CdkDragPlaceholder\n        }])]\n      });\n    }\n  }\n  return CdkDragPlaceholder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DRAG_DROP_DIRECTIVES = [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder];\nlet DragDropModule = /*#__PURE__*/(() => {\n  class DragDropModule {\n    static {\n      this.ɵfac = function DragDropModule_Factory(t) {\n        return new (t || DragDropModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: DragDropModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [DragDrop],\n        imports: [CdkScrollableModule]\n      });\n    }\n  }\n  return DragDropModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import { CdkDragDrop, moveItemInArray, CdkDropList, CdkDrag, CdkDragHandle } from '@angular/cdk/drag-drop';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild, DestroyRef,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n  TemplateRef,\n  TrackByFunction\n} from '@angular/core';\nimport { VirtualScrollerModule } from '@iharbeck/ngx-virtual-scroller';\nimport {NgIf, NgFor, NgTemplateOutlet, NgClass} from '@angular/common';\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {BulkSelectionService} from \"../../../cards/bulk-selection.service\";\nimport {SeriesCardComponent} from \"../../../cards/series-card/series-card.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\n\nexport interface IndexUpdateEvent {\n  fromPosition: number;\n  toPosition: number;\n  item: any;\n  fromAccessibilityMode: boolean;\n}\n\nexport interface ItemRemoveEvent {\n  position: number;\n  item: any;\n}\n\n@Component({\n    selector: 'app-draggable-ordered-list',\n    templateUrl: './draggable-ordered-list.component.html',\n    styleUrls: ['./draggable-ordered-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n  imports: [NgIf, VirtualScrollerModule, NgFor, NgTemplateOutlet, CdkDropList, CdkDrag,\n    CdkDragHandle, TranslocoDirective, NgClass, SeriesCardComponent, FormsModule]\n})\nexport class DraggableOrderedListComponent {\n\n  /**\n   * After this many elements, drag and drop is disabled and we use a virtualized list instead\n   */\n  @Input() virtualizeAfter = 100;\n  @Input() accessibilityMode: boolean = false;\n  /**\n   * Shows the remove button on the list item\n   */\n  @Input() showRemoveButton: boolean = true;\n  @Input() items: Array<any> = [];\n  /**\n   * Parent scroll for virtualize pagination\n   */\n  @Input() parentScroll!: Element | Window;\n  /**\n   * Disables drag and drop functionality. Useful if a filter is present which will skew actual index.\n   */\n  @Input() disabled: boolean = false;\n  /**\n   * When enabled, draggability is disabled and a checkbox renders instead of order box or drag handle\n   */\n  @Input() bulkMode: boolean = false;\n  @Input() trackByIdentity: TrackByFunction<any> = (index: number, item: any) => `${item.id}_${item.order}_${item.title}`;\n  /**\n   * After an item is re-ordered, you MUST reload from backend the new data. This is because accessibility mode will use item.order which needs to be in sync.\n   */\n  @Output() orderUpdated: EventEmitter<IndexUpdateEvent> = new EventEmitter<IndexUpdateEvent>();\n  @Output() itemRemove: EventEmitter<ItemRemoveEvent> = new EventEmitter<ItemRemoveEvent>();\n  @ContentChild('draggableItem') itemTemplate!: TemplateRef<any>;\n\n  public readonly bulkSelectionService = inject(BulkSelectionService);\n  public readonly destroyRef = inject(DestroyRef);\n\n  get BufferAmount() {\n    return Math.min(this.items.length / 20, 20);\n  }\n\n  constructor(private readonly cdRef: ChangeDetectorRef) {\n    this.bulkSelectionService.selections$.pipe(\n        takeUntilDestroyed(this.destroyRef)\n    ).subscribe((s) => {\n      this.cdRef.markForCheck()\n    });\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousIndex === event.currentIndex) return;\n    moveItemInArray(this.items, event.previousIndex, event.currentIndex);\n    this.orderUpdated.emit({\n      fromPosition: event.previousIndex,\n      toPosition: event.currentIndex,\n      item: event.item.data,\n      fromAccessibilityMode: false\n    });\n    this.cdRef.markForCheck();\n  }\n\n  updateIndex(previousIndex: number, item: any) {\n    // get the new value of the input\n    const inputElem = <HTMLInputElement>document.querySelector('#reorder-' + previousIndex);\n    const newIndex = parseInt(inputElem.value, 10);\n    if (item.order === newIndex) return;\n    moveItemInArray(this.items, item.order, newIndex);\n    this.orderUpdated.emit({\n      fromPosition: item.order,\n      toPosition: newIndex,\n      item: item,\n      fromAccessibilityMode: true\n    });\n    this.cdRef.markForCheck();\n  }\n\n  removeItem(item: any, position: number) {\n    this.itemRemove.emit({\n      position: item!.order,\n      item\n    });\n    this.cdRef.markForCheck();\n  }\n\n  selectItem(updatedVal: Event, index: number) {\n    const boolVal = (updatedVal.target as HTMLInputElement).value == 'true';\n\n    this.bulkSelectionService.handleCardSelection('sideNavStream', index, this.items.length, boolVal);\n    this.cdRef.markForCheck();\n  }\n}\n","<ng-container *transloco=\"let t; read: 'draggable-ordered-list'\">\n\n    <ng-container *ngIf=\"items.length > virtualizeAfter; else dragList\">\n        <div class=\"example-list list-group-flush\">\n            <virtual-scroller #scroll [items]=\"items\" [bufferAmount]=\"BufferAmount\" [parentScroll]=\"parentScroll\">\n                <div class=\"example-box\" *ngFor=\"let item of scroll.viewPortItems; index as i; trackBy: trackByIdentity\">\n\n                    <div class=\"d-flex list-container\">\n                        <ng-container [ngTemplateOutlet]=\"handle\" [ngTemplateOutletContext]=\"{ $implicit: item, idx: i, isVirtualized: true }\"></ng-container>\n                        <ng-container [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, idx: i }\"></ng-container>\n\n                        <ng-container [ngTemplateOutlet]=\"removeBtn\" [ngTemplateOutletContext]=\"{$implicit: item, idx: i}\"></ng-container>\n                    </div>\n                </div>\n            </virtual-scroller>\n        </div>\n    </ng-container>\n\n    <ng-template #dragList>\n        <div cdkDropList class=\"{{items.length > 0 ? 'example-list list-group-flush' : ''}}\" (cdkDropListDropped)=\"drop($event)\">\n            <div class=\"example-box\" *ngFor=\"let item of items; index as i;\" cdkDrag\n                 [cdkDragData]=\"item\" cdkDragBoundary=\".example-list\"\n                 [cdkDragDisabled]=\"accessibilityMode || disabled || bulkMode\" cdkDragPreviewContainer=\"parent\">\n                <div class=\"d-flex list-container\">\n                    <ng-container [ngTemplateOutlet]=\"handle\" [ngTemplateOutletContext]=\"{ $implicit: item, idx: i, isVirtualized: false }\"></ng-container>\n                    <ng-container [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item, idx: i }\"></ng-container>\n\n                    <ng-container [ngTemplateOutlet]=\"removeBtn\" [ngTemplateOutletContext]=\"{$implicit: item, idx: i}\"></ng-container>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n\n    <ng-template #handle let-item let-idx=\"idx\" let-isVirtualized=\"isVirtualized\">\n        <div class=\"me-3 align-middle\">\n            <div class=\"align-middle\" [ngClass]=\"{'accessibility-padding': accessibilityMode, 'bulk-padding': bulkMode}\" *ngIf=\"accessibilityMode || bulkMode\">\n                <ng-container *ngIf=\"accessibilityMode\">\n                    <label for=\"reorder-{{idx}}\" class=\"form-label visually-hidden\">{{t('reorder-label')}}</label>\n                    <input id=\"reorder-{{idx}}\" class=\"form-control manual-input\" type=\"number\" inputmode=\"numeric\" min=\"0\"\n                           [max]=\"items.length - 1\" [value]=\"item.order\"\n                           (focusout)=\"updateIndex(idx, item)\" (keydown.enter)=\"updateIndex(idx, item)\" aria-describedby=\"instructions\">\n                </ng-container>\n                <ng-container *ngIf=\"bulkMode\">\n                    <label for=\"select-{{idx}}\" class=\"form-label visually-hidden\">{{t('bulk-select-label')}}</label>\n                    <input id=\"select-{{idx}}\" class=\"form-check-input mt-0\" type=\"checkbox\" (change)=\"selectItem($event, idx)\"\n                           [ngModel]=\"bulkSelectionService.isCardSelected('sideNavStream', idx)\" [ngModelOptions]=\"{standalone: true}\">\n                </ng-container>\n\n\n            </div>\n            <i *ngIf=\"!isVirtualized && !(accessibilityMode || bulkMode) && !disabled\" class=\"fa fa-grip-vertical drag-handle\" aria-hidden=\"true\" cdkDragHandle></i>\n        </div>\n    </ng-template>\n\n    <ng-template #removeBtn let-item let-idx>\n        <button class=\"btn btn-icon float-end\" (click)=\"removeItem(item, idx)\" *ngIf=\"showRemoveButton\" [disabled]=\"disabled\">\n            <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n            <span class=\"visually-hidden\" attr.aria-labelledby=\"item.id--{{idx}}\">{{t('remove-item-alt')}}</span>\n        </button>\n    </ng-template>\n\n    <p class=\"visually-hidden\" id=\"instructions\">\n        {{t('instructions-alt')}}\n    </p>\n\n\n</ng-container>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { LibraryType } from 'src/app/_models/library/library';\nimport { MangaFormat } from 'src/app/_models/manga-format';\nimport { ReadingListItem } from 'src/app/_models/reading-list';\nimport { ImageService } from 'src/app/_services/image.service';\nimport { MangaFormatIconPipe } from '../../../_pipes/manga-format-icon.pipe';\nimport { MangaFormatPipe } from '../../../_pipes/manga-format.pipe';\nimport { NgbProgressbar } from '@ng-bootstrap/ng-bootstrap';\nimport { NgIf, DatePipe } from '@angular/common';\nimport { ImageComponent } from '../../../shared/image/image.component';\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {SeriesFormatComponent} from \"../../../shared/series-format/series-format.component\";\n\n@Component({\n    selector: 'app-reading-list-item',\n    templateUrl: './reading-list-item.component.html',\n    styleUrls: ['./reading-list-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n  imports: [ImageComponent, NgIf, NgbProgressbar, DatePipe, MangaFormatPipe, MangaFormatIconPipe, TranslocoDirective, SeriesFormatComponent]\n})\nexport class ReadingListItemComponent {\n\n  @Input({required: true}) item!: ReadingListItem;\n  @Input() position: number = 0;\n  @Input() libraryTypes: {[key: number]: LibraryType} = {};\n  /**\n   * If the Reading List is promoted or not\n   */\n  @Input() promoted: boolean = false;\n\n  @Output() read: EventEmitter<ReadingListItem> = new EventEmitter();\n  @Output() remove: EventEmitter<ReadingListItem> = new EventEmitter();\n\n  get MangaFormat(): typeof MangaFormat {\n    return MangaFormat;\n  }\n\n  constructor(public imageService: ImageService) { }\n\n  readChapter(item: ReadingListItem) {\n    this.read.emit(item);\n  }\n\n\n}\n","<ng-container *transloco=\"let t; read: 'reading-list-item'\">\n  <div class=\"d-flex flex-row g-0 mb-2 reading-list-item\">\n    <div class=\"pe-2\">\n      <app-image width=\"106px\" maxHeight=\"125px\" class=\"img-top me-3\" [imageUrl]=\"imageService.getChapterCoverImage(item.chapterId)\"></app-image>\n      <ng-container *ngIf=\"item.pagesRead === 0 && item.pagesTotal > 0\">\n        <div class=\"not-read-badge\" ></div>\n      </ng-container>\n      <div class=\"progress-banner\" *ngIf=\"item.pagesRead < item.pagesTotal && item.pagesTotal > 0 && item.pagesRead !== item.pagesTotal\">\n        <p><ngb-progressbar type=\"primary\" height=\"5px\" [value]=\"item.pagesRead\" [max]=\"item.pagesTotal\"></ngb-progressbar></p>\n      </div>\n    </div>\n\n    <div class=\"flex-grow-1\">\n      <div class=\"g-0\">\n        <h5 class=\"mb-1 pb-0\" id=\"item.id--{{position}}\">\n          {{item.title}}\n          <div class=\"float-end\">\n            <button class=\"btn btn-danger\" (click)=\"remove.emit(item)\">\n                <span>\n                    <i class=\"fa fa-trash me-1\" aria-hidden=\"true\"></i>\n                </span>\n              <span class=\"d-none d-sm-inline-block\">{{t('remove')}}</span>\n            </button>\n            <button class=\"btn btn-primary ms-2\" (click)=\"readChapter(item)\">\n                <span>\n                    <i class=\"fa fa-book me-1\" aria-hidden=\"true\"></i>\n                </span>\n              <span class=\"d-none d-sm-inline-block\">{{t('read')}}</span>\n            </button>\n          </div>\n\n        </h5>\n        <div class=\"ps-1 d-none d-md-inline-block\">\n          <app-series-format [format]=\"item.seriesFormat\"></app-series-format>\n          <a href=\"/library/{{item.libraryId}}/series/{{item.seriesId}}\">{{item.seriesName}}</a>\n        </div>\n\n        <!-- TODO: Let's add summary here-->\n\n        <div class=\"ps-1 mt-2\" *ngIf=\"item.releaseDate !== '0001-01-01T00:00:00'\">\n          Released: {{item.releaseDate | date:'longDate'}}\n        </div>\n      </div>\n    </div>\n\n  </div>\n</ng-container>\n"],"mappings":"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","names":["FileUploadIconComponent__svg_svg_1_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","FileUploadIconComponent__svg_svg_2_Template","FileUploadIconComponent__svg_svg_3_Template","FileUploadIconComponent__svg_svg_4_Template","FileUploadIconComponent__svg_svg_5_Template","_c0","_c1","_c2","_c3","_c4","_c5","a0","a1","a2","a3","FileUploadComponent_ng_container_2_Template","ɵɵelementContainer","FileUploadComponent_ng_template_3_ng_container_1_Template","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","FileUploadComponent_ng_template_3_ng_template_2_Template","FileUploadComponent_ng_template_3_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","isFileDragDropAvailable_r2","isNotDragDropAvailable_r3","ɵɵreference","ɵɵadvance","ɵɵproperty","FileUploadComponent_div_7_ng_template_1_ng_container_0_Template","FileUploadComponent_div_7_ng_template_1_Template","file_r6","i_r7","ɵɵnextContext","defaultItemTemplate_r8","ctx_r4","ɵɵpureFunction4","FileUploadComponent_div_7_ng_template_3_Template","i_r9","file_r10","control_r11","FileUploadComponent_div_7_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵpipe","ɵɵpipeBind1","FileUploadTypes","IsNullOrEmpty","value","FileUploadService","_FileUploadService","renderer","div","size","extension","i","extensionIndex","file","key","t","ɵɵinject","Renderer2","ɵɵdefineInjectable","InsertAnimation","trigger","transition","query","stagger","animate","style","ZoomAnimation","STATUS","FileEvent","FileUploadControl","configuration","validators","BehaviorSubject","Subject","newValidators","files","isVisible","isEnabled","isDisabled","accept","isNativeBehaviorEnabled","discard","deletedFiles","error","errorsKey","errors","fileError","currentState","validator","isInvalid","FileUploadAbstract","_FileUploadAbstract","inject","ElementRef","ChangeDetectorRef","hook","subscription","status","event","isMultiple","v","ɵɵdefineDirective","FileUploadIconComponent","_FileUploadIconComponent","fileUploadService","type","ɵɵdirectiveInject","ɵɵdefineComponent","rf","ctx","ɵɵelementContainerStart","ɵɵtemplate","FileUploadIconComponent__svg_svg_1_Template","FileUploadIconComponent__svg_svg_2_Template","FileUploadIconComponent__svg_svg_3_Template","FileUploadIconComponent__svg_svg_4_Template","FileUploadIconComponent__svg_svg_5_Template","ɵɵelementContainerEnd","ɵɵproperty","ɵɵadvance","NgSwitch","NgSwitchCase","NgSwitchDefault","FileUploadListItemComponent","_FileUploadListItemComponent","_c0","ɵɵprojectionDef","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ɵɵnamespaceSVG","ɵɵprojection","ɵɵtextInterpolate","ɵɵtextInterpolate1","FileUploadDropZoneComponent","_FileUploadDropZoneComponent","ɵɵnamespaceHTML","DRAGOVER","TOUCHED","FileUploadComponent","_FileUploadComponent","document","index","item","eventName","input","fn","DOCUMENT","dirIndex","ɵɵcontentQuery","_c1","_c2","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c3","_c4","$event","ɵɵsyntheticHostProperty","ɵɵclassProp","ɵɵProvidersFeature","NG_VALUE_ACCESSOR","forwardRef","ɵɵInheritDefinitionFeature","_r1","ɵɵgetCurrentView","ɵɵrestoreView","ɵɵresetView","FileUploadComponent_ng_container_2_Template","FileUploadComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","FileUploadComponent_div_7_Template","ɵɵpipe","defaultTemplate_r12","ɵɵreference","ɵɵpipeBind1","NgForOf","NgIf","NgTemplateOutlet","AsyncPipe","checkFileSize","actualSize","maxSize","minSize","file","IsNullOrEmpty","getFileType","fileExtension","type","FileUploadTypes","CheckType","FILE_EXT_REG","checkFileTypes","types","checkType","fileType","checkValueType","value","FileUploadValidators","control","files","sum","a","b","toLargeFiles","error","sizeMismatch","numFiles","filesLimit","allowedFileTypes","notAllowedFiles","rejectFileTypes","FileUploadModule","_FileUploadModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","CblImportResult","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","step_r1","index","ctx_r1","currentStep","ɵɵclassMap","icon","ɵɵtextInterpolate1","title","StepTrackerComponent","constructor","cdRef","steps","ɵɵdirectiveInject","ChangeDetectorRef","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵtemplate","StepTrackerComponent_ng_container_2_Template","CommonModule","NgClass","NgForOf","styles","changeDetection","_StepTrackerComponent","CblImportReason","failIcon","successIcon","CblConflictReasonPipe","constructor","translocoService","inject","TranslocoService","transform","result","reason","CblImportReason","AllSeriesMissing","translate","ChapterMissing","series","chapter","number","EmptyFile","NameConflict","readingListName","SeriesCollision","seriesLink","libraryId","seriesId","SeriesMissing","VolumeMissing","volume","AllChapterMissing","Success","InvalidFile","pure","standalone","_CblConflictReasonPipe","CblImportResultPipe","constructor","translocoService","inject","TranslocoService","transform","result","CblImportResult","Success","translate","Partial","Fail","pure","standalone","_CblImportResultPipe","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","t_r3","ɵɵproperty","ctx_r1","uploadForm","ɵɵelementContainer","heading_r7","ɵɵpureFunction2","_c1","summary_r4","fileToProcess_r5","fileName","validationList_r6","ɵɵpureFunction1","_c2","ɵɵtemplate","ImportCblModalComponent_ng_container_0_ng_container_10_For_7_div_0_Template","validateSummary","ɵɵelementContainerStart","ɵɵrepeaterCreate","ImportCblModalComponent_ng_container_0_ng_container_10_For_7_Template","_forTrack0","ɵɵrepeater","filesToProcess","summary_r8","fileToProcess_r9","resultsList_r10","ImportCblModalComponent_ng_container_0_ng_container_11_For_7_div_0_Template","dryRunSummary","ImportCblModalComponent_ng_container_0_ng_container_11_For_7_Template","summary_r11","fileToProcess_r12","ImportCblModalComponent_ng_container_0_ng_container_12_For_5_div_0_Template","finalizeSummary","ImportCblModalComponent_ng_container_0_ng_container_12_For_5_Template","ɵɵpipeBind1","result_r13","ɵɵsanitizeHtml","ImportCblModalComponent_ng_container_0_ng_template_13_Conditional_0_li_7_Template","ɵɵtextInterpolate1","summary_r14","results","ImportCblModalComponent_ng_container_0_ng_template_13_Conditional_0_Template","ImportCblModalComponent_ng_container_0_ng_template_13_Conditional_1_Template","ɵɵconditional","length","ɵɵpropertyInterpolate2","result_r15","order","ImportCblModalComponent_ng_container_0_ng_template_15_For_2_Template","_forTrack1","summary_r16","summary_r17","success","cblName","ImportCblModalComponent_ng_container_0_ng_template_17_Case_0_Template","ImportCblModalComponent_ng_container_0_ng_template_17_Case_1_Template","ImportCblModalComponent_ng_container_0_ng_template_17_Case_2_Template","ImportCblModalComponent_ng_container_0_ng_template_17_span_5_Template","tmp_8_0","CblImportResult","Success","Fail","Partial","filename_r18","ɵɵlistener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","close","ImportCblModalComponent_ng_container_0_div_9_Template","ImportCblModalComponent_ng_container_0_ng_container_10_Template","ImportCblModalComponent_ng_container_0_ng_container_11_Template","ImportCblModalComponent_ng_container_0_ng_container_12_Template","ImportCblModalComponent_ng_container_0_ng_template_13_Template","ɵɵtemplateRefExtractor","ImportCblModalComponent_ng_container_0_ng_template_15_Template","ImportCblModalComponent_ng_container_0_ng_template_17_Template","prevStep","nextStep","steps","currentStepIndex","Step","Import","Validate","DryRun","Finalize","cblSettingsForm","WikiLink","ReadingListCBL","ɵɵsanitizeUrl","canMoveToPrevStep","canMoveToNextStep","NextButtonLabel","ImportCblModalComponent","constructor","ngModal","readingListService","utilityService","cdRef","toastr","fileUploadControl","FormControl","undefined","FileUploadValidators","accept","FormGroup","files","comicVineMatching","isLoading","title","translate","index","active","icon","failedFiles","isFileSelected","get","value","error","pages","i","formData","FormData","append","push","validateCbl","forkJoin","subscribe","forEach","cblImport","sort","a","b","markForCheck","filter","item","dryRun","import","setValue","filenamesAllowedToProcess","map","p","f","includes","name","importCbl","findIndex","ɵɵdirectiveInject","NgbActiveModal","ReadingListService","UtilityService","ChangeDetectorRef","ToastrService","selectors","viewQuery","rf","ctx","ImportCblModalComponent_ng_container_0_Template","CommonModule","NgForOf","NgIf","NgTemplateOutlet","FileUploadModule","FileUploadComponent","NgbAccordionModule","NgbAccordionButton","NgbAccordionDirective","NgbAccordionItem","NgbAccordionHeader","NgbAccordionBody","NgbAccordionCollapse","SafeHtmlPipe","CblConflictReasonPipe","ReactiveFormsModule","ɵNgNoValidate","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","StepTrackerComponent","CblImportResultPipe","TranslocoDirective","styles","changeDetection","_ImportCblModalComponent","isFakeMousedownFromScreenReader","event","isFakeTouchstartFromScreenReader","touch","extendStyles","dest","source","importantProperties","key","value","toggleNativeDragInteractions","element","enable","userSelect","toggleVisibility","combineTransforms","transform","initialTransform","parseCssTimeUnitsToMs","multiplier","getTransformTransitionDurationInMs","computedStyle","transitionedProperties","parseCssPropertyValue","property","prop","propertyIndex","rawDurations","rawDelays","name","part","getMutableClientRect","rect","isInsideClientRect","clientRect","x","y","top","bottom","left","right","adjustDomRect","domRect","isPointerNearDomRect","threshold","pointerX","pointerY","width","height","xThreshold","yThreshold","ParentPositionTracker","_document","elements","event","target","_getEventTarget","cachedPosition","scrollPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","position","node","deepCloneNode","clone","descendantsWithId","nodeName","i","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","context","passiveEventListenerOptions","normalizePassiveListenerOptions","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","DragRef","handle","_config","_ngZone","_viewportRuler","_dragDropRegistry","Subject","Subscription","targetHandle","pointerPosition","distanceX","distanceY","isDelayElapsed","container","constrainedPointerPosition","offset","activeTransform","handles","coerceElement","disabledHandles","template","rootElement","boundaryElement","parent","direction","isTouchEvent","dropContainer","placeholder","anchor","shadowRoot","referenceElement","isDragging","isTouchSequence","isAuxiliaryMouseButton","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","rootStyles","scrollEvent","previewTemplate","currentIndex","distance","isPointerOverContainer","rawX","rawY","newContainer","previewConfig","previewClass","preview","rootRect","viewRef","getRootNode","matchElementSize","getTransform","className","placeholderRect","duration","resolve","handler","timeout","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","point","svgMatrix","svgPoint","dropContainerLock","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","delta","positionSinceLastChange","changeX","changeY","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","scrollDifference","_getShadowRoot","initialParent","previewContainer","documentRef","min","max","rootNodes","wrapper","sourceRect","moveItemInArray","array","fromIndex","toIndex","from","clamp","to","clamp","value","max","SingleAxisSortStrategy","_element","_dragDropRegistry","items","item","pointerX","pointerY","pointerDelta","siblings","newIndex","isHorizontal","currentIndex","currentItem","siblingAtNewPosition","currentPosition","newPosition","delta","itemOffset","siblingOffset","oldOrder","moveItemInArray","sibling","index","isDraggedItem","offset","elementToOffset","combineTransforms","adjustDomRect","isInsideClientRect","activeDraggables","placeholder","newPositionReference","element","coerceElement","predicate","rootElement","initialTransform","p","topDifference","leftDifference","clientRect","drag","elementToMeasure","getMutableClientRect","a","b","immediateSibling","start","end","itemPositions","lastItemRect","firstItemRect","direction","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AutoScrollVerticalDirection","AutoScrollHorizontalDirection","DropListRef","_document","_ngZone","_viewportRuler","Subject","Subscription","interval","animationFrameScheduler","takeUntil","node","scrollStep","ParentPositionTracker","previousIndex","previousContainer","isPointerOverContainer","distance","dropPoint","event","previousItems","connectedTo","orientation","elements","isPointerNearDomRect","result","scrollNode","verticalScrollDirection","horizontalScrollDirection","position","getElementScrollDirections","width","height","domRect","getVerticalScrollDirection","getHorizontalScrollDirection","styles","x","y","elementFromPoint","nativeElement","activeSiblings","scrollDifference","shadowRoot","_getShadowRoot","draggedItems","top","bottom","yThreshold","left","right","xThreshold","computedVertical","computedHorizontal","scrollTop","scrollLeft","activeCapturingEventOptions","normalizePassiveListenerOptions","DragDropRegistry","_DragDropRegistry","drop","isTouchEvent","e","config","name","streams","Observable","observer","callback","merge","instance","t","ɵɵinject","NgZone","DOCUMENT","ɵɵdefineInjectable","DEFAULT_CONFIG","DragDrop","_DragDrop","DragRef","ViewportRuler","CDK_DRAG_PARENT","InjectionToken","CDK_DRAG_HANDLE","InjectionToken","CdkDragHandle","_CdkDragHandle","value","element","_parentDrag","Subject","t","ɵɵdirectiveInject","ElementRef","CDK_DRAG_PARENT","ɵɵdefineDirective","InputFlags","booleanAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","CDK_DRAG_CONFIG","DRAG_HOST_CLASS","CDK_DROP_LIST","CdkDrag","_CdkDrag","dropContainer","_document","_ngZone","_viewContainerRef","config","_dir","dragDrop","_changeDetectorRef","_selfHandle","BehaviorSubject","EventEmitter","Observable","observer","subscription","map","movedEvent","take","takeUntil","changes","rootSelectorChange","positionChange","index","handle","handles","preview","placeholder","rootElement","boundary","coerceElement","ref","dir","dragStartDelay","coerceNumberProperty","parent","drag","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","lockAxis","constrainPosition","previewClass","boundaryElement","draggingDisabled","rootElementSelector","previewContainer","tap","handleElements","switchMap","merge","item","startWith","handleInstance","dragRef","DOCUMENT","NgZone","ViewContainerRef","Directionality","DragDrop","ChangeDetectorRef","rf","ctx","ɵɵclassProp","ɵɵNgOnChangesFeature","CDK_DROP_LIST_GROUP","_uniqueIdCounter","CdkDropList","_CdkDropList","value","element","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_group","config","Subject","EventEmitter","drag","drop","index","item","a","b","ref","startWith","takeUntil","siblings","coerceArray","correspondingDropList","list","scrollableParents","scrollable","coerceNumberProperty","event","dropEvent","merge","lockAxis","draggingDisabled","sortingDisabled","listAutoScrollDisabled","listOrientation","t","ɵɵdirectiveInject","ElementRef","DragDrop","ChangeDetectorRef","ScrollDispatcher","Directionality","CDK_DROP_LIST_GROUP","CDK_DRAG_CONFIG","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵclassProp","InputFlags","booleanAttribute","ɵɵProvidersFeature","CDK_DROP_LIST","ɵɵInputTransformsFeature","ɵɵelementStart","ɵɵelementContainer","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","handle_r3","ɵɵpureFunction2","_c1","item_r1","i_r2","ctx_r4","itemTemplate","_c2","removeBtn_r4","ɵɵelementContainerStart","ɵɵtemplate","DraggableOrderedListComponent_ng_container_0_ng_container_1_div_4_Template","items","BufferAmount","parentScroll","scroll_r6","viewPortItems","trackByIdentity","item_r8","accessibilityMode","disabled","bulkMode","_c3","i_r9","ɵɵlistener","$event","ɵɵrestoreView","_r7","ɵɵnextContext","ɵɵresetView","drop","DraggableOrderedListComponent_ng_container_0_ng_template_2_div_1_Template","ɵɵclassMap","length","ɵɵtext","_r10","ctx_r10","item_r12","$implicit","idx_r13","idx","updateIndex","ɵɵpropertyInterpolate1","ɵɵtextInterpolate","t_r14","order","_r15","selectItem","bulkSelectionService","isCardSelected","ɵɵpureFunction0","_c5","DraggableOrderedListComponent_ng_container_0_ng_template_4_div_1_ng_container_1_Template","DraggableOrderedListComponent_ng_container_0_ng_template_4_div_1_ng_container_2_Template","_c4","ɵɵelement","DraggableOrderedListComponent_ng_container_0_ng_template_4_div_1_Template","DraggableOrderedListComponent_ng_container_0_ng_template_4_i_2_Template","isVirtualized_r16","_r17","ctx_r17","item_r19","idx_r20","removeItem","ɵɵattributeInterpolate1","DraggableOrderedListComponent_ng_container_0_ng_template_6_button_0_Template","showRemoveButton","DraggableOrderedListComponent_ng_container_0_ng_container_1_Template","DraggableOrderedListComponent_ng_container_0_ng_template_2_Template","ɵɵtemplateRefExtractor","DraggableOrderedListComponent_ng_container_0_ng_template_4_Template","DraggableOrderedListComponent_ng_container_0_ng_template_6_Template","virtualizeAfter","dragList_r21","ɵɵtextInterpolate1","DraggableOrderedListComponent","Math","min","constructor","cdRef","index","item","id","title","orderUpdated","EventEmitter","itemRemove","inject","BulkSelectionService","destroyRef","DestroyRef","selections$","pipe","takeUntilDestroyed","subscribe","s","markForCheck","event","previousIndex","currentIndex","moveItemInArray","emit","fromPosition","toPosition","data","fromAccessibilityMode","inputElem","document","querySelector","newIndex","parseInt","value","position","updatedVal","boolVal","target","handleCardSelection","ɵɵdirectiveInject","ChangeDetectorRef","selectors","contentQueries","rf","ctx","dirIndex","DraggableOrderedListComponent_ng_container_0_Template","NgIf","VirtualScrollerModule","VirtualScrollerComponent","NgFor","NgTemplateOutlet","CdkDropList","CdkDrag","CdkDragHandle","TranslocoDirective","NgClass","FormsModule","CheckboxControlValueAccessor","NgControlStatus","NgModel","styles","changeDetection","_DraggableOrderedListComponent","ɵɵelementContainerStart","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r1","item","pagesRead","pagesTotal","ɵɵtext","ɵɵtextInterpolate1","ɵɵpipeBind2","releaseDate","ɵɵtemplate","ReadingListItemComponent_ng_container_0_ng_container_4_Template","ReadingListItemComponent_ng_container_0_div_5_Template","ɵɵlistener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","remove","emit","readChapter","ReadingListItemComponent_ng_container_0_div_25_Template","imageService","getChapterCoverImage","chapterId","ɵɵpropertyInterpolate1","position","title","ɵɵtextInterpolate","t_r3","seriesFormat","ɵɵpropertyInterpolate2","libraryId","seriesId","ɵɵsanitizeUrl","seriesName","ReadingListItemComponent","MangaFormat","constructor","libraryTypes","promoted","read","EventEmitter","ɵɵdirectiveInject","ImageService","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ReadingListItemComponent_ng_container_0_Template","ImageComponent","NgIf","NgbProgressbar","DatePipe","TranslocoDirective","SeriesFormatComponent","styles","changeDetection","_ReadingListItemComponent"],"x_google_ignoreList":[0,9,10]}