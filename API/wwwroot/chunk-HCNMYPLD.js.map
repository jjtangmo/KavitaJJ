{"version":3,"sources":["node_modules/detect-it/dist/detect-it.esm.js","node_modules/ngx-slider-v2/fesm2022/ngx-slider-v2.mjs","src/app/reader-shared/_modals/shortcuts-modal/shortcuts-modal.component.ts","src/app/reader-shared/_modals/shortcuts-modal/shortcuts-modal.component.html","src/app/manga-reader/_service/managa-reader.service.ts","src/app/_pipes/safe-style.pipe.ts","src/app/manga-reader/_components/canvas-renderer/canvas-renderer.component.ts","src/app/manga-reader/_components/canvas-renderer/canvas-renderer.component.html","src/app/manga-reader/_components/double-renderer/double-renderer.component.ts","src/app/manga-reader/_components/double-renderer/double-renderer.component.html","src/app/manga-reader/_components/double-reverse-renderer/double-reverse-renderer.component.ts","src/app/manga-reader/_components/double-reverse-renderer/double-reverse-renderer.component.html","src/app/manga-reader/_components/single-renderer/single-renderer.component.ts","src/app/manga-reader/_components/single-renderer/single-renderer.component.html","src/app/manga-reader/_components/double-renderer-no-cover/double-no-cover-renderer.component.ts","src/app/manga-reader/_components/double-renderer-no-cover/double-no-cover-renderer.component.html","src/app/_pipes/fullscreen-icon.pipe.ts","src/app/_pipes/reader-mode-icon.pipe.ts","src/app/_pipes/fitting-icon.pipe.ts","src/app/manga-reader/_components/infinite-scroller/infinite-scroller.component.ts","src/app/manga-reader/_components/infinite-scroller/infinite-scroller.component.html","src/app/ng-swipe/ag-swipe.core.ts","src/app/ng-swipe/ng-swipe.directive.ts","src/app/manga-reader/_components/manga-reader/manga-reader.component.ts","src/app/manga-reader/_components/manga-reader/manga-reader.component.html","src/app/_routes/manga-reader.router.module.ts"],"sourcesContent":["// so it doesn't throw if no window or matchMedia\nvar w = typeof window !== 'undefined' ? window : {\n  screen: {},\n  navigator: {}\n};\nvar matchMedia = (w.matchMedia || function () {\n  return {\n    matches: false\n  };\n}).bind(w);\n// passive events test\n// adapted from https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\nvar passiveOptionAccessed = false;\nvar options = {\n  get passive() {\n    return passiveOptionAccessed = true;\n  }\n};\n// have to set and remove a no-op listener instead of null\n// (which was used previously), because Edge v15 throws an error\n// when providing a null callback.\n// https://github.com/rafgraph/detect-passive-events/pull/3\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nvar noop = function () {};\nw.addEventListener && w.addEventListener('p', noop, options);\nw.removeEventListener && w.removeEventListener('p', noop, false);\nvar supportsPassiveEvents = passiveOptionAccessed;\nvar supportsPointerEvents = ('PointerEvent' in w);\nvar onTouchStartInWindow = ('ontouchstart' in w);\nvar touchEventInWindow = ('TouchEvent' in w);\n// onTouchStartInWindow is the old-old-legacy way to determine a touch device\n// and many websites interpreted it to mean that the device is a touch only phone,\n// so today browsers on a desktop/laptop computer with a touch screen (primary input mouse)\n// have onTouchStartInWindow as false (to prevent from being confused with a\n// touchOnly phone) even though they support the TouchEvents API, so need to check\n// both onTouchStartInWindow and touchEventInWindow for TouchEvent support,\n// however, some browsers (chromium) support the TouchEvents API even when running on\n// a mouse only device (touchEventInWindow true, but onTouchStartInWindow false)\n// so the touchEventInWindow check needs to include an coarse pointer media query\nvar supportsTouchEvents = onTouchStartInWindow || touchEventInWindow && matchMedia('(any-pointer: coarse)').matches;\nvar hasTouch = (w.navigator.maxTouchPoints || 0) > 0 || supportsTouchEvents;\n// userAgent is used as a backup to correct for known device/browser bugs\n// and when the browser doesn't support interaction media queries (pointer and hover)\n// see https://caniuse.com/css-media-interaction\nvar userAgent = w.navigator.userAgent || '';\n// iPads now support a mouse that can hover, however the media query interaction\n// feature results always say iPads only have a coarse pointer that can't hover\n// even when a mouse is connected (anyFine and anyHover are always false),\n// this unfortunately indicates a touch only device but iPads should\n// be classified as a hybrid device, so determine if it is an iPad\n// to indicate it should be treated as a hybrid device with anyHover true\nvar isIPad = matchMedia('(pointer: coarse)').matches &&\n// both iPad and iPhone can \"request desktop site\", which sets the userAgent to Macintosh\n// so need to check both userAgents to determine if it is an iOS device\n// and screen size to separate iPad from iPhone\n/iPad|Macintosh/.test(userAgent) && Math.min(w.screen.width || 0, w.screen.height || 0) >= 768;\nvar hasCoarsePrimaryPointer = (matchMedia('(pointer: coarse)').matches ||\n// if the pointer is not coarse and not fine then the browser doesn't support\n// interaction media queries (see https://caniuse.com/css-media-interaction)\n// so if it has onTouchStartInWindow assume it has a coarse primary pointer\n!matchMedia('(pointer: fine)').matches && onTouchStartInWindow) &&\n// bug in firefox (as of v81) on hybrid windows devices where the interaction media queries\n// always indicate a touch only device (only has a coarse pointer that can't hover)\n// so assume that the primary pointer is not coarse for firefox windows\n!/Windows.*Firefox/.test(userAgent);\nvar hasAnyHoverOrAnyFinePointer = matchMedia('(any-pointer: fine)').matches || matchMedia('(any-hover: hover)').matches ||\n// iPads might have an input device that can hover, so assume it has anyHover\nisIPad ||\n// if no onTouchStartInWindow then the browser is indicating that it is not a touch only device\n// see above note for supportsTouchEvents\n!onTouchStartInWindow;\n// a hybrid device is one that both hasTouch and\n// any input can hover or has a fine pointer, or the primary pointer is not coarse\n// if it's not a hybrid, then if it hasTouch it's touchOnly, otherwise it's mouseOnly\nvar deviceType = hasTouch && (hasAnyHoverOrAnyFinePointer || !hasCoarsePrimaryPointer) ? 'hybrid' : hasTouch ? 'touchOnly' : 'mouseOnly';\nvar primaryInput = deviceType === 'mouseOnly' ? 'mouse' : deviceType === 'touchOnly' ? 'touch' :\n// if the device is a hybrid, then if the primary pointer is coarse\n// assume the primaryInput is touch, otherwise assume it's mouse\nhasCoarsePrimaryPointer ? 'touch' : 'mouse';\nexport { deviceType, primaryInput, supportsPassiveEvents, supportsPointerEvents, supportsTouchEvents };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, HostBinding, Inject, Optional, Component, Input, forwardRef, EventEmitter, ChangeDetectionStrategy, Output, ViewChild, ContentChild, HostListener, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { throttleTime, tap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { supportsPassiveEvents } from 'detect-passive-events';\n\n/** Label type */\nconst _c0 = (a0, a1, a2) => ({\n  tooltip: a0,\n  placement: a1,\n  content: a2\n});\nfunction TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template(rf, ctx) {}\nfunction TooltipWrapperComponent_ng_container_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TooltipWrapperComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_0_1_Template, 1, 0, null, 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c0, ctx_r0.tooltip, ctx_r0.placement, ctx_r0.content));\n  }\n}\nfunction TooltipWrapperComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"title\", ctx_r0.tooltip)(\"data-tooltip-placement\", ctx_r0.placement);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.content, \" \");\n  }\n}\nconst _c1 = [\"tooltipTemplate\"];\nconst _c2 = [\"leftOuterSelectionBar\"];\nconst _c3 = [\"rightOuterSelectionBar\"];\nconst _c4 = [\"fullBar\"];\nconst _c5 = [\"selectionBar\"];\nconst _c6 = [\"minHandle\"];\nconst _c7 = [\"maxHandle\"];\nconst _c8 = [\"floorLabel\"];\nconst _c9 = [\"ceilLabel\"];\nconst _c10 = [\"minHandleLabel\"];\nconst _c11 = [\"maxHandleLabel\"];\nconst _c12 = [\"combinedLabel\"];\nconst _c13 = [\"ticksElement\"];\nconst _c14 = a0 => ({\n  \"ngx-slider-selected\": a0\n});\nfunction SliderComponent_span_28_ngx_slider_tooltip_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-slider-tooltip-wrapper\", 32);\n  }\n  if (rf & 2) {\n    const t_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"template\", ctx_r1.tooltipTemplate)(\"tooltip\", t_r1.valueTooltip)(\"placement\", t_r1.valueTooltipPlacement)(\"content\", t_r1.value);\n  }\n}\nfunction SliderComponent_span_28_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 33);\n  }\n  if (rf & 2) {\n    const t_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerText\", t_r1.legend);\n  }\n}\nfunction SliderComponent_span_28_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 34);\n  }\n  if (rf & 2) {\n    const t_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerHTML\", t_r1.legend, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction SliderComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵelement(1, \"ngx-slider-tooltip-wrapper\", 28);\n    i0.ɵɵtemplate(2, SliderComponent_span_28_ngx_slider_tooltip_wrapper_2_Template, 1, 4, \"ngx-slider-tooltip-wrapper\", 29)(3, SliderComponent_span_28_span_3_Template, 1, 1, \"span\", 30)(4, SliderComponent_span_28_span_4_Template, 1, 1, \"span\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c14, t_r1.selected))(\"ngStyle\", t_r1.style);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"template\", ctx_r1.tooltipTemplate)(\"tooltip\", t_r1.tooltip)(\"placement\", t_r1.tooltipPlacement);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", t_r1.value != null);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", t_r1.legend != null && ctx_r1.allowUnsafeHtmlInSlider === false);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", t_r1.legend != null && (ctx_r1.allowUnsafeHtmlInSlider == null || ctx_r1.allowUnsafeHtmlInSlider));\n  }\n}\nvar LabelType = /*#__PURE__*/function (LabelType) {\n  /** Label above low pointer */\n  LabelType[LabelType[\"Low\"] = 0] = \"Low\";\n  /** Label above high pointer */\n  LabelType[LabelType[\"High\"] = 1] = \"High\";\n  /** Label for minimum slider value */\n  LabelType[LabelType[\"Floor\"] = 2] = \"Floor\";\n  /** Label for maximum slider value */\n  LabelType[LabelType[\"Ceil\"] = 3] = \"Ceil\";\n  /** Label below legend tick */\n  LabelType[LabelType[\"TickValue\"] = 4] = \"TickValue\";\n  return LabelType;\n}(LabelType || {});\n/** Slider options */\nclass Options {\n  /** Minimum value for a slider.\n    Not applicable when using stepsArray. */\n  floor = 0;\n  /** Maximum value for a slider.\n    Not applicable when using stepsArray. */\n  ceil = null;\n  /** Step between each value.\n    Not applicable when using stepsArray. */\n  step = 1;\n  /** The minimum range authorized on the slider.\n    Applies to range slider only.\n    When using stepsArray, expressed as index into stepsArray. */\n  minRange = null;\n  /** The maximum range authorized on the slider.\n    Applies to range slider only.\n    When using stepsArray, expressed as index into stepsArray. */\n  maxRange = null;\n  /** Set to true to have a push behavior. When the min handle goes above the max,\n    the max is moved as well (and vice-versa). The range between min and max is\n    defined by the step option (defaults to 1) and can also be overriden by\n    the minRange option. Applies to range slider only. */\n  pushRange = false;\n  /** The minimum value authorized on the slider.\n    When using stepsArray, expressed as index into stepsArray. */\n  minLimit = null;\n  /** The maximum value authorized on the slider.\n    When using stepsArray, expressed as index into stepsArray. */\n  maxLimit = null;\n  /** Custom translate function. Use this if you want to translate values displayed\n      on the slider. */\n  translate = null;\n  /** Custom function for combining overlapping labels in range slider.\n      It takes the min and max values (already translated with translate fuction)\n      and should return how these two values should be combined.\n      If not provided, the default function will join the two values with\n      ' - ' as separator. */\n  combineLabels = null;\n  /** Use to display legend under ticks (thus, it needs to be used along with\n     showTicks or showTicksValues). The function will be called with each tick\n     value and returned content will be displayed under the tick as a legend.\n     If the returned value is null, then no legend is displayed under\n     the corresponding tick.You can also directly provide the legend values\n     in the stepsArray option. */\n  getLegend = null;\n  /** Use to display a custom legend of a stepItem from stepsArray.\n    It will be the same as getLegend but for stepsArray. */\n  getStepLegend = null;\n  /** If you want to display a slider with non linear/number steps.\n     Just pass an array with each slider value and that's it; the floor, ceil and step settings\n     of the slider will be computed automatically.\n     By default, the value model and valueHigh model values will be the value of the selected item\n     in the stepsArray.\n     They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n     option to true. */\n  stepsArray = null;\n  /** Set to true to bind the index of the selected item to value model and valueHigh model. */\n  bindIndexForStepsArray = false;\n  /** When set to true and using a range slider, the range can be dragged by the selection bar.\n    Applies to range slider only. */\n  draggableRange = false;\n  /** Same as draggableRange but the slider range can't be changed.\n    Applies to range slider only. */\n  draggableRangeOnly = false;\n  /** Set to true to always show the selection bar before the slider handle. */\n  showSelectionBar = false;\n  /** Set to true to always show the selection bar after the slider handle. */\n  showSelectionBarEnd = false;\n  /**  Set a number to draw the selection bar between this value and the slider handle.\n    When using stepsArray, expressed as index into stepsArray. */\n  showSelectionBarFromValue = null;\n  /**  Only for range slider. Set to true to visualize in different colour the areas\n    on the left/right (top/bottom for vertical range slider) of selection bar between the handles. */\n  showOuterSelectionBars = false;\n  /** Set to true to hide pointer labels */\n  hidePointerLabels = false;\n  /** Set to true to hide min / max labels  */\n  hideLimitLabels = false;\n  /** Set to false to disable the auto-hiding behavior of the limit labels. */\n  autoHideLimitLabels = true;\n  /** Set to true to make the slider read-only. */\n  readOnly = false;\n  /** Set to true to disable the slider. */\n  disabled = false;\n  /** Set to true to display a tick for each step of the slider. */\n  showTicks = false;\n  /** Set to true to display a tick and the step value for each step of the slider.. */\n  showTicksValues = false;\n  /* The step between each tick to display. If not set, the step value is used.\n    Not used when ticksArray is specified. */\n  tickStep = null;\n  /* The step between displaying each tick step value.\n    If not set, then tickStep or step is used, depending on which one is set. */\n  tickValueStep = null;\n  /** Use to display ticks at specific positions.\n    The array contains the index of the ticks that should be displayed.\n    For example, [0, 1, 5] will display a tick for the first, second and sixth values. */\n  ticksArray = null;\n  /** Used to display a tooltip when a tick is hovered.\n    Set to a function that returns the tooltip content for a given value. */\n  ticksTooltip = null;\n  /** Same as ticksTooltip but for ticks values. */\n  ticksValuesTooltip = null;\n  /** Set to true to display the slider vertically.\n    The slider will take the full height of its parent.\n    Changing this value at runtime is not currently supported. */\n  vertical = false;\n  /** Function that returns the current color of the selection bar.\n    If your color won't change, don't use this option but set it through CSS.\n    If the returned color depends on a model value (either value or valueHigh),\n    you should use the argument passed to the function.\n    Indeed, when the function is called, there is no certainty that the model\n    has already been updated.*/\n  getSelectionBarColor = null;\n  /** Function that returns the color of a tick. showTicks must be enabled. */\n  getTickColor = null;\n  /** Function that returns the current color of a pointer.\n    If your color won't change, don't use this option but set it through CSS.\n    If the returned color depends on a model value (either value or valueHigh),\n    you should use the argument passed to the function.\n    Indeed, when the function is called, there is no certainty that the model has already been updated.\n    To handle range slider pointers independently, you should evaluate pointerType within the given\n    function where \"min\" stands for value model and \"max\" for valueHigh model values. */\n  getPointerColor = null;\n  /** Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n    Left/bottom arrows: -1\n    Right/top arrows: +1\n    Page-down: -10%\n    Page-up: +10%\n    Home: minimum value\n    End: maximum value\n   */\n  keyboardSupport = true;\n  /** If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n    so that the slider is rendered properly and the events are handled correctly. */\n  scale = 1;\n  /** If you display the slider in an element that uses transform: rotate(90deg), set the rotate value to 90\n   so that the slider is rendered properly and the events are handled correctly. Value is in degrees. */\n  rotate = 0;\n  /** Set to true to force the value(s) to be rounded to the step, even when modified from the outside.\n    When set to false, if the model values are modified from outside the slider, they are not rounded\n    and can be between two steps. */\n  enforceStep = true;\n  /** Set to true to force the value(s) to be normalised to allowed range (floor to ceil), even when modified from the outside.\n    When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n    the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation. */\n  enforceRange = true;\n  /** Set to true to force the value(s) to be rounded to the nearest step value, even when modified from the outside.\n    When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n    the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation. */\n  enforceStepsArray = true;\n  /** Set to true to prevent to user from switching the min and max handles. Applies to range slider only. */\n  noSwitching = false;\n  /** Set to true to only bind events on slider handles. */\n  onlyBindHandles = false;\n  /** Set to true to show graphs right to left.\n    If vertical is true it will be from top to bottom and left / right arrow functions reversed. */\n  rightToLeft = false;\n  /** Set to true to reverse keyboard navigation:\n    Right/top arrows: -1\n    Left/bottom arrows: +1\n    Page-up: -10%\n    Page-down: +10%\n    End: minimum value\n    Home: maximum value\n   */\n  reversedControls = false;\n  /** Set to true to keep the slider labels inside the slider bounds. */\n  boundPointerLabels = true;\n  /** Set to true to use a logarithmic scale to display the slider.  */\n  logScale = false;\n  /** Function that returns the position on the slider for a given value.\n    The position must be a percentage between 0 and 1.\n    The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly. */\n  customValueToPosition = null;\n  /** Function that returns the value for a given position on the slider.\n    The position is a percentage between 0 and 1.\n    The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly. */\n  customPositionToValue = null;\n  /** Precision limit for calculated values.\n    Values used in calculations will be rounded to this number of significant digits\n    to prevent accumulating small floating-point errors. */\n  precisionLimit = 12;\n  /** Use to display the selection bar as a gradient.\n    The given object must contain from and to properties which are colors. */\n  selectionBarGradient = null;\n  /** Use to add a label directly to the slider for accessibility. Adds the aria-label attribute. */\n  ariaLabel = \"ngx-slider\";\n  /** Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n    Adds the aria-labelledby attribute. */\n  ariaLabelledBy = null;\n  /** Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute. */\n  ariaLabelHigh = \"ngx-slider-max\";\n  /** Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n    Adds the aria-labelledby attribute. */\n  ariaLabelledByHigh = null;\n  /** Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle */\n  handleDimension = null;\n  /** Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar */\n  barDimension = null;\n  /** Enable/disable CSS animations */\n  animate = true;\n  /** Enable/disable CSS animations while moving the slider */\n  animateOnMove = false;\n}\nconst AllowUnsafeHtmlInSlider = new InjectionToken(\"AllowUnsafeHtmlInSlider\");\n\n/** Pointer type */\nvar PointerType = /*#__PURE__*/function (PointerType) {\n  /** Low pointer */\n  PointerType[PointerType[\"Min\"] = 0] = \"Min\";\n  /** High pointer */\n  PointerType[PointerType[\"Max\"] = 1] = \"Max\";\n  return PointerType;\n}(PointerType || {});\nclass ChangeContext {\n  value;\n  highValue;\n  pointerType;\n}\n\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\nclass ValueHelper {\n  static isNullOrUndefined(value) {\n    return value === undefined || value === null;\n  }\n  static areArraysEqual(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (let i = 0; i < array1.length; ++i) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  static linearValueToPosition(val, minVal, maxVal) {\n    const range = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n  static logValueToPosition(val, minVal, maxVal) {\n    val = Math.log(val);\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    const range = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n  static linearPositionToValue(percent, minVal, maxVal) {\n    return percent * (maxVal - minVal) + minVal;\n  }\n  static logPositionToValue(percent, minVal, maxVal) {\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    const value = percent * (maxVal - minVal) + minVal;\n    return Math.exp(value);\n  }\n  static findStepIndex(modelValue, stepsArray) {\n    const differences = stepsArray.map(step => Math.abs(modelValue - step.value));\n    let minDifferenceIndex = 0;\n    for (let index = 0; index < stepsArray.length; index++) {\n      if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n        minDifferenceIndex = index;\n      }\n    }\n    return minDifferenceIndex;\n  }\n}\n\n/** Helper with compatibility functions to support different browsers */\nclass CompatibilityHelper {\n  /** Workaround for TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari) */\n  static isTouchEvent(event) {\n    if (window.TouchEvent !== undefined) {\n      return event instanceof TouchEvent;\n    }\n    return event.touches !== undefined;\n  }\n  /** Detect presence of ResizeObserver API */\n  static isResizeObserverAvailable() {\n    return window.ResizeObserver !== undefined;\n  }\n}\n\n/** Helper with mathematical functions */\nclass MathHelper {\n  /* Round numbers to a given number of significant digits */\n  static roundToPrecisionLimit(value, precisionLimit) {\n    return +value.toPrecision(precisionLimit);\n  }\n  static isModuloWithinPrecisionLimit(value, modulo, precisionLimit) {\n    const limit = Math.pow(10, -precisionLimit);\n    return Math.abs(value % modulo) <= limit || Math.abs(Math.abs(value % modulo) - modulo) <= limit;\n  }\n  static clampToRange(value, floor, ceil) {\n    return Math.min(Math.max(value, floor), ceil);\n  }\n}\nclass EventListener {\n  eventName = null;\n  events = null;\n  eventsSubscription = null;\n  teardownCallback = null;\n}\n\n/**\n * Helper class to attach event listeners to DOM elements with debounce support using rxjs\n */\nclass EventListenerHelper {\n  renderer;\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  attachPassiveEventListener(nativeElement, eventName, callback, throttleInterval) {\n    // Only use passive event listeners if the browser supports it\n    if (supportsPassiveEvents !== true) {\n      return this.attachEventListener(nativeElement, eventName, callback, throttleInterval);\n    }\n    // Angular doesn't support passive event handlers (yet), so we need to roll our own code using native functions\n    const listener = new EventListener();\n    listener.eventName = eventName;\n    listener.events = new Subject();\n    const observerCallback = event => {\n      listener.events.next(event);\n    };\n    nativeElement.addEventListener(eventName, observerCallback, {\n      passive: true,\n      capture: false\n    });\n    listener.teardownCallback = () => {\n      nativeElement.removeEventListener(eventName, observerCallback, {\n        passive: true,\n        capture: false\n      });\n    };\n    listener.eventsSubscription = listener.events.pipe(!ValueHelper.isNullOrUndefined(throttleInterval) ? throttleTime(throttleInterval, undefined, {\n      leading: true,\n      trailing: true\n    }) : tap(() => {}) // no-op\n    ).subscribe(event => {\n      callback(event);\n    });\n    return listener;\n  }\n  detachEventListener(eventListener) {\n    if (!ValueHelper.isNullOrUndefined(eventListener.eventsSubscription)) {\n      eventListener.eventsSubscription.unsubscribe();\n      eventListener.eventsSubscription = null;\n    }\n    if (!ValueHelper.isNullOrUndefined(eventListener.events)) {\n      eventListener.events.complete();\n      eventListener.events = null;\n    }\n    if (!ValueHelper.isNullOrUndefined(eventListener.teardownCallback)) {\n      eventListener.teardownCallback();\n      eventListener.teardownCallback = null;\n    }\n  }\n  attachEventListener(nativeElement, eventName, callback, throttleInterval) {\n    const listener = new EventListener();\n    listener.eventName = eventName;\n    listener.events = new Subject();\n    const observerCallback = event => {\n      listener.events.next(event);\n    };\n    listener.teardownCallback = this.renderer.listen(nativeElement, eventName, observerCallback);\n    listener.eventsSubscription = listener.events.pipe(!ValueHelper.isNullOrUndefined(throttleInterval) ? throttleTime(throttleInterval, undefined, {\n      leading: true,\n      trailing: true\n    }) : tap(() => {}) // no-op\n    ).subscribe(event => {\n      callback(event);\n    });\n    return listener;\n  }\n}\nlet SliderElementDirective = /*#__PURE__*/(() => {\n  class SliderElementDirective {\n    elemRef;\n    renderer;\n    changeDetectionRef;\n    _position = 0;\n    get position() {\n      return this._position;\n    }\n    _dimension = 0;\n    get dimension() {\n      return this._dimension;\n    }\n    _alwaysHide = false;\n    get alwaysHide() {\n      return this._alwaysHide;\n    }\n    _vertical = false;\n    get vertical() {\n      return this._vertical;\n    }\n    _scale = 1;\n    get scale() {\n      return this._scale;\n    }\n    _rotate = 0;\n    get rotate() {\n      return this._rotate;\n    }\n    opacity = 1;\n    visibility = 'visible';\n    left = '';\n    bottom = '';\n    height = '';\n    width = '';\n    transform = '';\n    eventListenerHelper;\n    eventListeners = [];\n    constructor(elemRef, renderer, changeDetectionRef) {\n      this.elemRef = elemRef;\n      this.renderer = renderer;\n      this.changeDetectionRef = changeDetectionRef;\n      this.eventListenerHelper = new EventListenerHelper(this.renderer);\n    }\n    setAlwaysHide(hide) {\n      this._alwaysHide = hide;\n      if (hide) {\n        this.visibility = 'hidden';\n      } else {\n        this.visibility = 'visible';\n      }\n    }\n    hide() {\n      this.opacity = 0;\n    }\n    show() {\n      if (this.alwaysHide) {\n        return;\n      }\n      this.opacity = 1;\n    }\n    isVisible() {\n      if (this.alwaysHide) {\n        return false;\n      }\n      return this.opacity !== 0;\n    }\n    setVertical(vertical) {\n      this._vertical = vertical;\n      if (this._vertical) {\n        this.left = '';\n        this.width = '';\n      } else {\n        this.bottom = '';\n        this.height = '';\n      }\n    }\n    setScale(scale) {\n      this._scale = scale;\n    }\n    setRotate(rotate) {\n      this._rotate = rotate;\n      this.transform = 'rotate(' + rotate + 'deg)';\n    }\n    getRotate() {\n      return this._rotate;\n    }\n    // Set element left/top position depending on whether slider is horizontal or vertical\n    setPosition(pos) {\n      if (this._position !== pos && !this.isRefDestroyed()) {\n        this.changeDetectionRef.markForCheck();\n      }\n      this._position = pos;\n      if (this._vertical) {\n        this.bottom = Math.round(pos) + 'px';\n      } else {\n        this.left = Math.round(pos) + 'px';\n      }\n    }\n    // Calculate element's width/height depending on whether slider is horizontal or vertical\n    calculateDimension() {\n      const val = this.getBoundingClientRect();\n      if (this.vertical) {\n        this._dimension = (val.bottom - val.top) * this.scale;\n      } else {\n        this._dimension = (val.right - val.left) * this.scale;\n      }\n    }\n    // Set element width/height depending on whether slider is horizontal or vertical\n    setDimension(dim) {\n      if (this._dimension !== dim && !this.isRefDestroyed()) {\n        this.changeDetectionRef.markForCheck();\n      }\n      this._dimension = dim;\n      if (this._vertical) {\n        this.height = Math.round(dim) + 'px';\n      } else {\n        this.width = Math.round(dim) + 'px';\n      }\n    }\n    getBoundingClientRect() {\n      return this.elemRef.nativeElement.getBoundingClientRect();\n    }\n    on(eventName, callback, debounceInterval) {\n      const listener = this.eventListenerHelper.attachEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n      this.eventListeners.push(listener);\n    }\n    onPassive(eventName, callback, debounceInterval) {\n      const listener = this.eventListenerHelper.attachPassiveEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n      this.eventListeners.push(listener);\n    }\n    off(eventName) {\n      let listenersToKeep;\n      let listenersToRemove;\n      if (!ValueHelper.isNullOrUndefined(eventName)) {\n        listenersToKeep = this.eventListeners.filter(event => event.eventName !== eventName);\n        listenersToRemove = this.eventListeners.filter(event => event.eventName === eventName);\n      } else {\n        listenersToKeep = [];\n        listenersToRemove = this.eventListeners;\n      }\n      for (const listener of listenersToRemove) {\n        this.eventListenerHelper.detachEventListener(listener);\n      }\n      this.eventListeners = listenersToKeep;\n    }\n    isRefDestroyed() {\n      return ValueHelper.isNullOrUndefined(this.changeDetectionRef) || this.changeDetectionRef['destroyed'];\n    }\n    static ɵfac = function SliderElementDirective_Factory(t) {\n      return new (t || SliderElementDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SliderElementDirective,\n      selectors: [[\"\", \"ngxSliderElement\", \"\"]],\n      hostVars: 14,\n      hostBindings: function SliderElementDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"opacity\", ctx.opacity)(\"visibility\", ctx.visibility)(\"left\", ctx.left)(\"bottom\", ctx.bottom)(\"height\", ctx.height)(\"width\", ctx.width)(\"transform\", ctx.transform);\n        }\n      }\n    });\n  }\n  return SliderElementDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SliderHandleDirective = /*#__PURE__*/(() => {\n  class SliderHandleDirective extends SliderElementDirective {\n    active = false;\n    role = \"\";\n    tabindex = \"\";\n    ariaOrientation = \"\";\n    ariaLabel = \"\";\n    ariaLabelledBy = \"\";\n    ariaValueNow = \"\";\n    ariaValueText = \"\";\n    ariaValueMin = \"\";\n    ariaValueMax = \"\";\n    focus() {\n      this.elemRef.nativeElement.focus();\n    }\n    constructor(elemRef, renderer, changeDetectionRef) {\n      super(elemRef, renderer, changeDetectionRef);\n    }\n    static ɵfac = function SliderHandleDirective_Factory(t) {\n      return new (t || SliderHandleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SliderHandleDirective,\n      selectors: [[\"\", \"ngxSliderHandle\", \"\"]],\n      hostVars: 11,\n      hostBindings: function SliderHandleDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex)(\"aria-orientation\", ctx.ariaOrientation)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-valuenow\", ctx.ariaValueNow)(\"aria-valuetext\", ctx.ariaValueText)(\"aria-valuemin\", ctx.ariaValueMin)(\"aria-valuemax\", ctx.ariaValueMax);\n          i0.ɵɵclassProp(\"ngx-slider-active\", ctx.active);\n        }\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return SliderHandleDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SliderLabelDirective = /*#__PURE__*/(() => {\n  class SliderLabelDirective extends SliderElementDirective {\n    allowUnsafeHtmlInSlider;\n    _value = null;\n    get value() {\n      return this._value;\n    }\n    constructor(elemRef, renderer, changeDetectionRef, allowUnsafeHtmlInSlider) {\n      super(elemRef, renderer, changeDetectionRef);\n      this.allowUnsafeHtmlInSlider = allowUnsafeHtmlInSlider;\n    }\n    setValue(value) {\n      let recalculateDimension = false;\n      if (!this.alwaysHide && (ValueHelper.isNullOrUndefined(this.value) || this.value.length !== value.length || this.value.length > 0 && this.dimension === 0)) {\n        recalculateDimension = true;\n      }\n      this._value = value;\n      if (this.allowUnsafeHtmlInSlider === false) {\n        this.elemRef.nativeElement.innerText = value;\n      } else {\n        this.elemRef.nativeElement.innerHTML = value;\n      }\n      // Update dimension only when length of the label have changed\n      if (recalculateDimension) {\n        this.calculateDimension();\n      }\n    }\n    static ɵfac = function SliderLabelDirective_Factory(t) {\n      return new (t || SliderLabelDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(AllowUnsafeHtmlInSlider, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SliderLabelDirective,\n      selectors: [[\"\", \"ngxSliderLabel\", \"\"]],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return SliderLabelDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TooltipWrapperComponent = /*#__PURE__*/(() => {\n  class TooltipWrapperComponent {\n    template;\n    tooltip;\n    placement;\n    content;\n    static ɵfac = function TooltipWrapperComponent_Factory(t) {\n      return new (t || TooltipWrapperComponent)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TooltipWrapperComponent,\n      selectors: [[\"ngx-slider-tooltip-wrapper\"]],\n      inputs: {\n        template: \"template\",\n        tooltip: \"tooltip\",\n        placement: \"placement\",\n        content: \"content\"\n      },\n      decls: 2,\n      vars: 2,\n      consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ngx-slider-inner-tooltip\"]],\n      template: function TooltipWrapperComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_Template, 2, 6, \"ng-container\", 0)(1, TooltipWrapperComponent_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.template);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.template);\n        }\n      },\n      dependencies: [i1.NgIf, i1.NgTemplateOutlet],\n      styles: [\".ngx-slider-inner-tooltip[_ngcontent-%COMP%]{height:100%}\"]\n    });\n  }\n  return TooltipWrapperComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass Tick {\n  selected = false;\n  style = {};\n  tooltip = null;\n  tooltipPlacement = null;\n  value = null;\n  valueTooltip = null;\n  valueTooltipPlacement = null;\n  legend = null;\n}\nclass Dragging {\n  active = false;\n  value = 0;\n  difference = 0;\n  position = 0;\n  lowLimit = 0;\n  highLimit = 0;\n}\nclass ModelValues {\n  value;\n  highValue;\n  static compare(x, y) {\n    if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    return x.value === y.value && x.highValue === y.highValue;\n  }\n}\nclass ModelChange extends ModelValues {\n  // Flag used to by-pass distinctUntilChanged() filter on input values\n  // (sometimes there is a need to pass values through even though the model values have not changed)\n  forceChange;\n  static compare(x, y) {\n    if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n    return x.value === y.value && x.highValue === y.highValue && x.forceChange === y.forceChange;\n  }\n}\nclass InputModelChange extends ModelChange {\n  internalChange;\n}\nclass OutputModelChange extends ModelChange {\n  userEventInitiated;\n}\nconst NGX_SLIDER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => SliderComponent),\n  multi: true\n};\nlet SliderComponent = /*#__PURE__*/(() => {\n  class SliderComponent {\n    renderer;\n    elementRef;\n    changeDetectionRef;\n    zone;\n    allowUnsafeHtmlInSlider;\n    // Model for low value of slider. For simple slider, this is the only input. For range slider, this is the low value.\n    value = null;\n    // Output for low value slider to support two-way bindings\n    valueChange = new EventEmitter();\n    // Model for high value of slider. Not used in simple slider. For range slider, this is the high value.\n    highValue = null;\n    // Output for high value slider to support two-way bindings\n    highValueChange = new EventEmitter();\n    // An object with all the other options of the slider.\n    // Each option can be updated at runtime and the slider will automatically be re-rendered.\n    options = new Options();\n    // Event emitted when user starts interaction with the slider\n    userChangeStart = new EventEmitter();\n    // Event emitted on each change coming from user interaction\n    userChange = new EventEmitter();\n    // Event emitted when user finishes interaction with the slider\n    userChangeEnd = new EventEmitter();\n    manualRefreshSubscription;\n    // Input event that triggers slider refresh (re-positioning of slider elements)\n    set manualRefresh(manualRefresh) {\n      this.unsubscribeManualRefresh();\n      this.manualRefreshSubscription = manualRefresh.subscribe(() => {\n        setTimeout(() => this.calculateViewDimensionsAndDetectChanges());\n      });\n    }\n    triggerFocusSubscription;\n    // Input event that triggers setting focus on given slider handle\n    set triggerFocus(triggerFocus) {\n      this.unsubscribeTriggerFocus();\n      this.triggerFocusSubscription = triggerFocus.subscribe(pointerType => {\n        this.focusPointer(pointerType);\n      });\n    }\n    // Slider type, true means range slider\n    get range() {\n      return !ValueHelper.isNullOrUndefined(this.value) && !ValueHelper.isNullOrUndefined(this.highValue);\n    }\n    // Set to true if init method already executed\n    initHasRun = false;\n    // Changes in model inputs are passed through this subject\n    // These are all changes coming in from outside the component through input bindings or reactive form inputs\n    inputModelChangeSubject = new Subject();\n    inputModelChangeSubscription = null;\n    // Changes to model outputs are passed through this subject\n    // These are all changes that need to be communicated to output emitters and registered callbacks\n    outputModelChangeSubject = new Subject();\n    outputModelChangeSubscription = null;\n    // Low value synced to model low value\n    viewLowValue = null;\n    // High value synced to model high value\n    viewHighValue = null;\n    // Options synced to model options, based on defaults\n    viewOptions = new Options();\n    // Half of the width or height of the slider handles\n    handleHalfDimension = 0;\n    // Maximum position the slider handle can have\n    maxHandlePosition = 0;\n    // Which handle is currently tracked for move events\n    currentTrackingPointer = null;\n    // Internal variable to keep track of the focus element\n    currentFocusPointer = null;\n    // Used to call onStart on the first keydown event\n    firstKeyDown = false;\n    // Current touch id of touch event being handled\n    touchId = null;\n    // Values recorded when first dragging the bar\n    dragging = new Dragging();\n    /* Slider DOM elements */\n    // Left selection bar outside two handles\n    leftOuterSelectionBarElement;\n    // Right selection bar outside two handles\n    rightOuterSelectionBarElement;\n    // The whole slider bar\n    fullBarElement;\n    // Highlight between two handles\n    selectionBarElement;\n    // Left slider handle\n    minHandleElement;\n    // Right slider handle\n    maxHandleElement;\n    // Floor label\n    floorLabelElement;\n    // Ceiling label\n    ceilLabelElement;\n    // Label above the low value\n    minHandleLabelElement;\n    // Label above the high value\n    maxHandleLabelElement;\n    // Combined label\n    combinedLabelElement;\n    // The ticks\n    ticksElement;\n    // Optional custom template for displaying tooltips\n    tooltipTemplate;\n    // Host element class bindings\n    sliderElementVerticalClass = false;\n    sliderElementAnimateClass = false;\n    sliderElementWithLegendClass = false;\n    sliderElementDisabledAttr = null;\n    sliderElementAriaLabel = \"ngx-slider\";\n    // CSS styles and class flags\n    barStyle = {};\n    minPointerStyle = {};\n    maxPointerStyle = {};\n    fullBarTransparentClass = false;\n    selectionBarDraggableClass = false;\n    ticksUnderValuesClass = false;\n    // Whether to show/hide ticks\n    get showTicks() {\n      return this.viewOptions.showTicks;\n    }\n    /* If tickStep is set or ticksArray is specified.\n       In this case, ticks values should be displayed below the slider. */\n    intermediateTicks = false;\n    // Ticks array as displayed in view\n    ticks = [];\n    // Event listeners\n    eventListenerHelper = null;\n    onMoveEventListener = null;\n    onEndEventListener = null;\n    // Whether currently moving the slider (between onStart() and onEnd())\n    moving = false;\n    // Observer for slider element resize events\n    resizeObserver = null;\n    // Callbacks for reactive forms support\n    onTouchedCallback = null;\n    onChangeCallback = null;\n    constructor(renderer, elementRef, changeDetectionRef, zone, allowUnsafeHtmlInSlider) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.changeDetectionRef = changeDetectionRef;\n      this.zone = zone;\n      this.allowUnsafeHtmlInSlider = allowUnsafeHtmlInSlider;\n      this.eventListenerHelper = new EventListenerHelper(this.renderer);\n    }\n    // OnInit interface\n    ngOnInit() {\n      this.viewOptions = new Options();\n      Object.assign(this.viewOptions, this.options);\n      // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n      // because these two settings are set through @HostBinding and Angular change detection\n      // mechanism doesn't like them changing in ngAfterViewInit()\n      this.updateDisabledState();\n      this.updateVerticalState();\n      this.updateAriaLabel();\n    }\n    // AfterViewInit interface\n    ngAfterViewInit() {\n      this.applyOptions();\n      this.subscribeInputModelChangeSubject();\n      this.subscribeOutputModelChangeSubject();\n      // Once we apply options, we need to normalise model values for the first time\n      this.renormaliseModelValues();\n      this.viewLowValue = this.modelValueToViewValue(this.value);\n      if (this.range) {\n        this.viewHighValue = this.modelValueToViewValue(this.highValue);\n      } else {\n        this.viewHighValue = null;\n      }\n      this.updateVerticalState(); // need to run this again to cover changes to slider elements\n      this.manageElementsStyle();\n      this.updateDisabledState();\n      this.calculateViewDimensions();\n      this.addAccessibility();\n      this.updateCeilLabel();\n      this.updateFloorLabel();\n      this.initHandles();\n      this.manageEventsBindings();\n      this.updateAriaLabel();\n      this.subscribeResizeObserver();\n      this.initHasRun = true;\n      // Run change detection manually to resolve some issues when init procedure changes values used in the view\n      if (!this.isRefDestroyed()) {\n        this.changeDetectionRef.detectChanges();\n      }\n    }\n    // OnChanges interface\n    ngOnChanges(changes) {\n      // Always apply options first\n      if (!ValueHelper.isNullOrUndefined(changes.options) && JSON.stringify(changes.options.previousValue) !== JSON.stringify(changes.options.currentValue)) {\n        this.onChangeOptions();\n      }\n      // Then value changes\n      if (!ValueHelper.isNullOrUndefined(changes.value) || !ValueHelper.isNullOrUndefined(changes.highValue)) {\n        this.inputModelChangeSubject.next({\n          value: this.value,\n          highValue: this.highValue,\n          forceChange: false,\n          internalChange: false\n        });\n      }\n    }\n    // OnDestroy interface\n    ngOnDestroy() {\n      this.unbindEvents();\n      this.unsubscribeResizeObserver();\n      this.unsubscribeInputModelChangeSubject();\n      this.unsubscribeOutputModelChangeSubject();\n      this.unsubscribeManualRefresh();\n      this.unsubscribeTriggerFocus();\n    }\n    // ControlValueAccessor interface\n    writeValue(obj) {\n      if (obj instanceof Array) {\n        this.value = obj[0];\n        this.highValue = obj[1];\n      } else {\n        this.value = obj;\n      }\n      // ngOnChanges() is not called in this instance, so we need to communicate the change manually\n      this.inputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: false,\n        internalChange: false\n      });\n    }\n    // ControlValueAccessor interface\n    registerOnChange(onChangeCallback) {\n      this.onChangeCallback = onChangeCallback;\n    }\n    // ControlValueAccessor interface\n    registerOnTouched(onTouchedCallback) {\n      this.onTouchedCallback = onTouchedCallback;\n    }\n    // ControlValueAccessor interface\n    setDisabledState(isDisabled) {\n      this.viewOptions.disabled = isDisabled;\n      this.updateDisabledState();\n    }\n    setAriaLabel(ariaLabel) {\n      this.viewOptions.ariaLabel = ariaLabel;\n      this.updateAriaLabel();\n    }\n    onResize(event) {\n      this.calculateViewDimensionsAndDetectChanges();\n    }\n    subscribeInputModelChangeSubject() {\n      this.inputModelChangeSubscription = this.inputModelChangeSubject.pipe(distinctUntilChanged(ModelChange.compare),\n      // Hack to reset the status of the distinctUntilChanged() - if a \"fake\" event comes through with forceChange=true,\n      // we forcefully by-pass distinctUntilChanged(), but otherwise drop the event\n      filter(modelChange => !modelChange.forceChange && !modelChange.internalChange)).subscribe(modelChange => this.applyInputModelChange(modelChange));\n    }\n    subscribeOutputModelChangeSubject() {\n      this.outputModelChangeSubscription = this.outputModelChangeSubject.pipe(distinctUntilChanged(ModelChange.compare)).subscribe(modelChange => this.publishOutputModelChange(modelChange));\n    }\n    subscribeResizeObserver() {\n      if (CompatibilityHelper.isResizeObserverAvailable()) {\n        this.resizeObserver = new ResizeObserver(() => this.calculateViewDimensionsAndDetectChanges());\n        this.resizeObserver.observe(this.elementRef.nativeElement);\n      }\n    }\n    unsubscribeResizeObserver() {\n      if (CompatibilityHelper.isResizeObserverAvailable() && this.resizeObserver !== null) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n    unsubscribeOnMove() {\n      if (!ValueHelper.isNullOrUndefined(this.onMoveEventListener)) {\n        this.eventListenerHelper.detachEventListener(this.onMoveEventListener);\n        this.onMoveEventListener = null;\n      }\n    }\n    unsubscribeOnEnd() {\n      if (!ValueHelper.isNullOrUndefined(this.onEndEventListener)) {\n        this.eventListenerHelper.detachEventListener(this.onEndEventListener);\n        this.onEndEventListener = null;\n      }\n    }\n    unsubscribeInputModelChangeSubject() {\n      if (!ValueHelper.isNullOrUndefined(this.inputModelChangeSubscription)) {\n        this.inputModelChangeSubscription.unsubscribe();\n        this.inputModelChangeSubscription = null;\n      }\n    }\n    unsubscribeOutputModelChangeSubject() {\n      if (!ValueHelper.isNullOrUndefined(this.outputModelChangeSubscription)) {\n        this.outputModelChangeSubscription.unsubscribe();\n        this.outputModelChangeSubscription = null;\n      }\n    }\n    unsubscribeManualRefresh() {\n      if (!ValueHelper.isNullOrUndefined(this.manualRefreshSubscription)) {\n        this.manualRefreshSubscription.unsubscribe();\n        this.manualRefreshSubscription = null;\n      }\n    }\n    unsubscribeTriggerFocus() {\n      if (!ValueHelper.isNullOrUndefined(this.triggerFocusSubscription)) {\n        this.triggerFocusSubscription.unsubscribe();\n        this.triggerFocusSubscription = null;\n      }\n    }\n    getPointerElement(pointerType) {\n      if (pointerType === PointerType.Min) {\n        return this.minHandleElement;\n      } else if (pointerType === PointerType.Max) {\n        return this.maxHandleElement;\n      }\n      return null;\n    }\n    getCurrentTrackingValue() {\n      if (this.currentTrackingPointer === PointerType.Min) {\n        return this.viewLowValue;\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        return this.viewHighValue;\n      }\n      return null;\n    }\n    modelValueToViewValue(modelValue) {\n      if (ValueHelper.isNullOrUndefined(modelValue)) {\n        return NaN;\n      }\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n        return ValueHelper.findStepIndex(+modelValue, this.viewOptions.stepsArray);\n      }\n      return +modelValue;\n    }\n    viewValueToModelValue(viewValue) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n        return this.getStepValue(viewValue);\n      }\n      return viewValue;\n    }\n    getStepValue(sliderValue) {\n      const step = this.viewOptions.stepsArray[sliderValue];\n      return !ValueHelper.isNullOrUndefined(step) ? step.value : NaN;\n    }\n    applyViewChange() {\n      this.value = this.viewValueToModelValue(this.viewLowValue);\n      if (this.range) {\n        this.highValue = this.viewValueToModelValue(this.viewHighValue);\n      }\n      this.outputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        userEventInitiated: true,\n        forceChange: false\n      });\n      // At this point all changes are applied and outputs are emitted, so we should be done.\n      // However, input changes are communicated in different stream and we need to be ready to\n      // act on the next input change even if it is exactly the same as last input change.\n      // Therefore, we send a special event to reset the stream.\n      this.inputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: false,\n        internalChange: true\n      });\n    }\n    // Apply model change to the slider view\n    applyInputModelChange(modelChange) {\n      const normalisedModelChange = this.normaliseModelValues(modelChange);\n      // If normalised model change is different, apply the change to the model values\n      const normalisationChange = !ModelValues.compare(modelChange, normalisedModelChange);\n      if (normalisationChange) {\n        this.value = normalisedModelChange.value;\n        this.highValue = normalisedModelChange.highValue;\n      }\n      this.viewLowValue = this.modelValueToViewValue(normalisedModelChange.value);\n      if (this.range) {\n        this.viewHighValue = this.modelValueToViewValue(normalisedModelChange.highValue);\n      } else {\n        this.viewHighValue = null;\n      }\n      this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n      if (this.range) {\n        this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n      }\n      this.updateSelectionBar();\n      this.updateTicksScale();\n      this.updateAriaAttributes();\n      if (this.range) {\n        this.updateCombinedLabel();\n      }\n      // At the end, we need to communicate the model change to the outputs as well\n      // Normalisation changes are also always forced out to ensure that subscribers always end up in correct state\n      this.outputModelChangeSubject.next({\n        value: normalisedModelChange.value,\n        highValue: normalisedModelChange.highValue,\n        forceChange: normalisationChange,\n        userEventInitiated: false\n      });\n    }\n    // Publish model change to output event emitters and registered callbacks\n    publishOutputModelChange(modelChange) {\n      const emitOutputs = () => {\n        this.valueChange.emit(modelChange.value);\n        if (this.range) {\n          this.highValueChange.emit(modelChange.highValue);\n        }\n        if (!ValueHelper.isNullOrUndefined(this.onChangeCallback)) {\n          if (this.range) {\n            this.onChangeCallback([modelChange.value, modelChange.highValue]);\n          } else {\n            this.onChangeCallback(modelChange.value);\n          }\n        }\n        if (!ValueHelper.isNullOrUndefined(this.onTouchedCallback)) {\n          if (this.range) {\n            this.onTouchedCallback([modelChange.value, modelChange.highValue]);\n          } else {\n            this.onTouchedCallback(modelChange.value);\n          }\n        }\n      };\n      if (modelChange.userEventInitiated) {\n        // If this change was initiated by a user event, we can emit outputs in the same tick\n        emitOutputs();\n        this.userChange.emit(this.getChangeContext());\n      } else {\n        // But, if the change was initated by something else like a change in input bindings,\n        // we need to wait until next tick to emit the outputs to keep Angular change detection happy\n        setTimeout(() => {\n          emitOutputs();\n        });\n      }\n    }\n    normaliseModelValues(input) {\n      const normalisedInput = new ModelValues();\n      normalisedInput.value = input.value;\n      normalisedInput.highValue = input.highValue;\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n        // When using steps array, only round to nearest step in the array\n        // No other enforcement can be done, as the step array may be out of order, and that is perfectly fine\n        if (this.viewOptions.enforceStepsArray) {\n          const valueIndex = ValueHelper.findStepIndex(normalisedInput.value, this.viewOptions.stepsArray);\n          normalisedInput.value = this.viewOptions.stepsArray[valueIndex].value;\n          if (this.range) {\n            const highValueIndex = ValueHelper.findStepIndex(normalisedInput.highValue, this.viewOptions.stepsArray);\n            normalisedInput.highValue = this.viewOptions.stepsArray[highValueIndex].value;\n          }\n        }\n        return normalisedInput;\n      }\n      if (this.viewOptions.enforceStep) {\n        normalisedInput.value = this.roundStep(normalisedInput.value);\n        if (this.range) {\n          normalisedInput.highValue = this.roundStep(normalisedInput.highValue);\n        }\n      }\n      if (this.viewOptions.enforceRange) {\n        normalisedInput.value = MathHelper.clampToRange(normalisedInput.value, this.viewOptions.floor, this.viewOptions.ceil);\n        if (this.range) {\n          normalisedInput.highValue = MathHelper.clampToRange(normalisedInput.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n        }\n        // Make sure that range slider invariant (value <= highValue) is always satisfied\n        if (this.range && input.value > input.highValue) {\n          // We know that both values are now clamped correctly, they may just be in the wrong order\n          // So the easy solution is to swap them... except swapping is sometimes disabled in options, so we make the two values the same\n          if (this.viewOptions.noSwitching) {\n            normalisedInput.value = normalisedInput.highValue;\n          } else {\n            const tempValue = input.value;\n            normalisedInput.value = input.highValue;\n            normalisedInput.highValue = tempValue;\n          }\n        }\n      }\n      return normalisedInput;\n    }\n    renormaliseModelValues() {\n      const previousModelValues = {\n        value: this.value,\n        highValue: this.highValue\n      };\n      const normalisedModelValues = this.normaliseModelValues(previousModelValues);\n      if (!ModelValues.compare(normalisedModelValues, previousModelValues)) {\n        this.value = normalisedModelValues.value;\n        this.highValue = normalisedModelValues.highValue;\n        this.outputModelChangeSubject.next({\n          value: this.value,\n          highValue: this.highValue,\n          forceChange: true,\n          userEventInitiated: false\n        });\n      }\n    }\n    onChangeOptions() {\n      if (!this.initHasRun) {\n        return;\n      }\n      const previousOptionsInfluencingEventBindings = this.getOptionsInfluencingEventBindings(this.viewOptions);\n      this.applyOptions();\n      const newOptionsInfluencingEventBindings = this.getOptionsInfluencingEventBindings(this.viewOptions);\n      // Avoid re-binding events in case nothing changes that can influence it\n      // It makes it possible to change options while dragging the slider\n      const rebindEvents = !ValueHelper.areArraysEqual(previousOptionsInfluencingEventBindings, newOptionsInfluencingEventBindings);\n      // With new options, we need to re-normalise model values if necessary\n      this.renormaliseModelValues();\n      this.viewLowValue = this.modelValueToViewValue(this.value);\n      if (this.range) {\n        this.viewHighValue = this.modelValueToViewValue(this.highValue);\n      } else {\n        this.viewHighValue = null;\n      }\n      this.resetSlider(rebindEvents);\n    }\n    // Read the user options and apply them to the slider model\n    applyOptions() {\n      this.viewOptions = new Options();\n      Object.assign(this.viewOptions, this.options);\n      this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n      this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n      if (this.viewOptions.draggableRangeOnly) {\n        this.viewOptions.draggableRange = true;\n      }\n      this.viewOptions.showTicks = this.viewOptions.showTicks || this.viewOptions.showTicksValues || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray);\n      if (this.viewOptions.showTicks && (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray))) {\n        this.intermediateTicks = true;\n      }\n      this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar || this.viewOptions.showSelectionBarEnd || !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue);\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n        this.applyStepsArrayOptions();\n      } else {\n        this.applyFloorCeilOptions();\n      }\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.combineLabels)) {\n        this.viewOptions.combineLabels = (minValue, maxValue) => {\n          return minValue + \" - \" + maxValue;\n        };\n      }\n      if (this.viewOptions.logScale && this.viewOptions.floor === 0) {\n        throw Error(\"Can't use floor=0 with logarithmic scale\");\n      }\n    }\n    applyStepsArrayOptions() {\n      this.viewOptions.floor = 0;\n      this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n      this.viewOptions.step = 1;\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n        this.viewOptions.translate = modelValue => {\n          if (this.viewOptions.bindIndexForStepsArray) {\n            return String(this.getStepValue(modelValue));\n          }\n          return String(modelValue);\n        };\n      }\n    }\n    applyFloorCeilOptions() {\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.step)) {\n        this.viewOptions.step = 1;\n      } else {\n        this.viewOptions.step = +this.viewOptions.step;\n        if (this.viewOptions.step <= 0) {\n          this.viewOptions.step = 1;\n        }\n      }\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.ceil) || ValueHelper.isNullOrUndefined(this.viewOptions.floor)) {\n        throw Error(\"floor and ceil options must be supplied\");\n      }\n      this.viewOptions.ceil = +this.viewOptions.ceil;\n      this.viewOptions.floor = +this.viewOptions.floor;\n      if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n        this.viewOptions.translate = value => String(value);\n      }\n    }\n    // Resets slider\n    resetSlider(rebindEvents = true) {\n      this.manageElementsStyle();\n      this.addAccessibility();\n      this.updateCeilLabel();\n      this.updateFloorLabel();\n      if (rebindEvents) {\n        this.unbindEvents();\n        this.manageEventsBindings();\n      }\n      this.updateDisabledState();\n      this.updateAriaLabel();\n      this.calculateViewDimensions();\n      // this.refocusPointerIfNeeded();\n    }\n    // Sets focus on the specified pointer\n    focusPointer(pointerType) {\n      // If not supplied, use min pointer as default\n      if (pointerType !== PointerType.Min && pointerType !== PointerType.Max) {\n        pointerType = PointerType.Min;\n      }\n      if (pointerType === PointerType.Min) {\n        this.minHandleElement.focus();\n      } else if (this.range && pointerType === PointerType.Max) {\n        this.maxHandleElement.focus();\n      }\n    }\n    refocusPointerIfNeeded() {\n      if (!ValueHelper.isNullOrUndefined(this.currentFocusPointer)) {\n        this.onPointerFocus(this.currentFocusPointer);\n        const element = this.getPointerElement(this.currentFocusPointer);\n        element.focus();\n      }\n    }\n    // Update each elements style based on options\n    manageElementsStyle() {\n      this.updateScale();\n      this.floorLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n      this.ceilLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n      const hideLabelsForTicks = this.viewOptions.showTicksValues && !this.intermediateTicks;\n      this.minHandleLabelElement.setAlwaysHide(hideLabelsForTicks || this.viewOptions.hidePointerLabels);\n      this.maxHandleLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n      this.combinedLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n      this.selectionBarElement.setAlwaysHide(!this.range && !this.viewOptions.showSelectionBar);\n      this.leftOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n      this.rightOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n      this.fullBarTransparentClass = this.range && this.viewOptions.showOuterSelectionBars;\n      this.selectionBarDraggableClass = this.viewOptions.draggableRange && !this.viewOptions.onlyBindHandles;\n      this.ticksUnderValuesClass = this.intermediateTicks && this.options.showTicksValues;\n      if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n        this.updateVerticalState();\n        // The above change in host component class will not be applied until the end of this cycle\n        // However, functions calculating the slider position expect the slider to be already styled as vertical\n        // So as a workaround, we need to reset the slider once again to compute the correct values\n        setTimeout(() => {\n          this.resetSlider();\n        });\n      }\n      // Changing animate class may interfere with slider reset/initialisation, so we should set it separately,\n      // after all is properly set up\n      if (this.sliderElementAnimateClass !== this.viewOptions.animate) {\n        setTimeout(() => {\n          this.sliderElementAnimateClass = this.viewOptions.animate;\n        });\n      }\n      this.updateRotate();\n    }\n    // Manage the events bindings based on readOnly and disabled options\n    manageEventsBindings() {\n      if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n        this.unbindEvents();\n      } else {\n        this.bindEvents();\n      }\n    }\n    // Set the disabled state based on disabled option\n    updateDisabledState() {\n      this.sliderElementDisabledAttr = this.viewOptions.disabled ? \"disabled\" : null;\n    }\n    // Set the aria-label state based on ariaLabel option\n    updateAriaLabel() {\n      this.sliderElementAriaLabel = this.viewOptions.ariaLabel || \"nxg-slider\";\n    }\n    // Set vertical state based on vertical option\n    updateVerticalState() {\n      this.sliderElementVerticalClass = this.viewOptions.vertical;\n      for (const element of this.getAllSliderElements()) {\n        // This is also called before ngAfterInit, so need to check that view child bindings work\n        if (!ValueHelper.isNullOrUndefined(element)) {\n          element.setVertical(this.viewOptions.vertical);\n        }\n      }\n    }\n    updateScale() {\n      for (const element of this.getAllSliderElements()) {\n        element.setScale(this.viewOptions.scale);\n      }\n    }\n    updateRotate() {\n      for (const element of this.getAllSliderElements()) {\n        element.setRotate(this.viewOptions.rotate);\n      }\n    }\n    getAllSliderElements() {\n      return [this.leftOuterSelectionBarElement, this.rightOuterSelectionBarElement, this.fullBarElement, this.selectionBarElement, this.minHandleElement, this.maxHandleElement, this.floorLabelElement, this.ceilLabelElement, this.minHandleLabelElement, this.maxHandleLabelElement, this.combinedLabelElement, this.ticksElement];\n    }\n    // Initialize slider handles positions and labels\n    // Run only once during initialization and every time view port changes size\n    initHandles() {\n      this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n      /*\n      the order here is important since the selection bar should be\n      updated after the high handle but before the combined label\n      */\n      if (this.range) {\n        this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n      }\n      this.updateSelectionBar();\n      if (this.range) {\n        this.updateCombinedLabel();\n      }\n      this.updateTicksScale();\n    }\n    // Adds accessibility attributes, run only once during initialization\n    addAccessibility() {\n      this.updateAriaAttributes();\n      this.minHandleElement.role = \"slider\";\n      if (this.viewOptions.keyboardSupport && !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n        this.minHandleElement.tabindex = \"0\";\n      } else {\n        this.minHandleElement.tabindex = \"\";\n      }\n      this.minHandleElement.ariaOrientation = this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? \"vertical\" : \"horizontal\";\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabel)) {\n        this.minHandleElement.ariaLabel = this.viewOptions.ariaLabel;\n      } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledBy)) {\n        this.minHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledBy;\n      }\n      if (this.range) {\n        this.maxHandleElement.role = \"slider\";\n        if (this.viewOptions.keyboardSupport && !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n          this.maxHandleElement.tabindex = \"0\";\n        } else {\n          this.maxHandleElement.tabindex = \"\";\n        }\n        this.maxHandleElement.ariaOrientation = this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? \"vertical\" : \"horizontal\";\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelHigh)) {\n          this.maxHandleElement.ariaLabel = this.viewOptions.ariaLabelHigh;\n        } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledByHigh)) {\n          this.maxHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledByHigh;\n        }\n      }\n    }\n    // Updates aria attributes according to current values\n    updateAriaAttributes() {\n      this.minHandleElement.ariaValueNow = (+this.value).toString();\n      this.minHandleElement.ariaValueText = this.viewOptions.translate(+this.value, LabelType.Low);\n      this.minHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n      this.minHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n      if (this.range) {\n        this.maxHandleElement.ariaValueNow = (+this.highValue).toString();\n        this.maxHandleElement.ariaValueText = this.viewOptions.translate(+this.highValue, LabelType.High);\n        this.maxHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n        this.maxHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n      }\n    }\n    // Calculate dimensions that are dependent on view port size\n    // Run once during initialization and every time view port changes size.\n    calculateViewDimensions() {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.handleDimension)) {\n        this.minHandleElement.setDimension(this.viewOptions.handleDimension);\n      } else {\n        this.minHandleElement.calculateDimension();\n      }\n      const handleWidth = this.minHandleElement.dimension;\n      this.handleHalfDimension = handleWidth / 2;\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.barDimension)) {\n        this.fullBarElement.setDimension(this.viewOptions.barDimension);\n      } else {\n        this.fullBarElement.calculateDimension();\n      }\n      this.maxHandlePosition = this.fullBarElement.dimension - handleWidth;\n      if (this.initHasRun) {\n        this.updateFloorLabel();\n        this.updateCeilLabel();\n        this.initHandles();\n      }\n    }\n    calculateViewDimensionsAndDetectChanges() {\n      this.calculateViewDimensions();\n      if (!this.isRefDestroyed()) {\n        this.changeDetectionRef.detectChanges();\n      }\n    }\n    /**\n     * If the slider reference is already destroyed\n     * @returns boolean - true if ref is destroyed\n     */\n    isRefDestroyed() {\n      return this.changeDetectionRef[\"destroyed\"];\n    }\n    // Update the ticks position\n    updateTicksScale() {\n      if (!this.viewOptions.showTicks && this.sliderElementWithLegendClass) {\n        setTimeout(() => {\n          this.sliderElementWithLegendClass = false;\n        });\n        return;\n      }\n      const ticksArray = !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray) ? this.viewOptions.ticksArray : this.getTicksArray();\n      const translate = this.viewOptions.vertical ? \"translateY\" : \"translateX\";\n      if (this.viewOptions.rightToLeft) {\n        ticksArray.reverse();\n      }\n      const tickValueStep = !ValueHelper.isNullOrUndefined(this.viewOptions.tickValueStep) ? this.viewOptions.tickValueStep : !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) ? this.viewOptions.tickStep : this.viewOptions.step;\n      let hasAtLeastOneLegend = false;\n      const newTicks = ticksArray.map(value => {\n        let position = this.valueToPosition(value);\n        if (this.viewOptions.vertical) {\n          position = this.maxHandlePosition - position;\n        }\n        const translation = translate + \"(\" + Math.round(position) + \"px)\";\n        const tick = new Tick();\n        tick.selected = this.isTickSelected(value);\n        tick.style = {\n          \"-webkit-transform\": translation,\n          \"-moz-transform\": translation,\n          \"-o-transform\": translation,\n          \"-ms-transform\": translation,\n          transform: translation\n        };\n        if (tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n          tick.style[\"background-color\"] = this.getSelectionBarColor();\n        }\n        if (!tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getTickColor)) {\n          tick.style[\"background-color\"] = this.getTickColor(value);\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksTooltip)) {\n          tick.tooltip = this.viewOptions.ticksTooltip(value);\n          tick.tooltipPlacement = this.viewOptions.vertical ? \"right\" : \"top\";\n        }\n        if (this.viewOptions.showTicksValues && !ValueHelper.isNullOrUndefined(tickValueStep) && MathHelper.isModuloWithinPrecisionLimit(value, tickValueStep, this.viewOptions.precisionLimit)) {\n          tick.value = this.getDisplayValue(value, LabelType.TickValue);\n          if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksValuesTooltip)) {\n            tick.valueTooltip = this.viewOptions.ticksValuesTooltip(value);\n            tick.valueTooltipPlacement = this.viewOptions.vertical ? \"right\" : \"top\";\n          }\n        }\n        let legend = null;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n          const step = this.viewOptions.stepsArray[value];\n          if (!ValueHelper.isNullOrUndefined(this.viewOptions.getStepLegend)) {\n            legend = this.viewOptions.getStepLegend(step);\n          } else if (!ValueHelper.isNullOrUndefined(step)) {\n            legend = step.legend;\n          }\n        } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.getLegend)) {\n          legend = this.viewOptions.getLegend(value);\n        }\n        if (!ValueHelper.isNullOrUndefined(legend)) {\n          tick.legend = legend;\n          hasAtLeastOneLegend = true;\n        }\n        return tick;\n      });\n      if (this.sliderElementWithLegendClass !== hasAtLeastOneLegend) {\n        setTimeout(() => {\n          this.sliderElementWithLegendClass = hasAtLeastOneLegend;\n        });\n      }\n      // We should avoid re-creating the ticks array if possible\n      // This both improves performance and makes CSS animations work correctly\n      if (!ValueHelper.isNullOrUndefined(this.ticks) && this.ticks.length === newTicks.length) {\n        for (let i = 0; i < newTicks.length; ++i) {\n          Object.assign(this.ticks[i], newTicks[i]);\n        }\n      } else {\n        this.ticks = newTicks;\n        if (!this.isRefDestroyed()) {\n          this.changeDetectionRef.detectChanges();\n        }\n      }\n    }\n    getTicksArray() {\n      const step = !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) ? this.viewOptions.tickStep : this.viewOptions.step;\n      const ticksArray = [];\n      const numberOfValues = 1 + Math.floor(MathHelper.roundToPrecisionLimit(Math.abs(this.viewOptions.ceil - this.viewOptions.floor) / step, this.viewOptions.precisionLimit));\n      for (let index = 0; index < numberOfValues; ++index) {\n        ticksArray.push(MathHelper.roundToPrecisionLimit(this.viewOptions.floor + step * index, this.viewOptions.precisionLimit));\n      }\n      return ticksArray;\n    }\n    isTickSelected(value) {\n      if (!this.range) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n          const center = this.viewOptions.showSelectionBarFromValue;\n          if (this.viewLowValue > center && value >= center && value <= this.viewLowValue) {\n            return true;\n          } else if (this.viewLowValue < center && value <= center && value >= this.viewLowValue) {\n            return true;\n          }\n        } else if (this.viewOptions.showSelectionBarEnd) {\n          if (value >= this.viewLowValue) {\n            return true;\n          }\n        } else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n          return true;\n        }\n      }\n      if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n        return true;\n      }\n      return false;\n    }\n    // Update position of the floor label\n    updateFloorLabel() {\n      if (!this.floorLabelElement.alwaysHide) {\n        this.floorLabelElement.setValue(this.getDisplayValue(this.viewOptions.floor, LabelType.Floor));\n        this.floorLabelElement.calculateDimension();\n        const position = this.viewOptions.rightToLeft ? this.fullBarElement.dimension - this.floorLabelElement.dimension : 0;\n        this.floorLabelElement.setPosition(position);\n      }\n    }\n    // Update position of the ceiling label\n    updateCeilLabel() {\n      if (!this.ceilLabelElement.alwaysHide) {\n        this.ceilLabelElement.setValue(this.getDisplayValue(this.viewOptions.ceil, LabelType.Ceil));\n        this.ceilLabelElement.calculateDimension();\n        const position = this.viewOptions.rightToLeft ? 0 : this.fullBarElement.dimension - this.ceilLabelElement.dimension;\n        this.ceilLabelElement.setPosition(position);\n      }\n    }\n    // Update slider handles and label positions\n    updateHandles(which, newPos) {\n      if (which === PointerType.Min) {\n        this.updateLowHandle(newPos);\n      } else if (which === PointerType.Max) {\n        this.updateHighHandle(newPos);\n      }\n      this.updateSelectionBar();\n      this.updateTicksScale();\n      if (this.range) {\n        this.updateCombinedLabel();\n      }\n    }\n    // Helper function to work out the position for handle labels depending on RTL or not\n    getHandleLabelPos(labelType, newPos) {\n      const labelDimension = labelType === PointerType.Min ? this.minHandleLabelElement.dimension : this.maxHandleLabelElement.dimension;\n      const nearHandlePos = newPos - labelDimension / 2 + this.handleHalfDimension;\n      const endOfBarPos = this.fullBarElement.dimension - labelDimension;\n      if (!this.viewOptions.boundPointerLabels) {\n        return nearHandlePos;\n      }\n      if (this.viewOptions.rightToLeft && labelType === PointerType.Min || !this.viewOptions.rightToLeft && labelType === PointerType.Max) {\n        return Math.min(nearHandlePos, endOfBarPos);\n      } else {\n        return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n      }\n    }\n    // Update low slider handle position and label\n    updateLowHandle(newPos) {\n      this.minHandleElement.setPosition(newPos);\n      this.minHandleLabelElement.setValue(this.getDisplayValue(this.viewLowValue, LabelType.Low));\n      this.minHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Min, newPos));\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n        this.minPointerStyle = {\n          backgroundColor: this.getPointerColor(PointerType.Min)\n        };\n      }\n      if (this.viewOptions.autoHideLimitLabels) {\n        this.updateFloorAndCeilLabelsVisibility();\n      }\n    }\n    // Update high slider handle position and label\n    updateHighHandle(newPos) {\n      this.maxHandleElement.setPosition(newPos);\n      this.maxHandleLabelElement.setValue(this.getDisplayValue(this.viewHighValue, LabelType.High));\n      this.maxHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Max, newPos));\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n        this.maxPointerStyle = {\n          backgroundColor: this.getPointerColor(PointerType.Max)\n        };\n      }\n      if (this.viewOptions.autoHideLimitLabels) {\n        this.updateFloorAndCeilLabelsVisibility();\n      }\n    }\n    // Show/hide floor/ceiling label\n    updateFloorAndCeilLabelsVisibility() {\n      // Show based only on hideLimitLabels if pointer labels are hidden\n      if (this.viewOptions.hidePointerLabels) {\n        return;\n      }\n      let floorLabelHidden = false;\n      let ceilLabelHidden = false;\n      const isMinLabelAtFloor = this.isLabelBelowFloorLabel(this.minHandleLabelElement);\n      const isMinLabelAtCeil = this.isLabelAboveCeilLabel(this.minHandleLabelElement);\n      const isMaxLabelAtCeil = this.isLabelAboveCeilLabel(this.maxHandleLabelElement);\n      const isCombinedLabelAtFloor = this.isLabelBelowFloorLabel(this.combinedLabelElement);\n      const isCombinedLabelAtCeil = this.isLabelAboveCeilLabel(this.combinedLabelElement);\n      if (isMinLabelAtFloor) {\n        floorLabelHidden = true;\n        this.floorLabelElement.hide();\n      } else {\n        floorLabelHidden = false;\n        this.floorLabelElement.show();\n      }\n      if (isMinLabelAtCeil) {\n        ceilLabelHidden = true;\n        this.ceilLabelElement.hide();\n      } else {\n        ceilLabelHidden = false;\n        this.ceilLabelElement.show();\n      }\n      if (this.range) {\n        const hideCeil = this.combinedLabelElement.isVisible() ? isCombinedLabelAtCeil : isMaxLabelAtCeil;\n        const hideFloor = this.combinedLabelElement.isVisible() ? isCombinedLabelAtFloor : isMinLabelAtFloor;\n        if (hideCeil) {\n          this.ceilLabelElement.hide();\n        } else if (!ceilLabelHidden) {\n          this.ceilLabelElement.show();\n        }\n        // Hide or show floor label\n        if (hideFloor) {\n          this.floorLabelElement.hide();\n        } else if (!floorLabelHidden) {\n          this.floorLabelElement.show();\n        }\n      }\n    }\n    isLabelBelowFloorLabel(label) {\n      const pos = label.position;\n      const dim = label.dimension;\n      const floorPos = this.floorLabelElement.position;\n      const floorDim = this.floorLabelElement.dimension;\n      return this.viewOptions.rightToLeft ? pos + dim >= floorPos - 2 : pos <= floorPos + floorDim + 2;\n    }\n    isLabelAboveCeilLabel(label) {\n      const pos = label.position;\n      const dim = label.dimension;\n      const ceilPos = this.ceilLabelElement.position;\n      const ceilDim = this.ceilLabelElement.dimension;\n      return this.viewOptions.rightToLeft ? pos <= ceilPos + ceilDim + 2 : pos + dim >= ceilPos - 2;\n    }\n    // Update slider selection bar, combined label and range label\n    updateSelectionBar() {\n      let position = 0;\n      let dimension = 0;\n      const isSelectionBarFromRight = this.viewOptions.rightToLeft ? !this.viewOptions.showSelectionBarEnd : this.viewOptions.showSelectionBarEnd;\n      const positionForRange = this.viewOptions.rightToLeft ? this.maxHandleElement.position + this.handleHalfDimension : this.minHandleElement.position + this.handleHalfDimension;\n      if (this.range) {\n        dimension = Math.abs(this.maxHandleElement.position - this.minHandleElement.position);\n        position = positionForRange;\n      } else {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n          const center = this.viewOptions.showSelectionBarFromValue;\n          const centerPosition = this.valueToPosition(center);\n          const isModelGreaterThanCenter = this.viewOptions.rightToLeft ? this.viewLowValue <= center : this.viewLowValue > center;\n          if (isModelGreaterThanCenter) {\n            dimension = this.minHandleElement.position - centerPosition;\n            position = centerPosition + this.handleHalfDimension;\n          } else {\n            dimension = centerPosition - this.minHandleElement.position;\n            position = this.minHandleElement.position + this.handleHalfDimension;\n          }\n        } else if (isSelectionBarFromRight) {\n          dimension = Math.ceil(Math.abs(this.maxHandlePosition - this.minHandleElement.position) + this.handleHalfDimension);\n          position = Math.floor(this.minHandleElement.position + this.handleHalfDimension);\n        } else {\n          dimension = this.minHandleElement.position + this.handleHalfDimension;\n          position = 0;\n        }\n      }\n      this.selectionBarElement.setDimension(dimension);\n      this.selectionBarElement.setPosition(position);\n      if (this.range && this.viewOptions.showOuterSelectionBars) {\n        if (this.viewOptions.rightToLeft) {\n          this.rightOuterSelectionBarElement.setDimension(position);\n          this.rightOuterSelectionBarElement.setPosition(0);\n          this.fullBarElement.calculateDimension();\n          this.leftOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n          this.leftOuterSelectionBarElement.setPosition(position + dimension);\n        } else {\n          this.leftOuterSelectionBarElement.setDimension(position);\n          this.leftOuterSelectionBarElement.setPosition(0);\n          this.fullBarElement.calculateDimension();\n          this.rightOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n          this.rightOuterSelectionBarElement.setPosition(position + dimension);\n        }\n      }\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n        const color = this.getSelectionBarColor();\n        this.barStyle = {\n          backgroundColor: color\n        };\n      } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.selectionBarGradient)) {\n        const offset = !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue) ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue) : 0;\n        const reversed = offset - position > 0 && !isSelectionBarFromRight || offset - position <= 0 && isSelectionBarFromRight;\n        const direction = this.viewOptions.vertical ? reversed ? \"bottom\" : \"top\" : reversed ? \"left\" : \"right\";\n        this.barStyle = {\n          backgroundImage: \"linear-gradient(to \" + direction + \", \" + this.viewOptions.selectionBarGradient.from + \" 0%,\" + this.viewOptions.selectionBarGradient.to + \" 100%)\"\n        };\n        if (this.viewOptions.vertical) {\n          this.barStyle.backgroundPosition = \"center \" + (offset + dimension + position + (reversed ? -this.handleHalfDimension : 0)) + \"px\";\n          this.barStyle.backgroundSize = \"100% \" + (this.fullBarElement.dimension - this.handleHalfDimension) + \"px\";\n        } else {\n          this.barStyle.backgroundPosition = offset - position + (reversed ? this.handleHalfDimension : 0) + \"px center\";\n          this.barStyle.backgroundSize = this.fullBarElement.dimension - this.handleHalfDimension + \"px 100%\";\n        }\n      }\n    }\n    // Wrapper around the getSelectionBarColor of the user to pass to correct parameters\n    getSelectionBarColor() {\n      if (this.range) {\n        return this.viewOptions.getSelectionBarColor(this.value, this.highValue);\n      }\n      return this.viewOptions.getSelectionBarColor(this.value);\n    }\n    // Wrapper around the getPointerColor of the user to pass to  correct parameters\n    getPointerColor(pointerType) {\n      if (pointerType === PointerType.Max) {\n        return this.viewOptions.getPointerColor(this.highValue, pointerType);\n      }\n      return this.viewOptions.getPointerColor(this.value, pointerType);\n    }\n    // Wrapper around the getTickColor of the user to pass to correct parameters\n    getTickColor(value) {\n      return this.viewOptions.getTickColor(value);\n    }\n    // Update combined label position and value\n    updateCombinedLabel() {\n      let isLabelOverlap = null;\n      if (this.viewOptions.rightToLeft) {\n        isLabelOverlap = this.minHandleLabelElement.position - this.minHandleLabelElement.dimension - 10 <= this.maxHandleLabelElement.position;\n      } else {\n        isLabelOverlap = this.minHandleLabelElement.position + this.minHandleLabelElement.dimension + 10 >= this.maxHandleLabelElement.position;\n      }\n      if (isLabelOverlap) {\n        const lowDisplayValue = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n        const highDisplayValue = this.getDisplayValue(this.viewHighValue, LabelType.High);\n        const combinedLabelValue = this.viewOptions.rightToLeft ? this.viewOptions.combineLabels(highDisplayValue, lowDisplayValue) : this.viewOptions.combineLabels(lowDisplayValue, highDisplayValue);\n        this.combinedLabelElement.setValue(combinedLabelValue);\n        const pos = this.viewOptions.boundPointerLabels ? Math.min(Math.max(this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2, 0), this.fullBarElement.dimension - this.combinedLabelElement.dimension) : this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2;\n        this.combinedLabelElement.setPosition(pos);\n        this.minHandleLabelElement.hide();\n        this.maxHandleLabelElement.hide();\n        this.combinedLabelElement.show();\n      } else {\n        this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n        this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n        this.maxHandleLabelElement.show();\n        this.minHandleLabelElement.show();\n        this.combinedLabelElement.hide();\n      }\n      if (this.viewOptions.autoHideLimitLabels) {\n        this.updateFloorAndCeilLabelsVisibility();\n      }\n    }\n    // Return the translated value if a translate function is provided else the original value\n    getDisplayValue(value, which) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n        value = this.getStepValue(value);\n      }\n      return this.viewOptions.translate(value, which);\n    }\n    // Round value to step and precision based on minValue\n    roundStep(value, customStep) {\n      const step = !ValueHelper.isNullOrUndefined(customStep) ? customStep : this.viewOptions.step;\n      let steppedDifference = MathHelper.roundToPrecisionLimit((value - this.viewOptions.floor) / step, this.viewOptions.precisionLimit);\n      steppedDifference = Math.round(steppedDifference) * step;\n      return MathHelper.roundToPrecisionLimit(this.viewOptions.floor + steppedDifference, this.viewOptions.precisionLimit);\n    }\n    // Translate value to pixel position\n    valueToPosition(val) {\n      let fn = ValueHelper.linearValueToPosition;\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.customValueToPosition)) {\n        fn = this.viewOptions.customValueToPosition;\n      } else if (this.viewOptions.logScale) {\n        fn = ValueHelper.logValueToPosition;\n      }\n      val = MathHelper.clampToRange(val, this.viewOptions.floor, this.viewOptions.ceil);\n      let percent = fn(val, this.viewOptions.floor, this.viewOptions.ceil);\n      if (ValueHelper.isNullOrUndefined(percent)) {\n        percent = 0;\n      }\n      if (this.viewOptions.rightToLeft) {\n        percent = 1 - percent;\n      }\n      return percent * this.maxHandlePosition;\n    }\n    // Translate position to model value\n    positionToValue(position) {\n      let percent = position / this.maxHandlePosition;\n      if (this.viewOptions.rightToLeft) {\n        percent = 1 - percent;\n      }\n      let fn = ValueHelper.linearPositionToValue;\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.customPositionToValue)) {\n        fn = this.viewOptions.customPositionToValue;\n      } else if (this.viewOptions.logScale) {\n        fn = ValueHelper.logPositionToValue;\n      }\n      const value = fn(percent, this.viewOptions.floor, this.viewOptions.ceil);\n      return !ValueHelper.isNullOrUndefined(value) ? value : 0;\n    }\n    // Get the X-coordinate or Y-coordinate of an event\n    getEventXY(event, targetTouchId) {\n      if (event instanceof MouseEvent) {\n        return this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? event.clientY : event.clientX;\n      }\n      let touchIndex = 0;\n      const touches = event.touches;\n      if (!ValueHelper.isNullOrUndefined(targetTouchId)) {\n        for (let i = 0; i < touches.length; i++) {\n          if (touches[i].identifier === targetTouchId) {\n            touchIndex = i;\n            break;\n          }\n        }\n      }\n      // Return the target touch or if the target touch was not found in the event\n      // returns the coordinates of the first touch\n      return this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n    }\n    // Compute the event position depending on whether the slider is horizontal or vertical\n    getEventPosition(event, targetTouchId) {\n      const sliderElementBoundingRect = this.elementRef.nativeElement.getBoundingClientRect();\n      const sliderPos = this.viewOptions.vertical || this.viewOptions.rotate !== 0 ? sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n      let eventPos = 0;\n      if (this.viewOptions.vertical || this.viewOptions.rotate !== 0) {\n        eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n      } else {\n        eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n      }\n      return eventPos * this.viewOptions.scale - this.handleHalfDimension;\n    }\n    // Get the handle closest to an event\n    getNearestHandle(event) {\n      if (!this.range) {\n        return PointerType.Min;\n      }\n      const position = this.getEventPosition(event);\n      const distanceMin = Math.abs(position - this.minHandleElement.position);\n      const distanceMax = Math.abs(position - this.maxHandleElement.position);\n      if (distanceMin < distanceMax) {\n        return PointerType.Min;\n      } else if (distanceMin > distanceMax) {\n        return PointerType.Max;\n      } else if (!this.viewOptions.rightToLeft) {\n        // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n        return position < this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n      }\n      // reverse in rtl\n      return position > this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n    }\n    // Bind mouse and touch events to slider handles\n    bindEvents() {\n      const draggableRange = this.viewOptions.draggableRange;\n      if (!this.viewOptions.onlyBindHandles) {\n        this.selectionBarElement.on(\"mousedown\", event => this.onBarStart(null, draggableRange, event, true, true, true));\n      }\n      if (this.viewOptions.draggableRangeOnly) {\n        this.minHandleElement.on(\"mousedown\", event => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n        this.maxHandleElement.on(\"mousedown\", event => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n      } else {\n        this.minHandleElement.on(\"mousedown\", event => this.onStart(PointerType.Min, event, true, true));\n        if (this.range) {\n          this.maxHandleElement.on(\"mousedown\", event => this.onStart(PointerType.Max, event, true, true));\n        }\n        if (!this.viewOptions.onlyBindHandles) {\n          this.fullBarElement.on(\"mousedown\", event => this.onStart(null, event, true, true, true));\n          this.ticksElement.on(\"mousedown\", event => this.onStart(null, event, true, true, true, true));\n        }\n      }\n      if (!this.viewOptions.onlyBindHandles) {\n        this.selectionBarElement.onPassive(\"touchstart\", event => this.onBarStart(null, draggableRange, event, true, true, true));\n      }\n      if (this.viewOptions.draggableRangeOnly) {\n        this.minHandleElement.onPassive(\"touchstart\", event => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n        this.maxHandleElement.onPassive(\"touchstart\", event => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n      } else {\n        this.minHandleElement.onPassive(\"touchstart\", event => this.onStart(PointerType.Min, event, true, true));\n        if (this.range) {\n          this.maxHandleElement.onPassive(\"touchstart\", event => this.onStart(PointerType.Max, event, true, true));\n        }\n        if (!this.viewOptions.onlyBindHandles) {\n          this.fullBarElement.onPassive(\"touchstart\", event => this.onStart(null, event, true, true, true));\n          this.ticksElement.onPassive(\"touchstart\", event => this.onStart(null, event, false, false, true, true));\n        }\n      }\n      if (this.viewOptions.keyboardSupport) {\n        this.minHandleElement.on(\"focus\", () => this.onPointerFocus(PointerType.Min));\n        if (this.range) {\n          this.maxHandleElement.on(\"focus\", () => this.onPointerFocus(PointerType.Max));\n        }\n      }\n    }\n    getOptionsInfluencingEventBindings(options) {\n      return [options.disabled, options.readOnly, options.draggableRange, options.draggableRangeOnly, options.onlyBindHandles, options.keyboardSupport];\n    }\n    // Unbind mouse and touch events to slider handles\n    unbindEvents() {\n      this.unsubscribeOnMove();\n      this.unsubscribeOnEnd();\n      for (const element of this.getAllSliderElements()) {\n        if (!ValueHelper.isNullOrUndefined(element)) {\n          element.off();\n        }\n      }\n    }\n    onBarStart(pointerType, draggableRange, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n      if (draggableRange) {\n        this.onDragStart(pointerType, event, bindMove, bindEnd);\n      } else {\n        this.onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n      }\n    }\n    // onStart event handler\n    onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n      event.stopPropagation();\n      // Only call preventDefault() when handling non-passive events (passive events don't need it)\n      if (!CompatibilityHelper.isTouchEvent(event) && !supportsPassiveEvents) {\n        event.preventDefault();\n      }\n      this.moving = false;\n      // We have to do this in case the HTML where the sliders are on\n      // have been animated into view.\n      this.calculateViewDimensions();\n      if (ValueHelper.isNullOrUndefined(pointerType)) {\n        pointerType = this.getNearestHandle(event);\n      }\n      this.currentTrackingPointer = pointerType;\n      const pointerElement = this.getPointerElement(pointerType);\n      pointerElement.active = true;\n      if (this.viewOptions.keyboardSupport) {\n        pointerElement.focus();\n      }\n      if (bindMove) {\n        this.unsubscribeOnMove();\n        const onMoveCallback = e => this.dragging.active ? this.onDragMove(e) : this.onMove(e);\n        if (CompatibilityHelper.isTouchEvent(event)) {\n          this.onMoveEventListener = this.eventListenerHelper.attachPassiveEventListener(document, \"touchmove\", onMoveCallback);\n        } else {\n          this.onMoveEventListener = this.eventListenerHelper.attachEventListener(document, \"mousemove\", onMoveCallback);\n        }\n      }\n      if (bindEnd) {\n        this.unsubscribeOnEnd();\n        const onEndCallback = e => this.onEnd(e);\n        if (CompatibilityHelper.isTouchEvent(event)) {\n          this.onEndEventListener = this.eventListenerHelper.attachPassiveEventListener(document, \"touchend\", onEndCallback);\n        } else {\n          this.onEndEventListener = this.eventListenerHelper.attachEventListener(document, \"mouseup\", onEndCallback);\n        }\n      }\n      this.userChangeStart.emit(this.getChangeContext());\n      if (CompatibilityHelper.isTouchEvent(event) && !ValueHelper.isNullOrUndefined(event.changedTouches)) {\n        // Store the touch identifier\n        if (ValueHelper.isNullOrUndefined(this.touchId)) {\n          this.touchId = event.changedTouches[0].identifier;\n        }\n      }\n      // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n      // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n      // As a workaround, we simulate the first move event and the end event if it's necessary\n      if (simulateImmediateMove) {\n        this.onMove(event, true);\n      }\n      if (simulateImmediateEnd) {\n        this.onEnd(event);\n      }\n    }\n    // onMove event handler\n    onMove(event, fromTick) {\n      let touchForThisSlider = null;\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        const changedTouches = event.changedTouches;\n        for (let i = 0; i < changedTouches.length; i++) {\n          if (changedTouches[i].identifier === this.touchId) {\n            touchForThisSlider = changedTouches[i];\n            break;\n          }\n        }\n        if (ValueHelper.isNullOrUndefined(touchForThisSlider)) {\n          return;\n        }\n      }\n      if (this.viewOptions.animate && !this.viewOptions.animateOnMove) {\n        if (this.moving) {\n          this.sliderElementAnimateClass = false;\n        }\n      }\n      this.moving = true;\n      const newPos = !ValueHelper.isNullOrUndefined(touchForThisSlider) ? this.getEventPosition(event, touchForThisSlider.identifier) : this.getEventPosition(event);\n      let newValue;\n      const ceilValue = this.viewOptions.rightToLeft ? this.viewOptions.floor : this.viewOptions.ceil;\n      const floorValue = this.viewOptions.rightToLeft ? this.viewOptions.ceil : this.viewOptions.floor;\n      if (newPos <= 0) {\n        newValue = floorValue;\n      } else if (newPos >= this.maxHandlePosition) {\n        newValue = ceilValue;\n      } else {\n        newValue = this.positionToValue(newPos);\n        if (fromTick && !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) {\n          newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n        } else {\n          newValue = this.roundStep(newValue);\n        }\n      }\n      this.positionTrackingHandle(newValue);\n    }\n    onEnd(event) {\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        const changedTouches = event.changedTouches;\n        if (changedTouches[0].identifier !== this.touchId) {\n          return;\n        }\n      }\n      this.moving = false;\n      if (this.viewOptions.animate) {\n        this.sliderElementAnimateClass = true;\n      }\n      this.touchId = null;\n      if (!this.viewOptions.keyboardSupport) {\n        this.minHandleElement.active = false;\n        this.maxHandleElement.active = false;\n        this.currentTrackingPointer = null;\n      }\n      this.dragging.active = false;\n      this.unsubscribeOnMove();\n      this.unsubscribeOnEnd();\n      this.userChangeEnd.emit(this.getChangeContext());\n    }\n    onPointerFocus(pointerType) {\n      const pointerElement = this.getPointerElement(pointerType);\n      pointerElement.on(\"blur\", () => this.onPointerBlur(pointerElement));\n      pointerElement.on(\"keydown\", event => this.onKeyboardEvent(event));\n      pointerElement.on(\"keyup\", () => this.onKeyUp());\n      pointerElement.active = true;\n      this.currentTrackingPointer = pointerType;\n      this.currentFocusPointer = pointerType;\n      this.firstKeyDown = true;\n    }\n    onKeyUp() {\n      this.firstKeyDown = true;\n      this.userChangeEnd.emit(this.getChangeContext());\n    }\n    onPointerBlur(pointer) {\n      pointer.off(\"blur\");\n      pointer.off(\"keydown\");\n      pointer.off(\"keyup\");\n      pointer.active = false;\n      if (ValueHelper.isNullOrUndefined(this.touchId)) {\n        this.currentTrackingPointer = null;\n        this.currentFocusPointer = null;\n      }\n    }\n    getKeyActions(currentValue) {\n      const valueRange = this.viewOptions.ceil - this.viewOptions.floor;\n      let increaseStep = currentValue + this.viewOptions.step;\n      let decreaseStep = currentValue - this.viewOptions.step;\n      let increasePage = currentValue + valueRange / 10;\n      let decreasePage = currentValue - valueRange / 10;\n      if (this.viewOptions.reversedControls) {\n        increaseStep = currentValue - this.viewOptions.step;\n        decreaseStep = currentValue + this.viewOptions.step;\n        increasePage = currentValue - valueRange / 10;\n        decreasePage = currentValue + valueRange / 10;\n      }\n      // Left to right default actions\n      const actions = {\n        UP: increaseStep,\n        DOWN: decreaseStep,\n        LEFT: decreaseStep,\n        RIGHT: increaseStep,\n        PAGEUP: increasePage,\n        PAGEDOWN: decreasePage,\n        HOME: this.viewOptions.reversedControls ? this.viewOptions.ceil : this.viewOptions.floor,\n        END: this.viewOptions.reversedControls ? this.viewOptions.floor : this.viewOptions.ceil\n      };\n      // right to left means swapping right and left arrows\n      if (this.viewOptions.rightToLeft) {\n        actions.LEFT = increaseStep;\n        actions.RIGHT = decreaseStep;\n        // right to left and vertical means we also swap up and down\n        if (this.viewOptions.vertical || this.viewOptions.rotate !== 0) {\n          actions.UP = decreaseStep;\n          actions.DOWN = increaseStep;\n        }\n      }\n      return actions;\n    }\n    onKeyboardEvent(event) {\n      const currentValue = this.getCurrentTrackingValue();\n      const keyCode = !ValueHelper.isNullOrUndefined(event.keyCode) ? event.keyCode : event.which;\n      const keys = {\n        38: \"UP\",\n        40: \"DOWN\",\n        37: \"LEFT\",\n        39: \"RIGHT\",\n        33: \"PAGEUP\",\n        34: \"PAGEDOWN\",\n        36: \"HOME\",\n        35: \"END\"\n      };\n      const actions = this.getKeyActions(currentValue);\n      const key = keys[keyCode];\n      const action = actions[key];\n      if (ValueHelper.isNullOrUndefined(action) || ValueHelper.isNullOrUndefined(this.currentTrackingPointer)) {\n        return;\n      }\n      event.preventDefault();\n      if (this.firstKeyDown) {\n        this.firstKeyDown = false;\n        this.userChangeStart.emit(this.getChangeContext());\n      }\n      const actionValue = MathHelper.clampToRange(action, this.viewOptions.floor, this.viewOptions.ceil);\n      const newValue = this.roundStep(actionValue);\n      if (!this.viewOptions.draggableRangeOnly) {\n        this.positionTrackingHandle(newValue);\n      } else {\n        const difference = this.viewHighValue - this.viewLowValue;\n        let newMinValue;\n        let newMaxValue;\n        if (this.currentTrackingPointer === PointerType.Min) {\n          newMinValue = newValue;\n          newMaxValue = newValue + difference;\n          if (newMaxValue > this.viewOptions.ceil) {\n            newMaxValue = this.viewOptions.ceil;\n            newMinValue = newMaxValue - difference;\n          }\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          newMaxValue = newValue;\n          newMinValue = newValue - difference;\n          if (newMinValue < this.viewOptions.floor) {\n            newMinValue = this.viewOptions.floor;\n            newMaxValue = newMinValue + difference;\n          }\n        }\n        this.positionTrackingBar(newMinValue, newMaxValue);\n      }\n    }\n    // onDragStart event handler, handles dragging of the middle bar\n    onDragStart(pointerType, event, bindMove, bindEnd) {\n      const position = this.getEventPosition(event);\n      this.dragging = new Dragging();\n      this.dragging.active = true;\n      this.dragging.value = this.positionToValue(position);\n      this.dragging.difference = this.viewHighValue - this.viewLowValue;\n      this.dragging.lowLimit = this.viewOptions.rightToLeft ? this.minHandleElement.position - position : position - this.minHandleElement.position;\n      this.dragging.highLimit = this.viewOptions.rightToLeft ? position - this.maxHandleElement.position : this.maxHandleElement.position - position;\n      this.onStart(pointerType, event, bindMove, bindEnd);\n    }\n    /** Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft */\n    getMinValue(newPos, outOfBounds, isAbove) {\n      const isRTL = this.viewOptions.rightToLeft;\n      let value = null;\n      if (outOfBounds) {\n        if (isAbove) {\n          value = isRTL ? this.viewOptions.floor : this.viewOptions.ceil - this.dragging.difference;\n        } else {\n          value = isRTL ? this.viewOptions.ceil - this.dragging.difference : this.viewOptions.floor;\n        }\n      } else {\n        value = isRTL ? this.positionToValue(newPos + this.dragging.lowLimit) : this.positionToValue(newPos - this.dragging.lowLimit);\n      }\n      return this.roundStep(value);\n    }\n    /** Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft */\n    getMaxValue(newPos, outOfBounds, isAbove) {\n      const isRTL = this.viewOptions.rightToLeft;\n      let value = null;\n      if (outOfBounds) {\n        if (isAbove) {\n          value = isRTL ? this.viewOptions.floor + this.dragging.difference : this.viewOptions.ceil;\n        } else {\n          value = isRTL ? this.viewOptions.ceil : this.viewOptions.floor + this.dragging.difference;\n        }\n      } else {\n        if (isRTL) {\n          value = this.positionToValue(newPos + this.dragging.lowLimit) + this.dragging.difference;\n        } else {\n          value = this.positionToValue(newPos - this.dragging.lowLimit) + this.dragging.difference;\n        }\n      }\n      return this.roundStep(value);\n    }\n    onDragMove(event) {\n      const newPos = this.getEventPosition(event);\n      if (this.viewOptions.animate && !this.viewOptions.animateOnMove) {\n        if (this.moving) {\n          this.sliderElementAnimateClass = false;\n        }\n      }\n      this.moving = true;\n      let ceilLimit, floorLimit, floorHandleElement, ceilHandleElement;\n      if (this.viewOptions.rightToLeft) {\n        ceilLimit = this.dragging.lowLimit;\n        floorLimit = this.dragging.highLimit;\n        floorHandleElement = this.maxHandleElement;\n        ceilHandleElement = this.minHandleElement;\n      } else {\n        ceilLimit = this.dragging.highLimit;\n        floorLimit = this.dragging.lowLimit;\n        floorHandleElement = this.minHandleElement;\n        ceilHandleElement = this.maxHandleElement;\n      }\n      const isUnderFloorLimit = newPos <= floorLimit;\n      const isOverCeilLimit = newPos >= this.maxHandlePosition - ceilLimit;\n      let newMinValue;\n      let newMaxValue;\n      if (isUnderFloorLimit) {\n        if (floorHandleElement.position === 0) {\n          return;\n        }\n        newMinValue = this.getMinValue(newPos, true, false);\n        newMaxValue = this.getMaxValue(newPos, true, false);\n      } else if (isOverCeilLimit) {\n        if (ceilHandleElement.position === this.maxHandlePosition) {\n          return;\n        }\n        newMaxValue = this.getMaxValue(newPos, true, true);\n        newMinValue = this.getMinValue(newPos, true, true);\n      } else {\n        newMinValue = this.getMinValue(newPos, false, false);\n        newMaxValue = this.getMaxValue(newPos, false, false);\n      }\n      this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n    // Set the new value and position for the entire bar\n    positionTrackingBar(newMinValue, newMaxValue) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newMinValue < this.viewOptions.minLimit) {\n        newMinValue = this.viewOptions.minLimit;\n        newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.viewOptions.precisionLimit);\n      }\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newMaxValue > this.viewOptions.maxLimit) {\n        newMaxValue = this.viewOptions.maxLimit;\n        newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.viewOptions.precisionLimit);\n      }\n      this.viewLowValue = newMinValue;\n      this.viewHighValue = newMaxValue;\n      this.applyViewChange();\n      this.updateHandles(PointerType.Min, this.valueToPosition(newMinValue));\n      this.updateHandles(PointerType.Max, this.valueToPosition(newMaxValue));\n    }\n    // Set the new value and position to the current tracking handle\n    positionTrackingHandle(newValue) {\n      newValue = this.applyMinMaxLimit(newValue);\n      if (this.range) {\n        if (this.viewOptions.pushRange) {\n          newValue = this.applyPushRange(newValue);\n        } else {\n          if (this.viewOptions.noSwitching) {\n            if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n              newValue = this.applyMinMaxRange(this.viewHighValue);\n            } else if (this.currentTrackingPointer === PointerType.Max && newValue < this.viewLowValue) {\n              newValue = this.applyMinMaxRange(this.viewLowValue);\n            }\n          }\n          newValue = this.applyMinMaxRange(newValue);\n          /* This is to check if we need to switch the min and max handles */\n          if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n            this.viewLowValue = this.viewHighValue;\n            this.applyViewChange();\n            this.updateHandles(PointerType.Min, this.maxHandleElement.position);\n            this.updateAriaAttributes();\n            this.currentTrackingPointer = PointerType.Max;\n            this.minHandleElement.active = false;\n            this.maxHandleElement.active = true;\n            if (this.viewOptions.keyboardSupport) {\n              this.maxHandleElement.focus();\n            }\n          } else if (this.currentTrackingPointer === PointerType.Max && newValue < this.viewLowValue) {\n            this.viewHighValue = this.viewLowValue;\n            this.applyViewChange();\n            this.updateHandles(PointerType.Max, this.minHandleElement.position);\n            this.updateAriaAttributes();\n            this.currentTrackingPointer = PointerType.Min;\n            this.maxHandleElement.active = false;\n            this.minHandleElement.active = true;\n            if (this.viewOptions.keyboardSupport) {\n              this.minHandleElement.focus();\n            }\n          }\n        }\n      }\n      if (this.getCurrentTrackingValue() !== newValue) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          this.viewLowValue = newValue;\n          this.applyViewChange();\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          this.viewHighValue = newValue;\n          this.applyViewChange();\n        }\n        this.updateHandles(this.currentTrackingPointer, this.valueToPosition(newValue));\n        this.updateAriaAttributes();\n      }\n    }\n    applyMinMaxLimit(newValue) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newValue < this.viewOptions.minLimit) {\n        return this.viewOptions.minLimit;\n      }\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newValue > this.viewOptions.maxLimit) {\n        return this.viewOptions.maxLimit;\n      }\n      return newValue;\n    }\n    applyMinMaxRange(newValue) {\n      const oppositeValue = this.currentTrackingPointer === PointerType.Min ? this.viewHighValue : this.viewLowValue;\n      const difference = Math.abs(newValue - oppositeValue);\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange)) {\n        if (difference < this.viewOptions.minRange) {\n          if (this.currentTrackingPointer === PointerType.Min) {\n            return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.viewOptions.precisionLimit);\n          } else if (this.currentTrackingPointer === PointerType.Max) {\n            return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.viewOptions.precisionLimit);\n          }\n        }\n      }\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxRange)) {\n        if (difference > this.viewOptions.maxRange) {\n          if (this.currentTrackingPointer === PointerType.Min) {\n            return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n          } else if (this.currentTrackingPointer === PointerType.Max) {\n            return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n          }\n        }\n      }\n      return newValue;\n    }\n    applyPushRange(newValue) {\n      const difference = this.currentTrackingPointer === PointerType.Min ? this.viewHighValue - newValue : newValue - this.viewLowValue;\n      const minRange = !ValueHelper.isNullOrUndefined(this.viewOptions.minRange) ? this.viewOptions.minRange : this.viewOptions.step;\n      const maxRange = this.viewOptions.maxRange;\n      // if smaller than minRange\n      if (difference < minRange) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          this.viewHighValue = MathHelper.roundToPrecisionLimit(Math.min(newValue + minRange, this.viewOptions.ceil), this.viewOptions.precisionLimit);\n          newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.viewOptions.precisionLimit);\n          this.applyViewChange();\n          this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          this.viewLowValue = MathHelper.roundToPrecisionLimit(Math.max(newValue - minRange, this.viewOptions.floor), this.viewOptions.precisionLimit);\n          newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.viewOptions.precisionLimit);\n          this.applyViewChange();\n          this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n        }\n        this.updateAriaAttributes();\n      } else if (!ValueHelper.isNullOrUndefined(maxRange) && difference > maxRange) {\n        // if greater than maxRange\n        if (this.currentTrackingPointer === PointerType.Min) {\n          this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.viewOptions.precisionLimit);\n          this.applyViewChange();\n          this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.viewOptions.precisionLimit);\n          this.applyViewChange();\n          this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n        }\n        this.updateAriaAttributes();\n      }\n      return newValue;\n    }\n    getChangeContext() {\n      const changeContext = new ChangeContext();\n      changeContext.pointerType = this.currentTrackingPointer;\n      changeContext.value = +this.value;\n      if (this.range) {\n        changeContext.highValue = +this.highValue;\n      }\n      return changeContext;\n    }\n    static ɵfac = function SliderComponent_Factory(t) {\n      return new (t || SliderComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(AllowUnsafeHtmlInSlider, 8));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: SliderComponent,\n      selectors: [[\"ngx-slider\"]],\n      contentQueries: function SliderComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n        }\n      },\n      viewQuery: function SliderComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c2, 5, SliderElementDirective);\n          i0.ɵɵviewQuery(_c3, 5, SliderElementDirective);\n          i0.ɵɵviewQuery(_c4, 5, SliderElementDirective);\n          i0.ɵɵviewQuery(_c5, 5, SliderElementDirective);\n          i0.ɵɵviewQuery(_c6, 5, SliderHandleDirective);\n          i0.ɵɵviewQuery(_c7, 5, SliderHandleDirective);\n          i0.ɵɵviewQuery(_c8, 5, SliderLabelDirective);\n          i0.ɵɵviewQuery(_c9, 5, SliderLabelDirective);\n          i0.ɵɵviewQuery(_c10, 5, SliderLabelDirective);\n          i0.ɵɵviewQuery(_c11, 5, SliderLabelDirective);\n          i0.ɵɵviewQuery(_c12, 5, SliderLabelDirective);\n          i0.ɵɵviewQuery(_c13, 5, SliderElementDirective);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leftOuterSelectionBarElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rightOuterSelectionBarElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fullBarElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectionBarElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.minHandleElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.maxHandleElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.floorLabelElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ceilLabelElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.minHandleLabelElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.maxHandleLabelElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.combinedLabelElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ngx-slider\"],\n      hostVars: 8,\n      hostBindings: function SliderComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"resize\", function SliderComponent_resize_HostBindingHandler($event) {\n            return ctx.onResize($event);\n          }, false, i0.ɵɵresolveWindow);\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"disabled\", ctx.sliderElementDisabledAttr)(\"aria-label\", ctx.sliderElementAriaLabel);\n          i0.ɵɵclassProp(\"vertical\", ctx.sliderElementVerticalClass)(\"animate\", ctx.sliderElementAnimateClass)(\"with-legend\", ctx.sliderElementWithLegendClass);\n        }\n      },\n      inputs: {\n        value: \"value\",\n        highValue: \"highValue\",\n        options: \"options\",\n        manualRefresh: \"manualRefresh\",\n        triggerFocus: \"triggerFocus\"\n      },\n      outputs: {\n        valueChange: \"valueChange\",\n        highValueChange: \"highValueChange\",\n        userChangeStart: \"userChangeStart\",\n        userChange: \"userChange\",\n        userChangeEnd: \"userChangeEnd\"\n      },\n      features: [i0.ɵɵProvidersFeature([NGX_SLIDER_CONTROL_VALUE_ACCESSOR]), i0.ɵɵNgOnChangesFeature],\n      decls: 29,\n      vars: 13,\n      consts: [[\"leftOuterSelectionBar\", \"\"], [\"rightOuterSelectionBar\", \"\"], [\"fullBar\", \"\"], [\"selectionBar\", \"\"], [\"minHandle\", \"\"], [\"maxHandle\", \"\"], [\"floorLabel\", \"\"], [\"ceilLabel\", \"\"], [\"minHandleLabel\", \"\"], [\"maxHandleLabel\", \"\"], [\"combinedLabel\", \"\"], [\"ticksElement\", \"\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-left-out-selection\"], [1, \"ngx-slider-span\", \"ngx-slider-bar\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-right-out-selection\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-full-bar\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bar-wrapper\", \"ngx-slider-selection-bar\"], [1, \"ngx-slider-span\", \"ngx-slider-bar\", \"ngx-slider-selection\", 3, \"ngStyle\"], [\"ngxSliderHandle\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-pointer\", \"ngx-slider-pointer-min\", 3, \"ngStyle\"], [\"ngxSliderHandle\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-pointer\", \"ngx-slider-pointer-max\", 3, \"ngStyle\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-limit\", \"ngx-slider-floor\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-limit\", \"ngx-slider-ceil\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-model-value\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-model-high\"], [\"ngxSliderLabel\", \"\", 1, \"ngx-slider-span\", \"ngx-slider-bubble\", \"ngx-slider-combined\"], [\"ngxSliderElement\", \"\", 1, \"ngx-slider-ticks\", 3, \"hidden\"], [\"class\", \"ngx-slider-tick\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngx-slider-tick\", 3, \"ngClass\", \"ngStyle\"], [3, \"template\", \"tooltip\", \"placement\"], [\"class\", \"ngx-slider-span ngx-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\", 4, \"ngIf\"], [\"class\", \"ngx-slider-span ngx-slider-tick-legend\", 3, \"innerText\", 4, \"ngIf\"], [\"class\", \"ngx-slider-span ngx-slider-tick-legend\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"ngx-slider-span\", \"ngx-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\"], [1, \"ngx-slider-span\", \"ngx-slider-tick-legend\", 3, \"innerText\"], [1, \"ngx-slider-span\", \"ngx-slider-tick-legend\", 3, \"innerHTML\"]],\n      template: function SliderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"span\", 12, 0);\n          i0.ɵɵelement(2, \"span\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"span\", 14, 1);\n          i0.ɵɵelement(5, \"span\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"span\", 15, 2);\n          i0.ɵɵelement(8, \"span\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"span\", 16, 3);\n          i0.ɵɵelement(11, \"span\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"span\", 18, 4)(14, \"span\", 19, 5)(16, \"span\", 20, 6)(18, \"span\", 21, 7)(20, \"span\", 22, 8)(22, \"span\", 23, 9)(24, \"span\", 24, 10);\n          i0.ɵɵelementStart(26, \"span\", 25, 11);\n          i0.ɵɵtemplate(28, SliderComponent_span_28_Template, 5, 10, \"span\", 26);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵclassProp(\"ngx-slider-transparent\", ctx.fullBarTransparentClass);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"ngx-slider-draggable\", ctx.selectionBarDraggableClass);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngStyle\", ctx.barStyle);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngStyle\", ctx.minPointerStyle);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"display\", ctx.range ? \"inherit\" : \"none\");\n          i0.ɵɵproperty(\"ngStyle\", ctx.maxPointerStyle);\n          i0.ɵɵadvance(12);\n          i0.ɵɵclassProp(\"ngx-slider-ticks-values-under\", ctx.ticksUnderValuesClass);\n          i0.ɵɵproperty(\"hidden\", !ctx.showTicks);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgStyle, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent],\n      styles: [\".ngx-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;user-select:none;touch-action:pan-y}  .ngx-slider.with-legend{margin-bottom:40px}  .ngx-slider[disabled]{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}  .ngx-slider[disabled] .ngx-slider-draggable{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-selection{background:#8b91a2}  .ngx-slider[disabled] .ngx-slider-tick{cursor:not-allowed}  .ngx-slider[disabled] .ngx-slider-tick.ngx-slider-selected{background:#8b91a2}  .ngx-slider .ngx-slider-span{white-space:nowrap;position:absolute;display:inline-block}  .ngx-slider .ngx-slider-base{width:100%;height:100%;padding:0}  .ngx-slider .ngx-slider-bar-wrapper{left:0;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}  .ngx-slider .ngx-slider-draggable{cursor:move}  .ngx-slider .ngx-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-transparent .ngx-slider-bar{background:transparent}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-left-out-selection .ngx-slider-bar{background:#df002d}  .ngx-slider .ngx-slider-bar-wrapper.ngx-slider-right-out-selection .ngx-slider-bar{background:#03a688}  .ngx-slider .ngx-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}  .ngx-slider .ngx-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}  .ngx-slider .ngx-slider-pointer:after{content:\\\"\\\";width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}  .ngx-slider .ngx-slider-pointer:hover:after{background-color:#fff}  .ngx-slider .ngx-slider-pointer.ngx-slider-active{z-index:4}  .ngx-slider .ngx-slider-pointer.ngx-slider-active:after{background-color:#451aff}  .ngx-slider .ngx-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}  .ngx-slider .ngx-slider-bubble.ngx-slider-limit{color:#55637d}  .ngx-slider .ngx-slider-ticks{box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}  .ngx-slider .ngx-slider-ticks-values-under .ngx-slider-tick-value{top:auto;bottom:-36px}  .ngx-slider .ngx-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}  .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:#0db9f0}  .ngx-slider .ngx-slider-tick-value{position:absolute;top:-34px;transform:translate(-50%)}  .ngx-slider .ngx-slider-tick-legend{position:absolute;top:24px;transform:translate(-50%);max-width:50px;white-space:normal}  .ngx-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;touch-action:pan-x}  .ngx-slider.vertical .ngx-slider-base{width:100%;height:100%;padding:0}  .ngx-slider.vertical .ngx-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}  .ngx-slider.vertical .ngx-slider-bar{bottom:0;left:auto;width:4px;height:100%}  .ngx-slider.vertical .ngx-slider-pointer{left:-14px!important;top:auto;bottom:0}  .ngx-slider.vertical .ngx-slider-bubble{left:16px!important;bottom:0}  .ngx-slider.vertical .ngx-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}  .ngx-slider.vertical .ngx-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}  .ngx-slider.vertical .ngx-slider-tick-value{left:24px;top:auto;transform:translateY(-28%)}  .ngx-slider.vertical .ngx-slider-tick-legend{top:auto;right:24px;transform:translateY(-28%);max-width:none;white-space:nowrap}  .ngx-slider.vertical .ngx-slider-ticks-values-under .ngx-slider-tick-value{bottom:auto;left:auto;right:24px}  .ngx-slider *{transition:none}  .ngx-slider.animate .ngx-slider-bar-wrapper{transition:all linear .3s}  .ngx-slider.animate .ngx-slider-selection{transition:background-color linear .3s}  .ngx-slider.animate .ngx-slider-pointer{transition:all linear .3s}  .ngx-slider.animate .ngx-slider-pointer:after{transition:all linear .3s}  .ngx-slider.animate .ngx-slider-bubble{transition:all linear .3s}  .ngx-slider.animate .ngx-slider-bubble.ngx-slider-limit{transition:opacity linear .3s}  .ngx-slider.animate .ngx-slider-bubble.ngx-slider-combined{transition:opacity linear .3s}  .ngx-slider.animate .ngx-slider-tick{transition:background-color linear .3s}\"],\n      changeDetection: 0\n    });\n  }\n  return SliderComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * NgxSlider module\n *\n * The module exports the slider component\n */\nlet NgxSliderModule = /*#__PURE__*/(() => {\n  class NgxSliderModule {\n    static ɵfac = function NgxSliderModule_Factory(t) {\n      return new (t || NgxSliderModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgxSliderModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n  return NgxSliderModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AllowUnsafeHtmlInSlider, ChangeContext, LabelType, NgxSliderModule, Options, PointerType, SliderComponent };\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {NgbActiveModal, NgbModalModule} from '@ng-bootstrap/ng-bootstrap';\nimport {CommonModule} from \"@angular/common\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\n\nexport interface KeyboardShortcut {\n  /**\n   * String representing key or key combo. Should use + for combos. Will render as upper case\n   */\n  key: string;\n  /**\n   * Description of how it works\n   */\n  description: string;\n}\n\n@Component({\n  selector: 'app-shortcuts-modal',\n  standalone: true,\n  imports: [CommonModule, NgbModalModule, TranslocoDirective],\n  templateUrl: './shortcuts-modal.component.html',\n  styleUrls: ['./shortcuts-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShortcutsModalComponent {\n\n  @Input() shortcuts: Array<KeyboardShortcut> = [];\n\n  constructor(public modal: NgbActiveModal) { }\n\n  close() {\n    this.modal.close();\n  }\n}\n","<ng-container *transloco=\"let t; read: 'shortcuts-modal'\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">{{t('title')}}</h4>\n    <button type=\"button\" class=\"btn-close\" [attr.aria-label]=\"t('close')\" (click)=\"close()\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"row g-0\">\n      <div class=\"col-md-6  mb-2\" *ngFor=\"let shortcut of shortcuts\">\n        <span><code>{{shortcut.key}}</code> {{t(shortcut.description)}}</span>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"close()\">{{t('close')}}</button>\n  </div>\n\n</ng-container>\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { PageSplitOption } from 'src/app/_models/preferences/page-split-option';\nimport { ScalingOption } from 'src/app/_models/preferences/scaling-option';\nimport { ReaderService } from 'src/app/_services/reader.service';\nimport { ChapterInfo } from '../_models/chapter-info';\nimport { DimensionMap } from '../_models/file-dimension';\nimport { FITTING_OPTION } from '../_models/reader-enums';\nimport { BookmarkInfo } from 'src/app/_models/manga-reader/bookmark-info';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagaReaderService {\n\n  private pageDimensions: DimensionMap = {};\n  private pairs: {[key: number]: number} = {};\n  private renderer: Renderer2;\n\n  constructor(rendererFactory: RendererFactory2, private readerService: ReaderService) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  load(chapterInfo: ChapterInfo | BookmarkInfo) {\n    chapterInfo.pageDimensions!.forEach(d => {\n      this.pageDimensions[d.pageNumber] = {\n        height: d.height,\n        width: d.width,\n        isWide: d.isWide\n      };\n    });\n    this.pairs = chapterInfo.doublePairs!;\n  }\n\n  adjustForDoubleReader(page: number) {\n    if (!this.pairs.hasOwnProperty(page)) return page;\n    return this.pairs[page];\n  }\n\n  getPageDimensions(pageNum: number) {\n    if (!this.pageDimensions.hasOwnProperty(pageNum)) return null;\n    return this.pageDimensions[pageNum];\n  }\n\n  /**\n   * If the image's width is greater than it's height\n   * @param pageNum Page number - Expected to call loadPageDimensions before this call\n   */\n  isWidePage(pageNum: number) {\n    if (!this.pageDimensions.hasOwnProperty(pageNum)) return false;\n    return this.pageDimensions[pageNum].isWide;\n  }\n\n  maxHeight() {\n    return  Object.values(this.pageDimensions).reduce((max, obj) => Math.max(max, obj.height), 0);\n  }\n\n  maxWidth() {\n    return  Object.values(this.pageDimensions).reduce((max, obj) => Math.max(max, obj.width), 0);\n  }\n\n\n\n  /**\n   * If pageNumber is 0 aka first page, which on double page rendering should always render as a single.\n   *\n   * @param pageNumber current page number\n   * @returns\n   */\n  isCoverImage(pageNumber: number) {\n    return pageNumber === 0;\n  }\n\n  /**\n   * Does the image need\n   * @returns If the current model reflects no split of fit split\n   * @remarks Fit to Screen falls under no split\n   */\n  isNoSplit(pageSplitOption: PageSplitOption) {\n    const splitValue = parseInt(pageSplitOption + '', 10); // Just in case it's a string from form\n    return splitValue === PageSplitOption.NoSplit || splitValue === PageSplitOption.FitSplit;\n  }\n\n  /**\n   * If the split option is Left to Right. This means that the Left side of the image renders before the Right side.\n   * In other words, If you were to visualize the parts as pages, Left is Page 0, Right is Page 1\n   */\n  isSplitLeftToRight(pageSplitOption: PageSplitOption) {\n    return parseInt(pageSplitOption + '', 10) === PageSplitOption.SplitLeftToRight;\n  }\n\n  /**\n   * If the current page is second to last image\n   */\n  isSecondLastImage(pageNum: number, maxPages: number) {\n    return (maxPages - 2) === pageNum;\n  }\n\n  /**\n   * If the current image is last image\n   */\n  isLastImage(pageNum: number, maxPages: number) {\n    return maxPages - 1 === pageNum;\n  }\n\n  /**\n   * Should Canvas Renderer be used\n   * @param img\n   * @param pageSplitOption\n   * @returns\n   */\n  shouldSplit(img: HTMLImageElement, pageSplitOption: PageSplitOption) {\n    const needsSplitting = this.isWidePage(this.readerService.imageUrlToPageNum(img?.src));\n    return !(this.isNoSplit(pageSplitOption) || !needsSplitting)\n  }\n\n  shouldRenderAsFitSplit(pageSplitOption: PageSplitOption) {\n    // Some pages aren't cover images but might need fit split renderings\n    if (parseInt(pageSplitOption + '', 10) !== PageSplitOption.FitSplit) return false;\n    return true;\n  }\n\n\n  translateScalingOption(option: ScalingOption) {\n    switch (option) {\n      case (ScalingOption.Automatic):\n      {\n        const windowWidth = window.innerWidth\n                  || document.documentElement.clientWidth\n                  || document.body.clientWidth;\n        const windowHeight = window.innerHeight\n                  || document.documentElement.clientHeight\n                  || document.body.clientHeight;\n\n        const ratio = windowWidth / windowHeight;\n        if (windowHeight > windowWidth) {\n          return FITTING_OPTION.WIDTH;\n        }\n\n        if (windowWidth >= windowHeight || ratio > 1.0) {\n          return FITTING_OPTION.HEIGHT;\n        }\n        return FITTING_OPTION.WIDTH;\n      }\n      case (ScalingOption.FitToHeight):\n        return FITTING_OPTION.HEIGHT;\n      case (ScalingOption.FitToWidth):\n        return FITTING_OPTION.WIDTH;\n      default:\n        return FITTING_OPTION.ORIGINAL;\n    }\n  }\n\n\n  applyBookmarkEffect(elements: Array<Element | ElementRef>) {\n    if (elements.length > 0) {\n      elements.forEach(elem => this.renderer.addClass(elem, 'bookmark-effect'));\n      setTimeout(() => {\n        elements.forEach(elem => this.renderer.removeClass(elem, 'bookmark-effect'));\n      }, 1000);\n    }\n  }\n\n\n\n\n}\n","import { inject } from '@angular/core';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeStyle',\n  standalone: true\n})\nexport class SafeStylePipe implements PipeTransform {\n  private readonly sanitizer: DomSanitizer = inject(DomSanitizer);\n  constructor(){}\n\n  transform(style: string) {\n      return this.sanitizer.bypassSecurityTrustStyle(style);\n  }\n\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { filter, map, Observable, of, tap } from 'rxjs';\nimport { PageSplitOption } from 'src/app/_models/preferences/page-split-option';\nimport { ReaderService } from 'src/app/_services/reader.service';\nimport { LayoutMode } from '../../_models/layout-mode';\nimport { FITTING_OPTION, PAGING_DIRECTION, SPLIT_PAGE_PART } from '../../_models/reader-enums';\nimport { ReaderSetting } from '../../_models/reader-setting';\nimport { ImageRenderer } from '../../_models/renderer';\nimport { ManagaReaderService } from '../../_service/managa-reader.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport { SafeStylePipe } from '../../../_pipes/safe-style.pipe';\nimport { NgClass, AsyncPipe } from '@angular/common';\n\nconst ValidSplits = [PageSplitOption.SplitLeftToRight, PageSplitOption.SplitRightToLeft];\n\n@Component({\n    selector: 'app-canvas-renderer',\n    templateUrl: './canvas-renderer.component.html',\n    styleUrls: ['./canvas-renderer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [NgClass, AsyncPipe, SafeStylePipe]\n})\nexport class CanvasRendererComponent implements OnInit, AfterViewInit, ImageRenderer {\n\n  @Input({required: true}) readerSettings$!: Observable<ReaderSetting>;\n  @Input({required: true}) image$!: Observable<HTMLImageElement | null>;\n  @Input({required: true}) bookmark$!: Observable<number>;\n  @Input({required: true}) showClickOverlay$!: Observable<boolean>;\n  @Input() imageFit$!: Observable<FITTING_OPTION>;\n  @Output() imageHeight: EventEmitter<number> = new EventEmitter<number>();\n  private readonly destroyRef = inject(DestroyRef);\n\n  @ViewChild('content') canvas: ElementRef | undefined;\n  private ctx!: CanvasRenderingContext2D;\n\n  currentImageSplitPart: SPLIT_PAGE_PART = SPLIT_PAGE_PART.NO_SPLIT;\n  pagingDirection: PAGING_DIRECTION = PAGING_DIRECTION.FORWARD;\n\n  fit: FITTING_OPTION = FITTING_OPTION.ORIGINAL;\n  pageSplit: PageSplitOption = PageSplitOption.FitSplit;\n  layoutMode: LayoutMode = LayoutMode.Single;\n\n  canvasImage: HTMLImageElement | null = null;\n  showClickOverlayClass$!: Observable<string>;\n  /**\n   * Maps darkness value to the filter style\n   */\n  darkness$: Observable<string> = of('brightness(100%)');\n  /**\n   * Maps image fit value to the classes for image fitting\n   */\n  imageFitClass$!: Observable<string>;\n  renderWithCanvas: boolean = false;\n\n\n\n  constructor(private readonly cdRef: ChangeDetectorRef, private mangaReaderService: ManagaReaderService, private readerService: ReaderService) { }\n\n  ngOnInit(): void {\n    this.readerSettings$.pipe(takeUntilDestroyed(this.destroyRef), tap((value: ReaderSetting) => {\n      this.fit = value.fitting;\n      this.pageSplit = value.pageSplit;\n      this.layoutMode = value.layoutMode;\n      const rerenderNeeded = this.pageSplit != value.pageSplit;\n      this.pagingDirection = value.pagingDirection;\n      if (rerenderNeeded) {\n        this.reset();\n      }\n    })).subscribe(() => {});\n\n    this.darkness$ = this.readerSettings$.pipe(\n      map(values => 'brightness(' + values.darkness + '%)'),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.imageFitClass$ = this.readerSettings$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map((values: ReaderSetting) => values.fitting),\n      map(fit => {\n        if (fit === FITTING_OPTION.WIDTH) return fit; // || this.layoutMode === LayoutMode.Single (so that we can check the wide stuff)\n        if (this.canvasImage === null) return fit;\n\n        // Would this ever execute given that we perform splitting only in this renderer?\n        if (\n          this.mangaReaderService.isWidePage(this.readerService.imageUrlToPageNum(this.canvasImage.src)) &&\n          this.mangaReaderService.shouldRenderAsFitSplit(this.pageSplit)\n          ) {\n          // Rewriting to fit to width for this cover image\n          return FITTING_OPTION.WIDTH;\n        }\n        return fit;\n      }),\n      filter(() => this.isValid()),\n    );\n\n\n    this.bookmark$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(_ => {\n        if (this.currentImageSplitPart === SPLIT_PAGE_PART.NO_SPLIT) return;\n        if (!this.canvas) return;\n\n        const elements = [this.canvas?.nativeElement];\n        this.mangaReaderService.applyBookmarkEffect(elements);\n      })\n    ).subscribe(() => {});\n\n    this.showClickOverlayClass$ = this.showClickOverlay$.pipe(\n      map(showOverlay => showOverlay ? 'blur' : ''),\n      takeUntilDestroyed(this.destroyRef)\n    );\n  }\n\n  ngAfterViewInit() {\n    if (this.canvas) {\n      this.ctx = this.canvas.nativeElement.getContext('2d', { alpha: false });\n    }\n  }\n\n\n  reset() {\n    this.currentImageSplitPart = SPLIT_PAGE_PART.NO_SPLIT;\n  }\n\n  updateSplitPage() {\n    if (this.canvasImage == null) return;\n    const needsSplitting = this.mangaReaderService.isWidePage(this.readerService.imageUrlToPageNum(this.canvasImage.src));\n\n    if (!needsSplitting || this.mangaReaderService.isNoSplit(this.pageSplit)) {\n      this.currentImageSplitPart = SPLIT_PAGE_PART.NO_SPLIT;\n      return needsSplitting;\n    }\n    const splitLeftToRight = this.mangaReaderService.isSplitLeftToRight(this.pageSplit);\n\n    if (this.pagingDirection === PAGING_DIRECTION.FORWARD) {\n      switch (this.currentImageSplitPart) {\n        case SPLIT_PAGE_PART.NO_SPLIT:\n          this.currentImageSplitPart = splitLeftToRight ? SPLIT_PAGE_PART.LEFT_PART : SPLIT_PAGE_PART.RIGHT_PART;\n          break;\n        case SPLIT_PAGE_PART.LEFT_PART:\n          const r2lSplittingPart = (needsSplitting ? SPLIT_PAGE_PART.RIGHT_PART : SPLIT_PAGE_PART.NO_SPLIT);\n          this.currentImageSplitPart = splitLeftToRight ? SPLIT_PAGE_PART.RIGHT_PART : r2lSplittingPart;\n          break;\n        case SPLIT_PAGE_PART.RIGHT_PART:\n          const l2rSplittingPart = (needsSplitting ? SPLIT_PAGE_PART.LEFT_PART : SPLIT_PAGE_PART.NO_SPLIT);\n          this.currentImageSplitPart = splitLeftToRight ? l2rSplittingPart : SPLIT_PAGE_PART.LEFT_PART;\n          break;\n      }\n    } else if (this.pagingDirection === PAGING_DIRECTION.BACKWARDS) {\n      switch (this.currentImageSplitPart) {\n        case SPLIT_PAGE_PART.NO_SPLIT:\n          this.currentImageSplitPart = splitLeftToRight ? SPLIT_PAGE_PART.RIGHT_PART : SPLIT_PAGE_PART.LEFT_PART;\n          break;\n        case SPLIT_PAGE_PART.LEFT_PART:\n          const l2rSplittingPart = (needsSplitting ? SPLIT_PAGE_PART.RIGHT_PART : SPLIT_PAGE_PART.NO_SPLIT);\n          this.currentImageSplitPart = splitLeftToRight? l2rSplittingPart : SPLIT_PAGE_PART.RIGHT_PART;\n          break;\n        case SPLIT_PAGE_PART.RIGHT_PART:\n          this.currentImageSplitPart = splitLeftToRight ? SPLIT_PAGE_PART.LEFT_PART : (needsSplitting ? SPLIT_PAGE_PART.LEFT_PART : SPLIT_PAGE_PART.NO_SPLIT);\n          break;\n      }\n    }\n    return needsSplitting;\n  }\n\n\n  isValid() {\n    return this.renderWithCanvas;\n  }\n\n  /**\n   * This renderer does not render when splitting is not needed\n   * @param img\n   * @returns\n   */\n  renderPage(img: Array<HTMLImageElement | null>) {\n    this.renderWithCanvas = false;\n    if (img === null || img.length === 0 || img[0] === null) return;\n    if (!this.ctx || !this.canvas) return;\n    this.canvasImage = img[0];\n    this.cdRef.markForCheck();\n\n    if (this.layoutMode !== LayoutMode.Single || !ValidSplits.includes(this.pageSplit)) {\n      return;\n    }\n\n    const needsSplitting = this.updateSplitPage();\n    if (!needsSplitting) return;\n\n    // This is toggling true when manga reader shouldn't use this code\n\n    this.renderWithCanvas = true;\n    if (this.currentImageSplitPart === SPLIT_PAGE_PART.NO_SPLIT) return;\n\n    this.setCanvasSize();\n\n    if (needsSplitting && this.currentImageSplitPart === SPLIT_PAGE_PART.LEFT_PART) {\n      this.canvas.nativeElement.width = this.canvasImage.width / 2;\n      this.ctx.drawImage(this.canvasImage, 0, 0, this.canvasImage.width, this.canvasImage.height, 0, 0, this.canvasImage.width, this.canvasImage.height);\n      this.cdRef.markForCheck();\n    } else if (needsSplitting && this.currentImageSplitPart === SPLIT_PAGE_PART.RIGHT_PART) {\n      this.canvas.nativeElement.width = this.canvasImage.width / 2;\n      this.ctx.drawImage(this.canvasImage, 0, 0, this.canvasImage.width, this.canvasImage.height, -this.canvasImage.width / 2, 0, this.canvasImage.width, this.canvasImage.height);\n      this.cdRef.markForCheck();\n    }\n\n    this.cdRef.markForCheck();\n  }\n\n  getPageAmount(direction: PAGING_DIRECTION) {\n    if (this.canvasImage === null) return 1;\n    if (!this.mangaReaderService.isWidePage(this.readerService.imageUrlToPageNum(this.canvasImage.src))) return 1;\n    switch(direction) {\n      case PAGING_DIRECTION.FORWARD:\n        return this.shouldMoveNext() ? 1 : 0;\n      case PAGING_DIRECTION.BACKWARDS:\n        return this.shouldMovePrev() ? 1 : 0;\n    }\n  }\n\n  shouldMoveNext() {\n    if (this.mangaReaderService.isNoSplit(this.pageSplit)) return true;\n    const isSplitLeftToRight = this.mangaReaderService.isSplitLeftToRight(this.pageSplit);\n    return this.currentImageSplitPart !== (this.mangaReaderService.isSplitLeftToRight(this.pageSplit) ? SPLIT_PAGE_PART.LEFT_PART : SPLIT_PAGE_PART.RIGHT_PART);\n  }\n\n  shouldMovePrev() {\n    if (this.mangaReaderService.isNoSplit(this.pageSplit)) return true;\n    return this.currentImageSplitPart !== (this.mangaReaderService.isSplitLeftToRight(this.pageSplit) ? SPLIT_PAGE_PART.RIGHT_PART : SPLIT_PAGE_PART.LEFT_PART);\n  }\n\n  /**\n   * There are some hard limits on the size of canvas' that we must cap at. https://github.com/jhildenbiddle/canvas-size#test-results\n   * For Safari, it's 16,777,216, so we cap at 4096x4096 when this happens. The drawImage in render will perform bi-cubic scaling for us.\n   */\n   setCanvasSize() {\n    if (this.canvasImage == null) return;\n    if (!this.ctx || !this.canvas) { return; }\n    const isSafari = [\n      'iPad Simulator',\n      'iPhone Simulator',\n      'iPod Simulator',\n      'iPad',\n      'iPhone',\n      'iPod'\n    ].includes(navigator.platform)\n    // iPad on iOS 13 detection\n    || (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document);\n    const canvasLimit = isSafari ? 16_777_216 : 124_992_400;\n    const needsScaling = this.canvasImage.width * this.canvasImage.height > canvasLimit;\n    if (needsScaling) {\n      this.canvas.nativeElement.width = isSafari ? 4_096 : 16_384;\n      this.canvas.nativeElement.height = isSafari ? 4_096 : 16_384;\n    } else {\n      this.canvas.nativeElement.width = this.canvasImage.width;\n      this.canvas.nativeElement.height = this.canvasImage.height;\n    }\n    this.imageHeight.emit(this.canvas.nativeElement.height);\n    this.cdRef.markForCheck();\n  }\n\n  getBookmarkPageCount(): number {\n    return 1;\n  }\n}\n","<div class=\"image-container {{imageFitClass$ | async}}\"\n     [ngClass]=\"{'d-none': !renderWithCanvas }\"\n     [style.filter]=\"(darkness$ | async)  ?? '' | safeStyle\">\n     <canvas #content ondragstart=\"return false;\" onselectstart=\"return false;\" class=\"{{imageFitClass$ | async}}\"></canvas>\n</div>\n\n","import { DOCUMENT, NgIf, NgClass, AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  EventEmitter,\n  inject,\n  Inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Observable, of, map, tap, shareReplay, filter, combineLatest } from 'rxjs';\nimport { PageSplitOption } from 'src/app/_models/preferences/page-split-option';\nimport { ReaderMode } from 'src/app/_models/preferences/reader-mode';\nimport { ReaderService } from 'src/app/_services/reader.service';\nimport { LayoutMode } from '../../_models/layout-mode';\nimport { FITTING_OPTION, PAGING_DIRECTION } from '../../_models/reader-enums';\nimport { ReaderSetting } from '../../_models/reader-setting';\nimport { DEBUG_MODES, ImageRenderer } from '../../_models/renderer';\nimport { ManagaReaderService } from '../../_service/managa-reader.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport { SafeStylePipe } from '../../../_pipes/safe-style.pipe';\n\n/**\n * Renders 2 pages except on first page, last page, and before a wide image\n */\n@Component({\n    selector: 'app-double-renderer',\n    templateUrl: './double-renderer.component.html',\n    styleUrls: ['./double-renderer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [NgIf, NgClass, AsyncPipe, SafeStylePipe]\n})\nexport class DoubleRendererComponent implements OnInit, ImageRenderer {\n\n  @Input({required: true}) readerSettings$!: Observable<ReaderSetting>;\n  @Input({required: true}) image$!: Observable<HTMLImageElement | null>;\n  @Input({required: true}) bookmark$!: Observable<number>;\n  @Input({required: true}) showClickOverlay$!: Observable<boolean>;\n  @Input({required: true}) pageNum$!: Observable<{pageNum: number, maxPages: number}>;\n  @Input({required: true}) getPage!: (pageNum: number) => HTMLImageElement;\n  @Output() imageHeight: EventEmitter<number> = new EventEmitter<number>();\n  private readonly destroyRef = inject(DestroyRef);\n\n  debugMode: DEBUG_MODES = DEBUG_MODES.None;\n  imageFitClass$!: Observable<string>;\n  showClickOverlayClass$!: Observable<string>;\n  readerModeClass$!: Observable<string>;\n  layoutClass$!: Observable<string>;\n  darkness$: Observable<string> = of('brightness(100%)');\n  emulateBookClass$: Observable<string> = of('');\n  layoutMode: LayoutMode = LayoutMode.Single;\n  pageSplit: PageSplitOption = PageSplitOption.FitSplit;\n  pageNum: number = 0;\n  maxPages: number = 0;\n\n  /**\n   * Used to render a page on the canvas or in the image tag. This Image element is prefetched by the cachedImages buffer.\n   * @remarks Used for rendering to screen.\n   */\n  currentImage = new Image();\n   /**\n    * Used solely for LayoutMode.Double rendering.\n    * @remarks Used for rendering to screen.\n    */\n  currentImage2 = new Image();\n\n  /**\n   * Determines if we should render a double page.\n   * The general gist is if we are on double layout mode, the current page (first page) is not a cover image or a wide image\n   * and the next page is not a wide image (as only non-wides should be shown next to each other).\n   * @remarks This will always fail if the window's width is greater than the height\n  */\n  shouldRenderDouble$!: Observable<boolean>;\n\n\n  protected readonly ReaderMode = ReaderMode;\n  protected readonly LayoutMode = LayoutMode;\n\n\n  constructor(private readonly cdRef: ChangeDetectorRef, public mangaReaderService: ManagaReaderService,\n    @Inject(DOCUMENT) private document: Document, public readerService: ReaderService) { }\n\n  ngOnInit(): void {\n    this.readerModeClass$ = this.readerSettings$.pipe(\n      map(values => values.readerMode),\n      map(mode => mode === ReaderMode.LeftRight || mode === ReaderMode.UpDown ? '' : 'd-none'),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.darkness$ = this.readerSettings$.pipe(\n      map(values => 'brightness(' + values.darkness + '%)'),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.emulateBookClass$ = this.readerSettings$.pipe(\n      map(data => data.emulateBook),\n      map(enabled => enabled ? 'book-shadow' : ''),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.showClickOverlayClass$ = this.showClickOverlay$.pipe(\n      map(showOverlay => showOverlay ? 'blur' : ''),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.pageNum$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(pageInfo => {\n        this.pageNum = pageInfo.pageNum;\n        this.maxPages = pageInfo.maxPages;\n\n        this.currentImage = this.getPage(this.pageNum);\n        this.currentImage2 = this.getPage(this.pageNum + 1);\n\n        this.cdRef.markForCheck();\n      }),\n      filter(_ => this.isValid()),\n    ).subscribe(() => {});\n\n    this.shouldRenderDouble$ = this.pageNum$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map((_) => this.shouldRenderDouble()),\n      filter(_ => this.isValid()),\n    );\n\n    this.imageFitClass$ = this.readerSettings$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map(values => values.fitting),\n      filter(_ => this.isValid()),\n      shareReplay()\n    );\n\n    this.layoutClass$ = combineLatest([this.shouldRenderDouble$, this.readerSettings$]).pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map((value) =>  {\n        if (value[0] && value[1].fitting === FITTING_OPTION.WIDTH) return 'fit-to-width-double-offset';\n        if (value[0] && value[1].fitting === FITTING_OPTION.HEIGHT) return 'fit-to-height-double-offset';\n        if (value[0] && value[1].fitting === FITTING_OPTION.ORIGINAL) return 'original-double-offset';\n        if (this.mangaReaderService.isWidePage(this.pageNum) ) return 'double-offset';\n        return '';\n      }),\n      filter(_ => this.isValid()),\n    );\n\n\n    this.readerSettings$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(values => {\n        this.layoutMode = values.layoutMode;\n        this.pageSplit = values.pageSplit;\n        this.cdRef.markForCheck();\n      })\n    ).subscribe(() => {});\n\n    this.bookmark$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(_ => {\n        const elements = [];\n        const image1 = this.document.querySelector('#image-1');\n        if (image1 != null) elements.push(image1);\n\n        const image2 = this.document.querySelector('#image-2');\n        if (image2 != null) elements.push(image2);\n\n        this.mangaReaderService.applyBookmarkEffect(elements);\n      }),\n      filter(_ => this.isValid()),\n    ).subscribe(() => {});\n  }\n\n\n  shouldRenderDouble() {\n    if (!this.isValid()) return false;\n\n    if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n      this.debugLog('Not rendering double as current page is cover image');\n      return false;\n    }\n\n    if (this.mangaReaderService.isWidePage(this.pageNum) ) {\n      this.debugLog('Not rendering double as current page is wide image');\n      return false;\n    }\n\n    if (this.mangaReaderService.isSecondLastImage(this.pageNum, this.maxPages)) {\n      this.debugLog('Not rendering double as current page is last');\n      return false;\n    }\n\n    if (this.mangaReaderService.isLastImage(this.pageNum, this.maxPages)) {\n      this.debugLog('Not rendering double as current page is last');\n      return false;\n    }\n\n    if (this.mangaReaderService.isWidePage(this.pageNum + 1) ) {\n      this.debugLog('Not rendering double as next page is wide image');\n      return false;\n    }\n\n    return true;\n  }\n\n  isValid() {\n    return this.layoutMode === LayoutMode.Double;\n  }\n\n  renderPage(img: Array<HTMLImageElement | null>): void {\n    if (img === null || img.length === 0 || img[0] === null) return;\n    if (!this.isValid()) return;\n\n    // First load, switching from double manga -> double, this is 0 and thus not rendering\n    if (!this.shouldRenderDouble() && (this.currentImage.height || img[0].height) > 0) {\n      this.imageHeight.emit(this.currentImage.height || img[0].height);\n      return;\n    }\n\n    this.cdRef.markForCheck();\n    this.imageHeight.emit(Math.max(this.currentImage.height, this.currentImage2.height));\n    this.cdRef.markForCheck();\n  }\n\n  shouldMovePrev(): boolean {\n    return true;\n  }\n  shouldMoveNext(): boolean {\n    return true;\n  }\n  getPageAmount(direction: PAGING_DIRECTION): number {\n    if (!this.isValid()) return 0;\n\n    switch (direction) {\n      case PAGING_DIRECTION.FORWARD:\n        if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n          this.debugLog('Moving forward 1 page as on cover image');\n          return 1;\n        }\n        if (this.mangaReaderService.isWidePage(this.pageNum)) {\n          this.debugLog('Moving forward 1 page as current page is wide');\n          return 1;\n        }\n        if (this.mangaReaderService.isWidePage(this.pageNum + 1)) {\n          this.debugLog('Moving forward 1 page as next page is wide');\n          return 1;\n        }\n        if (this.mangaReaderService.isSecondLastImage(this.pageNum, this.maxPages)) {\n          this.debugLog('Moving forward 1 page as 2 pages left');\n          return 1;\n        }\n        if (this.mangaReaderService.isLastImage(this.pageNum, this.maxPages)) {\n          this.debugLog('Moving forward 1 page as 1 page left');\n          return 1;\n        }\n        this.debugLog('Moving forward 2 pages');\n        return 2;\n      case PAGING_DIRECTION.BACKWARDS:\n        if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n          this.debugLog('Moving back 1 page as on cover image');\n          return 1;\n        }\n\n        if (this.mangaReaderService.adjustForDoubleReader(this.pageNum - 1) != this.pageNum - 1 && !this.mangaReaderService.isWidePage(this.pageNum - 2)) {\n          this.debugLog('Moving back 2 pages as previous pair should be in a pair');\n          return 2;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum)) {\n          this.debugLog('Moving back 1 page as current page is wide');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum - 1)) {\n          this.debugLog('Moving back 1 page as prev page is wide');\n          return 1;\n        }\n        if (this.mangaReaderService.isWidePage(this.pageNum - 2)) {\n          this.debugLog('Moving back 1 page as 2 pages back is wide');\n          return 1;\n        }\n\n        this.debugLog('Moving back 2 pages');\n        return 2;\n    }\n  }\n  reset(): void {}\n\n  getBookmarkPageCount(): number {\n    return this.shouldRenderDouble() ? 2 : 1;\n  }\n\n  debugLog(message: string, extraData?: any) {\n    if (!(this.debugMode & DEBUG_MODES.Logs)) return;\n\n    if (extraData !== undefined) {\n      console.log(message, extraData);\n    } else {\n      console.log(message);\n    }\n  }\n}\n","<ng-container *ngIf=\"isValid()\">\n    <div class=\"image-container {{imageFitClass$ | async}} {{layoutClass$ | async}} {{emulateBookClass$ | async}}\"\n        [style.filter]=\"(darkness$ | async)  ?? '' | safeStyle\"\n        [ngClass]=\"{'center-double': (shouldRenderDouble$ | async)}\">\n        <ng-container *ngIf=\"currentImage\">\n            <img alt=\" \"\n                #image [src]=\"currentImage.src\"\n                id=\"image-1\"\n                class=\"{{imageFitClass$ | async}} {{readerModeClass$ | async}} {{showClickOverlayClass$ | async}}\"\n            >\n        </ng-container>\n        <ng-container *ngIf=\"shouldRenderDouble$ | async\">\n            <img alt=\" \" [src]=\"currentImage2.src\"\n            id=\"image-2\"\n            class=\"image-2 {{imageFitClass$ | async}} {{readerModeClass$ | async}} {{showClickOverlayClass$ | async}}\">\n        </ng-container>\n    </div>\n</ng-container>\n","import { DOCUMENT, NgIf, NgClass, AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  EventEmitter,\n  inject,\n  Inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Observable, of, map, tap, shareReplay, filter, combineLatest } from 'rxjs';\nimport { PageSplitOption } from 'src/app/_models/preferences/page-split-option';\nimport { ReaderMode } from 'src/app/_models/preferences/reader-mode';\nimport { ReaderService } from 'src/app/_services/reader.service';\nimport { LayoutMode } from '../../_models/layout-mode';\nimport { FITTING_OPTION, PAGING_DIRECTION } from '../../_models/reader-enums';\nimport { ReaderSetting } from '../../_models/reader-setting';\nimport { DEBUG_MODES, ImageRenderer } from '../../_models/renderer';\nimport { ManagaReaderService } from '../../_service/managa-reader.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport { SafeStylePipe } from '../../../_pipes/safe-style.pipe';\n\n/**\n * This is aimed at manga. Double page renderer but where if we have page = 10, you will see\n * page 11 page 10.\n */\n@Component({\n    selector: 'app-double-reverse-renderer',\n    templateUrl: './double-reverse-renderer.component.html',\n    styleUrls: ['./double-reverse-renderer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [NgIf, NgClass, AsyncPipe, SafeStylePipe]\n})\nexport class DoubleReverseRendererComponent implements OnInit, ImageRenderer {\n\n\n  @Input({required: true}) readerSettings$!: Observable<ReaderSetting>;\n  @Input({required: true}) image$!: Observable<HTMLImageElement | null>;\n  @Input({required: true}) bookmark$!: Observable<number>;\n  @Input({required: true}) showClickOverlay$!: Observable<boolean>;\n  @Input({required: true}) pageNum$!: Observable<{pageNum: number, maxPages: number}>;\n  @Input({required: true}) getPage!: (pageNum: number) => HTMLImageElement;\n  @Output() imageHeight: EventEmitter<number> = new EventEmitter<number>();\n  private readonly destroyRef = inject(DestroyRef);\n\n  debugMode: DEBUG_MODES = DEBUG_MODES.None;\n\n  imageFitClass$!: Observable<string>;\n  showClickOverlayClass$!: Observable<string>;\n  readerModeClass$!: Observable<string>;\n  layoutClass$!: Observable<string>;\n  darkness$: Observable<string> = of('brightness(100%)');\n  emulateBookClass$: Observable<string> = of('');\n  layoutMode: LayoutMode = LayoutMode.Single;\n  pageSplit: PageSplitOption = PageSplitOption.FitSplit;\n  pageNum: number = 0;\n  maxPages: number = 0;\n\n  /**\n   * Used to render a page on the canvas or in the image tag. This Image element is prefetched by the cachedImages buffer.\n   * @remarks Used for rendering to screen.\n   */\n  leftImage = new Image();\n   /**\n    * Used solely for LayoutMode.Double rendering. Will always hold the next image to currentImage\n    * @remarks Used for rendering to screen.\n    */\n  rightImage = new Image();\n\n  /**\n   * Determines if we should render a double page.\n   * The general gist is if we are on double layout mode, the current page (first page) is not a cover image or a wide image\n   * and the next page is not a wide image (as only non-wides should be shown next to each other).\n   * @remarks This will always fail if the window's width is greater than the height\n  */\n  shouldRenderDouble$!: Observable<boolean>;\n\n  get ReaderMode() {return ReaderMode;}\n  get FITTING_OPTION() {return FITTING_OPTION;}\n  get LayoutMode() {return LayoutMode;}\n\n\n\n  constructor(private readonly cdRef: ChangeDetectorRef, public mangaReaderService: ManagaReaderService,\n    @Inject(DOCUMENT) private document: Document, public readerService: ReaderService) { }\n\n  ngOnInit(): void {\n    this.readerModeClass$ = this.readerSettings$.pipe(\n      filter(_ => this.isValid()),\n      map(values => values.readerMode),\n      map(mode => mode === ReaderMode.LeftRight || mode === ReaderMode.UpDown ? '' : 'd-none'),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.darkness$ = this.readerSettings$.pipe(\n      map(values => 'brightness(' + values.darkness + '%)'),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.emulateBookClass$ = this.readerSettings$.pipe(\n      map(data => data.emulateBook),\n      map(enabled => enabled ? 'book-shadow' : ''),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.showClickOverlayClass$ = this.showClickOverlay$.pipe(\n      map(showOverlay => showOverlay ? 'blur' : ''),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.pageNum$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(pageInfo => {\n        this.pageNum = pageInfo.pageNum;\n        this.maxPages = pageInfo.maxPages;\n\n        this.leftImage = this.getPage(this.pageNum);\n        this.rightImage = this.getPage(this.pageNum + 1);\n      }),\n      filter(_ => this.isValid()),\n    ).subscribe(() => {});\n\n    this.shouldRenderDouble$ = this.pageNum$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map(() => this.shouldRenderDouble()),\n      filter(() => this.isValid()),\n      shareReplay()\n    );\n\n    this.imageFitClass$ = this.readerSettings$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map(values => values.fitting),\n      filter(_ => this.isValid()),\n      shareReplay()\n    );\n\n    this.layoutClass$ = combineLatest([this.shouldRenderDouble$, this.readerSettings$]).pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map((value) =>  {\n        if (value[0] && value[1].fitting === FITTING_OPTION.WIDTH) return 'fit-to-width-double-offset';\n        if (value[0] && value[1].fitting === FITTING_OPTION.HEIGHT) return 'fit-to-height-double-offset';\n        if (value[0] && value[1].fitting === FITTING_OPTION.ORIGINAL) return 'original-double-offset';\n        if (this.mangaReaderService.isWidePage(this.pageNum) ) return 'double-offset';\n        return '';\n      }),\n      filter(_ => this.isValid()),\n    );\n\n\n    this.readerSettings$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(values => {\n        this.layoutMode = values.layoutMode;\n        this.pageSplit = values.pageSplit;\n        this.cdRef.markForCheck();\n      })\n    ).subscribe(() => {});\n\n    this.bookmark$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(_ => {\n        const elements = [];\n        const image1 = this.document.querySelector('#image-1');\n        if (image1 != null) elements.push(image1);\n\n        const image2 = this.document.querySelector('#image-2');\n          if (image2 != null) elements.push(image2);\n\n        this.mangaReaderService.applyBookmarkEffect(elements);\n      }),\n      filter(_ => this.isValid()),\n    ).subscribe(() => {});\n  }\n\n  shouldRenderDouble() {\n    if (!this.isValid()) return false;\n\n    if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n      this.debugLog('Not rendering double as current page is cover image');\n      return false;\n    }\n\n    if (this.mangaReaderService.isWidePage(this.pageNum)) {\n      this.debugLog('Not rendering double as current page is wide image');\n      return false;\n    }\n\n    if (this.mangaReaderService.isSecondLastImage(this.pageNum, this.maxPages)) {\n      this.debugLog('Not rendering double as current page is last');\n      return false;\n    }\n\n    if (this.mangaReaderService.isWidePage(this.pageNum + 1) ) {\n      this.debugLog('Not rendering double as next page is wide image');\n      return false;\n    }\n\n    if (this.mangaReaderService.isLastImage(this.pageNum, this.maxPages)) {\n      this.debugLog('Not rendering double as current page is last and there are an odd number of pages');\n      return false;\n    }\n\n    return true;\n  }\n\n  isValid() {\n    return this.layoutMode === LayoutMode.DoubleReversed;\n  }\n\n  renderPage(img: Array<HTMLImageElement | null>): void {\n    if (img === null || img.length === 0 || img[0] === null) return;\n    if (!this.isValid()) return;\n\n    this.imageHeight.emit(Math.max(this.leftImage.height, this.rightImage.height));\n    this.cdRef.markForCheck();\n  }\n\n  shouldMovePrev(): boolean {\n    return true;\n  }\n  shouldMoveNext(): boolean {\n    return true;\n  }\n  getPageAmount(direction: PAGING_DIRECTION): number {\n    if (this.layoutMode !== LayoutMode.DoubleReversed) return 0;\n\n    switch (direction) {\n      case PAGING_DIRECTION.FORWARD:\n        if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n          this.debugLog('Moving forward 1 page as on cover image');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum)) {\n          this.debugLog('Moving forward 1 page as current page is wide');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum + 1)) {\n          this.debugLog('Moving forward 1 page as current page is wide');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isSecondLastImage(this.pageNum, this.maxPages)) {\n          this.debugLog('Moving forward 1 page as 2 pages left');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isLastImage(this.pageNum, this.maxPages)) {\n          this.debugLog('Moving forward 2 pages as right image is the last page and we just rendered double page');\n          return 2;\n        }\n\n        this.debugLog('Moving forward 2 pages');\n        return 2;\n      case PAGING_DIRECTION.BACKWARDS:\n        if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n          this.debugLog('Moving back 1 page as on cover image');\n          return 1;\n        }\n\n        if (this.mangaReaderService.adjustForDoubleReader(this.pageNum - 1) != this.pageNum - 1 && !this.mangaReaderService.isWidePage(this.pageNum - 2)) {\n          this.debugLog('Moving back 2 pages as previous pair should be in a pair');\n          return 2;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum)) {\n          this.debugLog('Moving back 1 page as left page is wide');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum) && (!this.mangaReaderService.isWidePage(this.pageNum - 4))) {\n          this.debugLog('Moving back 1 page as left page is wide');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum - 1)) {\n          this.debugLog('Moving back 1 page as prev page is wide');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum - 2)) {\n          this.debugLog('Moving back 1 page as 2 pages back is wide');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum + 2)) {\n          this.debugLog('Moving back 2 page as 2 pages back is wide');\n          return 1;\n        }\n        // Not sure about this condition on moving backwards\n        if (this.mangaReaderService.isSecondLastImage(this.pageNum, this.maxPages)) {\n          this.debugLog('Moving back 1 page as 2 pages left');\n          return 1;\n        }\n        this.debugLog('Moving back 2 pages');\n        return 2;\n    }\n  }\n  reset(): void {}\n\n  getBookmarkPageCount(): number {\n    return this.shouldRenderDouble() ? 2 : 1;\n  }\n\n  debugLog(message: string, extraData?: any) {\n    if (!(this.debugMode & DEBUG_MODES.Logs)) return;\n\n    if (extraData !== undefined) {\n      console.log(message, extraData);\n    } else {\n      console.log(message);\n    }\n  }\n}\n","<ng-container *ngIf=\"isValid()\">\n    <div class=\"image-container {{layoutClass$ | async}} {{emulateBookClass$ | async}}\"\n        [style.filter]=\"(darkness$ | async)  ?? '' | safeStyle\"\n        [ngClass]=\"{'center-double': (shouldRenderDouble$ | async), 'reverse': (shouldRenderDouble$ | async)}\">\n        <ng-container *ngIf=\"leftImage\">\n            <img alt=\" \"\n                #image [src]=\"leftImage.src\"\n                id=\"image-1\"\n                class=\"{{imageFitClass$ | async}} {{readerModeClass$ | async}} {{showClickOverlayClass$ | async}}\"\n            >\n        </ng-container>\n        <ng-container *ngIf=\"shouldRenderDouble$ | async\">\n            <img alt=\" \" [src]=\"rightImage.src\"\n            id=\"image-2\"\n            class=\"image-2 {{imageFitClass$ | async}} {{readerModeClass$ | async}} {{showClickOverlayClass$ | async}}\">  <!--reverse-->\n        </ng-container>\n    </div>\n</ng-container>\n","import { DOCUMENT, NgIf, AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  EventEmitter,\n  inject,\n  Inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport {combineLatest, filter, map, Observable, of, shareReplay, switchMap, tap} from 'rxjs';\nimport { PageSplitOption } from 'src/app/_models/preferences/page-split-option';\nimport { ReaderMode } from 'src/app/_models/preferences/reader-mode';\nimport { LayoutMode } from '../../_models/layout-mode';\nimport { FITTING_OPTION, PAGING_DIRECTION } from '../../_models/reader-enums';\nimport { ReaderSetting } from '../../_models/reader-setting';\nimport { ImageRenderer } from '../../_models/renderer';\nimport { ManagaReaderService } from '../../_service/managa-reader.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport { SafeStylePipe } from '../../../_pipes/safe-style.pipe';\n\n@Component({\n    selector: 'app-single-renderer',\n    templateUrl: './single-renderer.component.html',\n    styleUrls: ['./single-renderer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [AsyncPipe, SafeStylePipe]\n})\nexport class SingleRendererComponent implements OnInit, ImageRenderer {\n\n  @Input({required: true}) readerSettings$!: Observable<ReaderSetting>;\n  @Input({required: true}) image$!: Observable<HTMLImageElement | null>;\n  @Input({required: true}) bookmark$!: Observable<number>;\n  @Input({required: true}) showClickOverlay$!: Observable<boolean>;\n  @Input({required: true}) pageNum$!: Observable<{pageNum: number, maxPages: number}>;\n\n  @Output() imageHeight: EventEmitter<number> = new EventEmitter<number>();\n  private readonly destroyRef = inject(DestroyRef);\n\n  imageFitClass$!: Observable<string>;\n  imageContainerHeight$!: Observable<string>;\n  showClickOverlayClass$!: Observable<string>;\n  readerModeClass$!: Observable<string>;\n  darkness$: Observable<string> = of('brightness(100%)');\n  emulateBookClass$!: Observable<string>;\n  currentImage!: HTMLImageElement;\n  layoutMode: LayoutMode = LayoutMode.Single;\n  pageSplit: PageSplitOption = PageSplitOption.FitSplit;\n\n  pageNum: number = 0;\n  maxPages: number = 1;\n\n  get ReaderMode() {return ReaderMode;}\n  get LayoutMode() {return LayoutMode;}\n\n  constructor(private readonly cdRef: ChangeDetectorRef, public mangaReaderService: ManagaReaderService,\n    @Inject(DOCUMENT) private document: Document) { }\n\n  ngOnInit(): void {\n    this.readerModeClass$ = this.readerSettings$.pipe(\n      map(values => values.readerMode),\n      map(mode => mode === ReaderMode.LeftRight || mode === ReaderMode.UpDown ? '' : 'd-none'),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.emulateBookClass$ = this.readerSettings$.pipe(\n      map(data => data.emulateBook),\n      map(enabled => enabled ? 'book-shadow' : ''),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.imageContainerHeight$ = this.image$.pipe(\n      filter(_ => this.isValid()),\n      switchMap(img => {\n        this.cdRef.markForCheck();\n        return this.calculateImageContainerHeight$();\n      }),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n\n    this.pageNum$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(pageInfo => {\n        this.pageNum = pageInfo.pageNum;\n        this.maxPages = pageInfo.maxPages;\n      }),\n    ).subscribe(() => {});\n\n    this.darkness$ = this.readerSettings$.pipe(\n      map(values => 'brightness(' + values.darkness + '%)'),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.showClickOverlayClass$ = this.showClickOverlay$.pipe(\n      map(showOverlay => showOverlay ? 'blur' : ''),\n      takeUntilDestroyed(this.destroyRef),\n      filter(_ => this.isValid()),\n    );\n\n    this.readerSettings$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(values => {\n        this.layoutMode = values.layoutMode;\n        this.pageSplit = values.pageSplit;\n        this.cdRef.markForCheck();\n      })\n    ).subscribe(() => {});\n\n    this.bookmark$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(_ => {\n        const elements = [];\n        const image1 = this.document.querySelector('#image-1');\n        if (image1 != null) elements.push(image1);\n        this.mangaReaderService.applyBookmarkEffect(elements);\n      }),\n      filter(_ => this.isValid()),\n    ).subscribe(() => {});\n\n    this.imageFitClass$ = combineLatest([this.readerSettings$, this.pageNum$]).pipe(\n      map(values => values[0].fitting),\n      map(fit => {\n        if (\n          this.mangaReaderService.isWidePage(this.pageNum) &&\n          this.mangaReaderService.shouldRenderAsFitSplit(this.pageSplit)\n          ) {\n          // Rewriting to fit to width for this cover image\n          return FITTING_OPTION.WIDTH + ' fit-to-screen wide';\n        }\n\n        return fit;\n      }),\n      shareReplay({refCount: true, bufferSize: 1}),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef),\n    );\n  }\n\n  private calculateImageContainerHeight$(): Observable<string> {\n    return this.readerSettings$.pipe(\n      map(values => values.fitting),\n      map(mode => {\n        if (mode !== FITTING_OPTION.HEIGHT) return '';\n\n        const readingArea = this.document.querySelector('.reading-area');\n        if (!readingArea) return 'calc(100vh)';\n\n        // If you ever see fit to height and a bit of scrollbar, it's due to currentImage not being ready on first load\n        if (this.currentImage?.width - readingArea.scrollWidth > 0) {\n          // we also need to check if this is FF or Chrome. FF doesn't require the -34px as it doesn't render a scrollbar\n          return 'calc(100vh - 34px)';\n        }\n        return 'calc(100vh)';\n      }),\n      filter(_ => this.isValid())\n    );\n  }\n\n  isValid() {\n    return this.layoutMode === LayoutMode.Single;\n  }\n\n  renderPage(img: Array<HTMLImageElement | null>): void {\n    if (img === null || img.length === 0 || img[0] === null) return;\n    if (!this.isValid()) return;\n\n    this.currentImage = img[0];\n    this.cdRef.markForCheck();\n    this.imageHeight.emit(this.currentImage.height);\n  }\n\n  shouldMovePrev(): boolean {\n    return true;\n  }\n  shouldMoveNext(): boolean {\n    return true;\n  }\n  getPageAmount(direction: PAGING_DIRECTION): number {\n    if (!this.isValid() || this.mangaReaderService.shouldSplit(this.currentImage, this.pageSplit)) return 0;\n    return 1;\n  }\n  reset(): void {}\n\n  getBookmarkPageCount(): number {\n    return 1;\n  }\n}\n","@if(isValid() && !mangaReaderService.shouldSplit(currentImage, pageSplit)) {\n  <div class=\"image-container {{imageFitClass$ | async}} {{emulateBookClass$ | async}}\"\n       [style.filter]=\"(darkness$ | async)  ?? '' | safeStyle\" [style.height]=\"(imageContainerHeight$ | async)  ?? '' | safeStyle\">\n    @if(currentImage) {\n      <img alt=\" \"\n           #image\n           [src]=\"currentImage.src\"\n           id=\"image-1\"\n           class=\"{{imageFitClass$ | async}} {{readerModeClass$ | async}} {{showClickOverlayClass$ | async}}\" />\n    }\n  </div>\n}\n","import { DOCUMENT, NgIf, NgClass, AsyncPipe } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  EventEmitter,\n  inject,\n  Inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Observable, of, map, tap, shareReplay, filter, combineLatest } from 'rxjs';\nimport { PageSplitOption } from 'src/app/_models/preferences/page-split-option';\nimport { ReaderMode } from 'src/app/_models/preferences/reader-mode';\nimport { ReaderService } from 'src/app/_services/reader.service';\nimport { LayoutMode } from '../../_models/layout-mode';\nimport { FITTING_OPTION, PAGING_DIRECTION } from '../../_models/reader-enums';\nimport { ReaderSetting } from '../../_models/reader-setting';\nimport { DEBUG_MODES } from '../../_models/renderer';\nimport { ManagaReaderService } from '../../_service/managa-reader.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport { SafeStylePipe } from '../../../_pipes/safe-style.pipe';\n\n/**\n * Renders 2 pages except on last page, and before a wide image\n */\n@Component({\n    selector: 'app-double-no-cover-renderer',\n    templateUrl: './double-no-cover-renderer.component.html',\n    styleUrls: ['./double-no-cover-renderer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [NgIf, NgClass, AsyncPipe, SafeStylePipe]\n})\nexport class DoubleNoCoverRendererComponent implements OnInit {\n\n  @Input({required: true}) readerSettings$!: Observable<ReaderSetting>;\n  @Input({required: true}) image$!: Observable<HTMLImageElement | null>;\n  @Input({required: true}) bookmark$!: Observable<number>;\n  @Input({required: true}) showClickOverlay$!: Observable<boolean>;\n  @Input({required: true}) pageNum$!: Observable<{pageNum: number, maxPages: number}>;\n  @Input({required: true}) getPage!: (pageNum: number) => HTMLImageElement;\n  @Output() imageHeight: EventEmitter<number> = new EventEmitter<number>();\n  private readonly destroyRef = inject(DestroyRef);\n\n  debugMode: DEBUG_MODES = DEBUG_MODES.Logs;\n  imageFitClass$!: Observable<string>;\n  showClickOverlayClass$!: Observable<string>;\n  readerModeClass$!: Observable<string>;\n  layoutClass$!: Observable<string>;\n  darkness$: Observable<string> = of('brightness(100%)');\n  emulateBookClass$: Observable<string> = of('');\n  layoutMode: LayoutMode = LayoutMode.Single;\n  pageSplit: PageSplitOption = PageSplitOption.FitSplit;\n  pageNum: number = 0;\n  maxPages: number = 0;\n\n  /**\n   * Used to render a page on the canvas or in the image tag. This Image element is prefetched by the cachedImages buffer.\n   * @remarks Used for rendering to screen.\n   */\n  currentImage = new Image();\n   /**\n    * Used solely for LayoutMode.Double rendering.\n    * @remarks Used for rendering to screen.\n    */\n  currentImage2 = new Image();\n\n  /**\n   * Determines if we should render a double page.\n   * The general gist is if we are on double layout mode, the current page (first page) is not a cover image or a wide image\n   * and the next page is not a wide image (as only non-wides should be shown next to each other).\n   * @remarks This will always fail if the window's width is greater than the height\n  */\n  shouldRenderDouble$!: Observable<boolean>;\n\n\n  get ReaderMode() {return ReaderMode;}\n  get FITTING_OPTION() {return FITTING_OPTION;}\n  get LayoutMode() {return LayoutMode;}\n\n\n\n  constructor(private readonly cdRef: ChangeDetectorRef, public mangaReaderService: ManagaReaderService,\n    @Inject(DOCUMENT) private document: Document, public readerService: ReaderService) { }\n\n  ngOnInit(): void {\n    this.readerModeClass$ = this.readerSettings$.pipe(\n      map(values => values.readerMode),\n      map(mode => mode === ReaderMode.LeftRight || mode === ReaderMode.UpDown ? '' : 'd-none'),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.darkness$ = this.readerSettings$.pipe(\n      map(values => 'brightness(' + values.darkness + '%)'),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.emulateBookClass$ = this.readerSettings$.pipe(\n      map(data => data.emulateBook),\n      map(enabled => enabled ? 'book-shadow' : ''),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.showClickOverlayClass$ = this.showClickOverlay$.pipe(\n      map(showOverlay => showOverlay ? 'blur' : ''),\n      filter(_ => this.isValid()),\n      takeUntilDestroyed(this.destroyRef)\n    );\n\n    this.pageNum$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(pageInfo => {\n        this.pageNum = pageInfo.pageNum;\n        this.maxPages = pageInfo.maxPages;\n\n        this.currentImage = this.getPage(this.pageNum);\n        this.currentImage2 = this.getPage(this.pageNum + 1);\n\n        this.cdRef.markForCheck();\n      }),\n      filter(_ => this.isValid()),\n    ).subscribe(() => {});\n\n    this.shouldRenderDouble$ = this.pageNum$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map((_) => this.shouldRenderDouble()),\n      filter(_ => this.isValid()),\n    );\n\n    this.imageFitClass$ = this.readerSettings$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map(values => values.fitting),\n      filter(_ => this.isValid()),\n      shareReplay()\n    );\n\n    this.layoutClass$ = combineLatest([this.shouldRenderDouble$, this.readerSettings$]).pipe(\n      takeUntilDestroyed(this.destroyRef),\n      map((value) =>  {\n        if (value[0] && value[1].fitting === FITTING_OPTION.WIDTH) return 'fit-to-width-double-offset';\n        if (value[0] && value[1].fitting === FITTING_OPTION.HEIGHT) return 'fit-to-height-double-offset';\n        if (value[0] && value[1].fitting === FITTING_OPTION.ORIGINAL) return 'original-double-offset';\n        return '';\n      }),\n      filter(_ => this.isValid()),\n    );\n\n\n    this.readerSettings$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(values => {\n        this.layoutMode = values.layoutMode;\n        this.pageSplit = values.pageSplit;\n        this.cdRef.markForCheck();\n      })\n    ).subscribe(() => {});\n\n    this.bookmark$.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      tap(_ => {\n        const elements = [];\n        const image1 = this.document.querySelector('#image-1');\n        if (image1 != null) elements.push(image1);\n\n        const image2 = this.document.querySelector('#image-2');\n        if (image2 != null) elements.push(image2);\n\n        this.mangaReaderService.applyBookmarkEffect(elements);\n      }),\n      filter(_ => this.isValid()),\n    ).subscribe(() => {});\n  }\n\n  shouldRenderDouble() {\n    if (!this.isValid()) return false;\n\n    // if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n    //   this.debugLog('Not rendering double as current page is cover image');\n    //   return false;\n    // }\n\n    if (this.mangaReaderService.isWidePage(this.pageNum) ) {\n      this.debugLog('Not rendering double as current page is wide image');\n      return false;\n    }\n\n    if (this.mangaReaderService.isSecondLastImage(this.pageNum, this.maxPages)) {\n      this.debugLog('Not rendering double as current page is last');\n      return false;\n    }\n\n    if (this.mangaReaderService.isLastImage(this.pageNum, this.maxPages)) {\n      this.debugLog('Not rendering double as current page is last');\n      return false;\n    }\n\n    if (this.mangaReaderService.isWidePage(this.pageNum + 1) ) {\n      this.debugLog('Not rendering double as next page is wide image');\n      return false;\n    }\n\n    return true;\n  }\n\n  isValid() {\n    return this.layoutMode === LayoutMode.DoubleNoCover;\n  }\n\n  renderPage(img: Array<HTMLImageElement | null>): void {\n    if (img === null || img.length === 0 || img[0] === null) return;\n    if (!this.isValid()) return;\n\n    // First load, switching from double manga -> double, this is 0 and thus not rendering\n    if (!this.shouldRenderDouble() && (this.currentImage.height || img[0].height) > 0) {\n      this.imageHeight.emit(this.currentImage.height || img[0].height);\n      return;\n    }\n\n    this.cdRef.markForCheck();\n    this.imageHeight.emit(Math.max(this.currentImage.height, this.currentImage2.height));\n    this.cdRef.markForCheck();\n  }\n\n  shouldMovePrev(): boolean {\n    return true;\n  }\n  shouldMoveNext(): boolean {\n    return true;\n  }\n  getPageAmount(direction: PAGING_DIRECTION): number {\n    if (!this.isValid()) return 0;\n\n    switch (direction) {\n      case PAGING_DIRECTION.FORWARD:\n        if (this.mangaReaderService.isWidePage(this.pageNum)) {\n          this.debugLog('Moving forward 1 page as current page is wide');\n          return 1;\n        }\n        if (this.mangaReaderService.isWidePage(this.pageNum + 1)) {\n          this.debugLog('Moving forward 1 page as next page is wide');\n          return 1;\n        }\n        if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n          this.debugLog('Moving forward 2 page as on cover image');\n          return 2;\n        }\n        if (this.mangaReaderService.isSecondLastImage(this.pageNum, this.maxPages)) {\n          this.debugLog('Moving forward 1 page as 2 pages left');\n          return 1;\n        }\n        if (this.mangaReaderService.isLastImage(this.pageNum, this.maxPages)) {\n          this.debugLog('Moving forward 1 page as 1 page left');\n          return 1;\n        }\n        this.debugLog('Moving forward 2 pages');\n        return 2;\n      case PAGING_DIRECTION.BACKWARDS:\n\n      if (this.mangaReaderService.isCoverImage(this.pageNum - 1)) {\n        // TODO: If we are moving back and prev page is cover and we are not showing on right side, then move back twice as if we did once, we would show pageNum twice\n        this.debugLog('Moving back 1 page as on cover image');\n        return 2;\n      }\n\n        if (this.mangaReaderService.isCoverImage(this.pageNum)) {\n          this.debugLog('Moving back 1 page as on cover image');\n          return 2;\n        }\n\n        if (this.mangaReaderService.adjustForDoubleReader(this.pageNum - 1) != this.pageNum - 1 && !this.mangaReaderService.isWidePage(this.pageNum - 2)) {\n          this.debugLog('Moving back 2 pages as previous pair should be in a pair');\n          return 2;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum)) {\n          this.debugLog('Moving back 1 page as current page is wide');\n          return 1;\n        }\n\n        if (this.mangaReaderService.isWidePage(this.pageNum - 1)) {\n          this.debugLog('Moving back 1 page as prev page is wide');\n          return 1;\n        }\n        if (this.mangaReaderService.isWidePage(this.pageNum - 2)) {\n          this.debugLog('Moving back 1 page as 2 pages back is wide');\n          return 1;\n        }\n\n        this.debugLog('Moving back 2 pages');\n        return 2;\n    }\n  }\n  reset(): void {}\n\n  getBookmarkPageCount(): number {\n    return this.shouldRenderDouble() ? 2 : 1;\n  }\n\n  debugLog(message: string, extraData?: any) {\n    if (!(this.debugMode & DEBUG_MODES.Logs)) return;\n\n    if (extraData !== undefined) {\n      console.log(message, extraData);\n    } else {\n      console.log(message);\n    }\n  }\n}\n","<ng-container *ngIf=\"isValid()\">\n    <div class=\"image-container {{imageFitClass$ | async}} {{layoutClass$ | async}} {{emulateBookClass$ | async}}\"\n        [style.filter]=\"(darkness$ | async)  ?? '' | safeStyle\"\n        [ngClass]=\"{'center-double': (shouldRenderDouble$ | async)}\">\n        <ng-container *ngIf=\"currentImage\">\n            <img alt=\" \"\n                #image [src]=\"currentImage.src\"\n                id=\"image-1\"\n                class=\"{{imageFitClass$ | async}} {{readerModeClass$ | async}} {{showClickOverlayClass$ | async}}\"\n            >\n        </ng-container>\n        <ng-container *ngIf=\"shouldRenderDouble$ | async\">\n            <img alt=\" \" [src]=\"currentImage2.src\"\n            id=\"image-2\"\n            class=\"image-2 {{imageFitClass$ | async}} {{readerModeClass$ | async}} {{showClickOverlayClass$ | async}}\">\n        </ng-container>\n    </div>\n</ng-container>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Returns the icon for the given state of fullscreen mode\n */\n@Pipe({\n  name: 'fullscreenIcon',\n  standalone: true,\n})\nexport class FullscreenIconPipe implements PipeTransform {\n\n  transform(isFullscreen: boolean): string {\n    return isFullscreen ? 'fa-compress-alt' : 'fa-expand-alt';\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ReaderMode } from 'src/app/_models/preferences/reader-mode';\n\n@Pipe({\n  name: 'readerModeIcon',\n  standalone: true,\n})\nexport class ReaderModeIconPipe implements PipeTransform {\n\n  transform(readerMode: ReaderMode): string {\n    switch(readerMode) {\n      case ReaderMode.LeftRight:\n        return 'fa-exchange-alt';\n      case ReaderMode.UpDown:\n        return 'fa-exchange-alt fa-rotate-90';\n      case ReaderMode.Webtoon:\n        return 'fa-arrows-alt-v';\n      default:\n        return '';\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FITTING_OPTION } from '../manga-reader/_models/reader-enums';\n\n@Pipe({\n  name: 'fittingIcon',\n  pure: true,\n  standalone: true,\n})\nexport class FittingIconPipe implements PipeTransform {\n\n  transform(fit: FITTING_OPTION): string {\n    switch(fit) {\n      case FITTING_OPTION.HEIGHT:\n        return 'fa fa-arrows-alt-v';\n      case FITTING_OPTION.WIDTH:\n        return 'fa fa-arrows-alt-h';\n      case FITTING_OPTION.ORIGINAL:\n        return 'fa fa-expand-arrows-alt';\n    }\n  }\n\n}\n","import { DOCUMENT, NgIf, NgFor, AsyncPipe } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, DestroyRef,\n  ElementRef,\n  EventEmitter,\n  inject,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges, ViewChild\n} from '@angular/core';\nimport { BehaviorSubject, fromEvent, ReplaySubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { ScrollService } from 'src/app/_services/scroll.service';\nimport { ReaderService } from '../../../_services/reader.service';\nimport { PAGING_DIRECTION } from '../../_models/reader-enums';\nimport { WebtoonImage } from '../../_models/webtoon-image';\nimport { ManagaReaderService } from '../../_service/managa-reader.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {MangaReaderComponent} from \"../manga-reader/manga-reader.component\";\nimport {InfiniteScrollModule} from \"ngx-infinite-scroll\";\n\n/**\n * How much additional space should pass, past the original bottom of the document height before we trigger the next chapter load\n */\nconst SPACER_SCROLL_INTO_PX = 200;\n\n/**\n * Bitwise enums for configuring how much debug information we want\n */\nconst enum DEBUG_MODES {\n  /**\n   * No Debug information\n   */\n  None = 0,\n  /**\n   * Turn on debug logging\n   */\n  Logs = 2,\n  /**\n   * Turn on the action bar in UI\n   */\n  ActionBar = 4,\n  /**\n   * Turn on Page outline\n   */\n  Outline = 8\n}\n\n@Component({\n    selector: 'app-infinite-scroller',\n    templateUrl: './infinite-scroller.component.html',\n    styleUrls: ['./infinite-scroller.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n  imports: [NgIf, NgFor, AsyncPipe, TranslocoDirective, InfiniteScrollModule]\n})\nexport class InfiniteScrollerComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\n\n  private readonly mangaReaderService = inject(ManagaReaderService);\n  private readonly readerService = inject(ReaderService);\n  private readonly renderer = inject(Renderer2);\n  private readonly scrollService = inject(ScrollService);\n  private readonly cdRef = inject(ChangeDetectorRef);\n\n  /**\n   * Current page number aka what's recorded on screen\n   */\n  @Input() pageNum: number = 0;\n  /**\n   * Number of pages to prefetch ahead of position\n   */\n  @Input() bufferPages: number = 5;\n  /**\n   * Total number of pages\n   */\n  @Input() totalPages: number = 0;\n  /**\n   * Method to generate the src for Image loading\n   */\n  @Input({required: true}) urlProvider!: (page: number) => string;\n  @Output() pageNumberChange: EventEmitter<number> = new EventEmitter<number>();\n  @Output() loadNextChapter: EventEmitter<void> = new EventEmitter<void>();\n  @Output() loadPrevChapter: EventEmitter<void> = new EventEmitter<void>();\n\n  @Input() goToPage: BehaviorSubject<number> | undefined;\n  @Input() bookmarkPage: ReplaySubject<number> = new ReplaySubject<number>();\n  @Input() fullscreenToggled: ReplaySubject<boolean> = new ReplaySubject<boolean>();\n\n  @ViewChild('bottomSpacer', {static: false}) bottomSpacer!: ElementRef;\n  bottomSpacerIntersectionObserver: IntersectionObserver = new IntersectionObserver((entries) => this.handleBottomIntersection(entries),\n    { threshold: 1.0 });\n\n  private readonly destroyRef = inject(DestroyRef);\n\n  readerElemRef!: ElementRef<HTMLDivElement>;\n\n  /**\n   * Stores and emits all the src urls\n   */\n  webtoonImages: BehaviorSubject<WebtoonImage[]> = new BehaviorSubject<WebtoonImage[]>([]);\n\n  /**\n   * Responsible for calculating current page on screen and uses hooks to trigger prefetching.\n   * Note: threshold will fire differently due to size of images. 1 requires full image on screen. 0 means 1px on screen. We use 0.01 as 0 does not work currently.\n   */\n  intersectionObserver: IntersectionObserver = new IntersectionObserver((entries) => this.handleIntersection(entries), { threshold: 0.01 });\n  /**\n   * Direction we are scrolling. Controls calculations for prefetching\n   */\n  scrollingDirection: PAGING_DIRECTION = PAGING_DIRECTION.FORWARD;\n  /**\n   * Temp variable to keep track of scrolling position between scrolls to caclulate direction\n   */\n  prevScrollPosition: number = 0;\n  /**\n   * Temp variable to keep track of when the scrollTo() finishes, so we can start capturing scroll events again\n   */\n  currentPageElem: Element | null = null;\n  /**\n   * The minimum width of images in webtoon. On image loading, this is checked and updated. All images will get this assigned to them for rendering.\n   */\n  webtoonImageWidth: number = window.innerWidth || this.document.body.clientWidth || this.document.documentElement.clientWidth;\n  /**\n   * Used to tell if a scrollTo() operation is in progress\n   */\n  isScrolling: boolean = false;\n  /**\n   * Whether all prefetched images have loaded on the screen (not neccesarily in viewport)\n   */\n  allImagesLoaded: boolean = false;\n  /**\n   * Denotes each page that has been loaded or not. If pruning is implemented, the key will be deleted.\n   */\n   imagesLoaded: {[key: number]: number} = {};\n  /**\n   * If the user has scrolled all the way to the bottom. This is used solely for continuous reading\n   */\n   atBottom: boolean = false;\n   /**\n   * If the user has scrolled all the way to the top. This is used solely for continuous reading\n   */\n   atTop: boolean = false;\n   /**\n    * If the manga reader is in fullscreen. Some math changes based on this value.\n    */\n   isFullscreenMode: boolean = false;\n   /**\n    * Keeps track of the previous scrolling height for restoring scroll position after we inject spacer block\n    */\n   previousScrollHeightMinusTop: number = 0;\n   /**\n    * Tracks the first load, until all the initial prefetched images are loaded. We use this to reduce opacity so images can load without jerk.\n    */\n   initFinished: boolean = false;\n  /**\n   * Debug mode. Will show extra information. Use bitwise (|) operators between different modes to enable different output\n   */\n  debugMode: DEBUG_MODES = DEBUG_MODES.None;\n  /**\n   * Debug mode. Will filter out any messages in here so they don't hit the log\n   */\n  debugLogFilter: Array<string> = ['[PREFETCH]', '[Intersection]', '[Visibility]', '[Image Load]'];\n\n  get minPageLoaded() {\n    return Math.min(...Object.values(this.imagesLoaded));\n  }\n\n  get maxPageLoaded() {\n    return Math.max(...Object.values(this.imagesLoaded));\n  }\n\n  get areImagesWiderThanWindow() {\n    let [_, innerWidth] = this.getInnerDimensions();\n    return this.webtoonImageWidth > (innerWidth || document.body.clientWidth);\n  }\n\n  constructor(@Inject(DOCUMENT) private readonly document: Document) {\n    // This will always exist at this point in time since this is used within manga reader\n    const reader = document.querySelector('.reading-area');\n    if (reader !== null) {\n      this.readerElemRef = new ElementRef(reader as HTMLDivElement);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('totalPages') && changes['totalPages'].previousValue != changes['totalPages'].currentValue) {\n      this.totalPages = changes['totalPages'].currentValue;\n      this.cdRef.markForCheck();\n      this.initWebtoonReader();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.intersectionObserver.disconnect();\n  }\n\n  /**\n   * Responsible for binding the scroll handler to the correct event. On non-fullscreen, body is correct. However, on fullscreen, we must use the reader as that is what\n   * gets promoted to fullscreen.\n   */\n  initScrollHandler() {\n    //console.log('Setting up Scroll handler on ', this.isFullscreenMode ? this.readerElemRef.nativeElement : this.document.body);\n    fromEvent(this.isFullscreenMode ? this.readerElemRef.nativeElement : this.document.body, 'scroll')\n    .pipe(debounceTime(20), takeUntilDestroyed(this.destroyRef))\n    .subscribe((event) => this.handleScrollEvent(event));\n\n    fromEvent(this.isFullscreenMode ? this.readerElemRef.nativeElement : this.document.body, 'scrollend')\n    .pipe(debounceTime(20), takeUntilDestroyed(this.destroyRef))\n    .subscribe((event) => this.handleScrollEndEvent(event));\n  }\n\n  ngOnInit(): void {\n    this.initScrollHandler();\n\n    this.recalculateImageWidth();\n\n    if (this.goToPage) {\n      this.goToPage.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(page => {\n        const isSamePage = this.pageNum === page;\n        if (isSamePage) { return; }\n        this.debugLog('[GoToPage] jump has occured from ' + this.pageNum + ' to ' + page);\n\n        if (this.pageNum < page) {\n          this.scrollingDirection = PAGING_DIRECTION.FORWARD;\n        } else {\n          this.scrollingDirection = PAGING_DIRECTION.BACKWARDS;\n        }\n\n        this.setPageNum(page, true);\n      });\n    }\n\n    if (this.bookmarkPage) {\n      this.bookmarkPage.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(page => {\n        const image = document.querySelector('img[id^=\"page-' + page + '\"]');\n        if (image) {\n          this.renderer.addClass(image, 'bookmark-effect');\n\n          setTimeout(() => {\n            this.renderer.removeClass(image, 'bookmark-effect');\n          }, 1000);\n        }\n      });\n    }\n\n    if (this.fullscreenToggled) {\n      this.fullscreenToggled.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(isFullscreen => {\n        this.debugLog('[FullScreen] Fullscreen mode: ', isFullscreen);\n        this.isFullscreenMode = isFullscreen;\n        this.cdRef.markForCheck();\n\n        this.recalculateImageWidth();\n        this.initScrollHandler();\n        this.setPageNum(this.pageNum, true);\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    this.bottomSpacerIntersectionObserver.observe(this.bottomSpacer.nativeElement);\n  }\n\n  recalculateImageWidth() {\n    const [_, innerWidth] = this.getInnerDimensions();\n    this.webtoonImageWidth = innerWidth || document.body.clientWidth || document.documentElement.clientWidth;\n    this.cdRef.markForCheck();\n  }\n\n  getVerticalOffset() {\n    const reader = this.isFullscreenMode ? this.readerElemRef.nativeElement : this.document.body;\n\n    let offset = 0;\n    if (reader instanceof Window) {\n      offset = reader.scrollY;\n    } else {\n      offset = reader.scrollTop;\n    }\n\n    return (offset\n      || document.body.scrollTop\n      || document.documentElement.scrollTop\n      || 0);\n  }\n\n  /**\n   * On scroll in document, calculate if the user/javascript has scrolled to the current image element (and it's visible), update that scrolling has ended completely,\n   * and calculate the direction the scrolling is occuring. This is not used for prefetching.\n   * @param event Scroll Event\n   */\n  handleScrollEvent(event?: any) {\n    const verticalOffset = this.getVerticalOffset();\n\n    if (verticalOffset > this.prevScrollPosition) {\n      this.scrollingDirection = PAGING_DIRECTION.FORWARD;\n    } else {\n      this.scrollingDirection = PAGING_DIRECTION.BACKWARDS;\n    }\n    this.prevScrollPosition = verticalOffset;\n\n    if (this.isScrolling && this.currentPageElem != null && this.isElementVisible(this.currentPageElem)) {\n      this.debugLog('[Scroll] Image is visible from scroll, isScrolling is now false');\n      this.isScrolling = false;\n      this.cdRef.markForCheck();\n    }\n\n    if (!this.isScrolling) {\n      // Use offset of the image against the scroll container to test if the most of the image is visible on the screen. We can use this\n      // to mark the current page and separate the prefetching code.\n      const midlineImages = Array.from(document.querySelectorAll('img[id^=\"page-\"]'))\n      .filter(entry => this.shouldElementCountAsCurrentPage(entry));\n\n      if (midlineImages.length > 0) {\n        this.setPageNum(parseInt(midlineImages[0].getAttribute('page') || this.pageNum + '', 10));\n      }\n    }\n\n    // Check if we hit the last page\n    this.checkIfShouldTriggerContinuousReader();\n  }\n\n  handleScrollEndEvent(event?: any) {\n    if (!this.isScrolling) {\n\n      const closestImages = Array.from(document.querySelectorAll('img[id^=\"page-\"]')) as HTMLImageElement[];\n      const img = this.findClosestVisibleImage(closestImages);\n\n      if (img != null) {\n        this.setPageNum(parseInt(img.getAttribute('page') || this.pageNum + '', 10));\n      }\n    }\n  }\n\n  getTotalHeight() {\n    let totalHeight = 0;\n    document.querySelectorAll('img[id^=\"page-\"]').forEach(img => totalHeight += img.getBoundingClientRect().height);\n    return Math.round(totalHeight);\n  }\n\n  getTotalScroll() {\n    if (this.isFullscreenMode) {\n      return this.readerElemRef.nativeElement.offsetHeight + this.readerElemRef.nativeElement.scrollTop;\n    }\n    return document.body.offsetHeight + document.body.scrollTop;\n  }\n\n  getScrollTop() {\n    if (this.isFullscreenMode) {\n      return this.readerElemRef.nativeElement.scrollTop;\n    }\n    return document.body.scrollTop;\n  }\n\n  checkIfShouldTriggerContinuousReader() {\n    if (this.isScrolling) return;\n\n    if (this.scrollingDirection === PAGING_DIRECTION.FORWARD) {\n      const totalHeight = this.getTotalHeight();\n      const totalScroll = this.getTotalScroll();\n\n      // If we were at top but have started scrolling down past page 0, remove top spacer\n      if (this.atTop && this.pageNum > 0) {\n        this.atTop = false;\n        this.cdRef.markForCheck();\n      }\n\n      if (totalScroll === totalHeight && !this.atBottom) {\n        this.atBottom = true;\n        this.cdRef.markForCheck();\n        this.setPageNum(this.totalPages);\n\n        // Scroll user back to original location\n        this.previousScrollHeightMinusTop = this.getScrollTop();\n        requestAnimationFrame(() => {\n          document.body.scrollTop = this.previousScrollHeightMinusTop + (SPACER_SCROLL_INTO_PX / 2);\n          this.cdRef.markForCheck();\n        });\n      } else if (totalScroll >= totalHeight + SPACER_SCROLL_INTO_PX && this.atBottom) {\n        // This if statement will fire once we scroll into the spacer at all\n        this.loadNextChapter.emit();\n        this.cdRef.markForCheck();\n      }\n    } else {\n      // < 5 because debug mode and FF (mobile) can report non 0, despite being at 0\n      if (this.getScrollTop() < 5 && this.pageNum === 0 && !this.atTop) {\n        this.atBottom = false;\n        this.atTop = true;\n        this.cdRef.markForCheck();\n\n        // Scroll user back to original location\n        this.previousScrollHeightMinusTop = document.body.scrollHeight - document.body.scrollTop;\n\n        const reader = this.isFullscreenMode ? this.readerElemRef.nativeElement : this.document.body;\n        requestAnimationFrame(() => this.scrollService.scrollTo((SPACER_SCROLL_INTO_PX / 2), reader));\n      } else if (this.getScrollTop() < 5 && this.pageNum === 0 && this.atTop) {\n        // If already at top, then we moving on\n        this.loadPrevChapter.emit();\n        this.cdRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   *\n   * @returns Height, Width\n   */\n  getInnerDimensions() {\n    let innerHeight = window.innerHeight;\n    let innerWidth = window.innerWidth;\n\n    if (this.isFullscreenMode) {\n      innerHeight = this.readerElemRef.nativeElement.clientHeight;\n      innerWidth = this.readerElemRef.nativeElement.clientWidth;\n    }\n    return [innerHeight, innerWidth];\n  }\n\n  /**\n   * Is any part of the element visible in the scrollport. Does not take into account\n   * style properties, just scroll port visibility.\n   * @param elem\n   * @returns\n   */\n  isElementVisible(elem: Element) {\n    if (elem === null || elem === undefined) { return false; }\n\n    this.debugLog('[Visibility] Checking if Page ' + elem.getAttribute('id') + ' is visible');\n    // NOTE: This will say an element is visible if it is 1 px offscreen on top\n    const rect = elem.getBoundingClientRect();\n\n    const [innerHeight, innerWidth] = this.getInnerDimensions();\n\n    return (rect.bottom >= 0 &&\n            rect.right >= 0 &&\n            rect.top <= (innerHeight || document.body.clientHeight) &&\n            rect.left <= (innerWidth || document.body.clientWidth)\n          );\n  }\n\n  /**\n   * Is any part of the element visible in the scrollport and is it above the midline trigger.\n   * The midline trigger does not mean it is half of the screen. It may be top 25%.\n   * @param elem HTML Element\n   * @returns If above midline\n   */\n   shouldElementCountAsCurrentPage(elem: Element) {\n    if (elem === null || elem === undefined) { return false; }\n\n    const rect = elem.getBoundingClientRect();\n    const [innerHeight, innerWidth] = this.getInnerDimensions();\n\n    if (rect.bottom >= 0 &&\n            rect.right >= 0 &&\n            rect.top <= (innerHeight || document.body.clientHeight) &&\n            rect.left <= (innerWidth || document.body.clientWidth)\n          ) {\n            const topX = (innerHeight || document.body.clientHeight);\n            return Math.abs(rect.top / topX) <= 0.25;\n          }\n    return false;\n  }\n\n  /**\n   * Find the closest visible image within the viewport.\n   * @param images An array of HTML Image Elements\n   * @returns Closest visible image or null if none are visible\n   */\n  findClosestVisibleImage(images: HTMLImageElement[]): HTMLImageElement | null {\n    let closestImage: HTMLImageElement | null = null;\n    let closestDistanceToTop = Number.MAX_VALUE; // Initialize to a high value.\n\n    for (const image of images) {\n      // Get the bounding rectangle of the image.\n      const rect = image.getBoundingClientRect();\n\n      // Calculate the distance of the current image to the top of the viewport.\n      const distanceToTop = Math.abs(rect.top);\n\n      // Check if the image is visible within the viewport.\n      if (distanceToTop < closestDistanceToTop) {\n        closestDistanceToTop = distanceToTop;\n        closestImage = image;\n      }\n    }\n\n    return closestImage;\n  }\n\n\n  initWebtoonReader() {\n    this.initFinished = false;\n    this.recalculateImageWidth();\n    this.imagesLoaded = {};\n    this.webtoonImages.next([]);\n    this.atBottom = false;\n    this.checkIfShouldTriggerContinuousReader();\n    this.cdRef.markForCheck();\n    const [startingIndex, endingIndex] = this.calculatePrefetchIndecies();\n\n\n    this.debugLog('[INIT] Prefetching pages ' + startingIndex + ' to ' + endingIndex + '. Current page: ', this.pageNum);\n    for(let i = startingIndex; i <= endingIndex; i++) {\n      this.loadWebtoonImage(i);\n    }\n    this.cdRef.markForCheck();\n  }\n\n  /**\n   * Callback for an image onLoad. At this point the image is already rendered in DOM (may not be visible)\n   * This will be used to scroll to current page for intial load\n   * @param event\n   */\n  onImageLoad(event: any) {\n    const imagePage = this.readerService.imageUrlToPageNum(event.target.src);\n    this.debugLog('[Image Load] Image loaded: ', imagePage);\n\n    if (event.target.width < this.webtoonImageWidth) {\n      this.webtoonImageWidth = event.target.width;\n    }\n\n    this.renderer.setAttribute(event.target, 'width', this.mangaReaderService.maxWidth() + '');\n    this.renderer.setAttribute(event.target, 'height', event.target.height + '');\n\n    this.attachIntersectionObserverElem(event.target);\n\n    if (imagePage === this.pageNum) {\n      Promise.all(Array.from(this.document.querySelectorAll('img'))\n        .filter((img: any) => !img.complete)\n        .map((img: any) => new Promise(resolve => { img.onload = img.onerror = resolve; })))\n        .then(() => {\n          this.debugLog('[Initialization] All images have loaded from initial prefetch, initFinished = true');\n          this.debugLog('[Image Load] ! Loaded current page !', this.pageNum);\n          this.currentPageElem = this.document.querySelector('img#page-' + this.pageNum);\n          // There needs to be a bit of time before we scroll\n          if (this.currentPageElem && !this.isElementVisible(this.currentPageElem)) {\n            this.scrollToCurrentPage();\n          } else {\n            this.initFinished = true;\n            this.cdRef.markForCheck();\n          }\n\n          this.allImagesLoaded = true;\n          this.cdRef.markForCheck();\n      });\n    }\n  }\n\n  handleBottomIntersection(entries: IntersectionObserverEntry[]) {\n    if (entries.length > 0 && this.pageNum > this.totalPages - 5 && this.initFinished) {\n      this.debugLog('[Intersection] The whole bottom spacer is visible', entries[0].isIntersecting);\n      this.loadNextChapter.emit();\n    }\n  }\n\n  handleIntersection(entries: IntersectionObserverEntry[]) {\n    if (!this.allImagesLoaded || this.isScrolling) {\n      this.debugLog('[Intersection] Images are not loaded (or performing scrolling action), skipping any scroll calculations');\n      return;\n    }\n\n    entries.forEach(entry => {\n      const imagePage = parseInt(entry.target.attributes.getNamedItem('page')?.value + '', 10);\n      this.debugLog('[Intersection] Page ' + imagePage + ' is visible: ', entry.isIntersecting);\n      if (entry.isIntersecting) {\n        this.debugLog('[Intersection] ! Page ' + imagePage + ' just entered screen');\n        this.prefetchWebtoonImages(imagePage);\n      }\n    });\n  }\n\n  /**\n   * Set the page number, invoke prefetching and optionally scroll to the new page.\n   * @param pageNum Page number to set to. Will trigger the pageNumberChange event emitter.\n   * @param scrollToPage Optional (default false) parameter to trigger scrolling to the newly set page\n   */\n  setPageNum(pageNum: number, scrollToPage: boolean = false) {\n    if (pageNum >= this.totalPages) {\n      pageNum = this.totalPages - 1;\n    } else if (pageNum < 0) {\n      pageNum = 0;\n    }\n    this.pageNum = pageNum;\n    this.pageNumberChange.emit(this.pageNum);\n    this.cdRef.markForCheck();\n\n    this.prefetchWebtoonImages();\n\n    if (scrollToPage) {\n      this.scrollToCurrentPage();\n    }\n  }\n\n  isScrollingForwards() {\n    return this.scrollingDirection === PAGING_DIRECTION.FORWARD;\n  }\n\n  /**\n   * Performs the scroll for the current page element. Updates any state variables needed.\n   */\n  scrollToCurrentPage() {\n    this.currentPageElem = document.querySelector('img#page-' + this.pageNum);\n    if (!this.currentPageElem) { return; }\n    this.debugLog('[GoToPage] Scrolling to page', this.pageNum);\n\n    // Update prevScrollPosition, so the next scroll event properly calculates direction\n    this.prevScrollPosition = this.currentPageElem.getBoundingClientRect().top;\n    this.isScrolling = true;\n    this.cdRef.markForCheck();\n\n    setTimeout(() => {\n      if (this.currentPageElem) {\n        this.debugLog('[Scroll] Scrolling to page ', this.pageNum);\n        this.currentPageElem.scrollIntoView({behavior: 'smooth'});\n        this.initFinished = true;\n        this.cdRef.markForCheck();\n      }\n    }, 600);\n  }\n\n  loadWebtoonImage(page: number) {\n    if (this.imagesLoaded.hasOwnProperty(page)) {\n      this.debugLog('\\t[PREFETCH] Skipping prefetch of ', page);\n      return;\n    }\n\n    this.debugLog('\\t[PREFETCH] Prefetching ', page);\n\n    const data = this.webtoonImages.value.concat({src: this.urlProvider(page), page});\n\n    data.sort((a: WebtoonImage, b: WebtoonImage) => {\n      if (a.page < b.page) { return -1; }\n      else if (a.page > b.page) { return 1; }\n      else return 0;\n    });\n\n    this.allImagesLoaded = false;\n    this.cdRef.markForCheck();\n    this.webtoonImages.next(data);\n\n    if (!this.imagesLoaded.hasOwnProperty(page)) {\n      this.imagesLoaded[page] = page;\n    }\n  }\n\n  attachIntersectionObserverElem(elem: HTMLImageElement) {\n    if (elem !== null) {\n      this.intersectionObserver.observe(elem);\n      this.debugLog('[Intersection] Attached Intersection Observer to page', this.readerService.imageUrlToPageNum(elem.src));\n    } else {\n      console.error('Could not attach observer on elem'); // This never happens\n    }\n  }\n\n  /**\n   * Finds the ranges of indecies to load from backend. totalPages - 1 is due to backend will automatically return last page for any page number\n   * above totalPages. Webtoon reader might ask for that which results in duplicate last pages.\n   * @param pageNum\n   * @returns\n   */\n  calculatePrefetchIndecies(pageNum: number = -1) {\n    if (pageNum == -1) {\n      pageNum = this.pageNum;\n    }\n\n    let startingIndex = 0;\n    let endingIndex = 0;\n    if (this.isScrollingForwards()) {\n      startingIndex = Math.min(Math.max(pageNum - this.bufferPages, 0), this.totalPages - 1);\n      endingIndex = Math.min(Math.max(pageNum + this.bufferPages, 0), this.totalPages - 1);\n\n      if (startingIndex === this.totalPages) {\n        return [0, 0];\n      }\n    } else {\n      startingIndex = Math.min(Math.max(pageNum - this.bufferPages, 0), this.totalPages - 1);\n      endingIndex = Math.min(Math.max(pageNum + this.bufferPages, 0), this.totalPages - 1);\n    }\n\n\n    if (startingIndex > endingIndex) {\n      const temp = startingIndex;\n      startingIndex = endingIndex;\n      endingIndex = temp;\n    }\n\n    return [startingIndex, endingIndex];\n  }\n\n  range(size: number, startAt: number = 0): ReadonlyArray<number> {\n    return [...Array(size).keys()].map(i => i + startAt);\n  }\n\n  prefetchWebtoonImages(pageNum: number = -1) {\n    if (pageNum === -1) {\n      pageNum = this.pageNum;\n    }\n\n    const [startingIndex, endingIndex] = this.calculatePrefetchIndecies(pageNum);\n    if (startingIndex === 0 && endingIndex === 0) { return; }\n\n    this.debugLog('\\t[PREFETCH] prefetching pages: ' + startingIndex + ' to ' + endingIndex);\n    for(let i = startingIndex; i <= endingIndex; i++) {\n      this.loadWebtoonImage(i);\n    }\n\n    Promise.all(Array.from(document.querySelectorAll('img'))\n      .filter((img: any) => !img.complete)\n      .map((img: any) => new Promise(resolve => { img.onload = img.onerror = resolve; })))\n      .then(() => {\n        this.allImagesLoaded = true;\n        this.cdRef.markForCheck();\n    });\n  }\n\n  debugLog(message: string, extraData?: any) {\n    if (!(this.debugMode & DEBUG_MODES.Logs)) return;\n\n    if (this.debugLogFilter.filter(str => message.replace('\\t', '').startsWith(str)).length > 0) return;\n    if (extraData !== undefined) {\n      console.log(message, extraData);\n    } else {\n      console.log(message);\n    }\n  }\n\n  showDebugBar() {\n    return this.debugMode & DEBUG_MODES.ActionBar;\n  }\n\n  showDebugOutline() {\n    return this.debugMode & DEBUG_MODES.Outline;\n  }\n}\n","<ng-container *transloco=\"let t; read: 'infinite-scroller'\">\n\n  <div class=\"fixed-top overlay\" *ngIf=\"showDebugBar()\">\n    <strong>Captures Scroll Events:</strong> {{!this.isScrolling && this.allImagesLoaded}}\n    <strong>Is Scrolling:</strong> {{isScrollingForwards() ? 'Forwards' : 'Backwards'}} {{this.isScrolling}}\n    <strong>All Images Loaded:</strong> {{this.allImagesLoaded}}\n    <strong>Prefetched</strong> {{minPageLoaded}}-{{maxPageLoaded}}\n    <strong>Pages:</strong> {{pageNum}} / {{totalPages - 1}}\n    <strong>At Top:</strong> {{atTop}}\n    <strong>At Bottom:</strong> {{atBottom}}\n    <strong>Total Height:</strong> {{getTotalHeight()}}\n    <strong>Total Scroll:</strong> {{getTotalScroll()}}\n    <strong>Scroll Top:</strong> {{getScrollTop()}}\n  </div>\n\n  <div *ngIf=\"atTop\" #topSpacer class=\"spacer top\" role=\"alert\" (click)=\"loadPrevChapter.emit()\">\n    <div style=\"height: 200px\"></div>\n    <div>\n      <button class=\"btn btn-icon mx-auto\">\n        <i class=\"fa fa-angle-double-up animate\" aria-hidden=\"true\"></i>\n      </button>\n      <span class=\"mx-auto text\">{{t('continuous-reading-prev-chapter')}}</span>\n      <button class=\"btn btn-icon mx-auto\">\n        <i class=\"fa fa-angle-double-up animate\" aria-hidden=\"true\"></i>\n      </button>\n      <span class=\"visually-hidden\">{{t('continuous-reading-prev-chapter-alt')}}</span>\n    </div>\n  </div>\n\n  <div infinite-scroll [infiniteScrollDistance]=\"1\" [infiniteScrollThrottle]=\"50\">\n    <ng-container *ngFor=\"let item of webtoonImages | async; let index = index;\">\n      <img src=\"{{item.src}}\" style=\"display: block\"\n           class=\"mx-auto {{pageNum === item.page && showDebugOutline() ? 'active': ''}} {{areImagesWiderThanWindow ? 'full-width' : ''}}\"\n           rel=\"nofollow\" alt=\"image\" (load)=\"onImageLoad($event)\" id=\"page-{{item.page}}\" [attr.page]=\"item.page\" ondragstart=\"return false;\" onselectstart=\"return false;\">\n    </ng-container>\n  </div>\n\n  <div #bottomSpacer class=\"spacer bottom\" role=\"alert\" (click)=\"loadNextChapter.emit()\">\n    <div>\n      <button class=\"btn btn-icon mx-auto\">\n        <i class=\"fa fa-angle-double-down animate\" aria-hidden=\"true\"></i>\n      </button>\n      <span class=\"mx-auto text\">{{t('continuous-reading-next-chapter')}}</span>\n      <button class=\"btn btn-icon mx-auto\">\n        <i class=\"fa fa-angle-double-down animate\" aria-hidden=\"true\"></i>\n      </button>\n      <span class=\"visually-hidden\">{{t('continuous-reading-next-chapter-alt')}}</span>\n    </div>\n    <div style=\"height: 200px\"></div>\n  </div>\n\n</ng-container>\n","import { fromEvent, Observable, race, Subscription } from 'rxjs';\nimport { elementAt, map, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nexport interface SwipeCoordinates {\n    x: number;\n    y: number;\n  }\n  \n  export enum SwipeDirection {\n    X = 'x',\n    Y = 'y'\n  }\n  \n  export interface SwipeStartEvent {\n    x: number;\n    y: number;\n    direction: SwipeDirection;\n  }\n  \n  export interface SwipeEvent {\n    direction: SwipeDirection;\n    distance: number;\n  }\n  \n  export interface SwipeSubscriptionConfig {\n    domElement: HTMLElement;\n    onSwipeMove?: (event: SwipeEvent) => void;\n    onSwipeEnd?: (event: SwipeEvent) => void;\n  }\n\n\nexport function createSwipeSubscription({ domElement, onSwipeMove, onSwipeEnd }: SwipeSubscriptionConfig): Subscription {\n  if (!(domElement instanceof HTMLElement)) {\n    throw new Error('Provided domElement should be an instance of HTMLElement');\n  }\n\n  if ((typeof onSwipeMove !== 'function') && (typeof onSwipeEnd !== 'function')) {\n    throw new Error('At least one of the following swipe event handler functions should be provided: onSwipeMove and/or onSwipeEnd');\n  }\n\n  const touchStarts$ = fromEvent<TouchEvent>(domElement, 'touchstart').pipe(map(getTouchCoordinates));\n  const touchMoves$ = fromEvent<TouchEvent>(domElement, 'touchmove').pipe(map(getTouchCoordinates));\n  const touchEnds$ = fromEvent<TouchEvent>(domElement, 'touchend').pipe(map(getTouchCoordinates));\n  const touchCancels$ = fromEvent<TouchEvent>(domElement, 'touchcancel');\n\n  const touchStartsWithDirection$: Observable<SwipeStartEvent> = touchStarts$.pipe(\n    switchMap((touchStartEvent: SwipeCoordinates) => touchMoves$.pipe(\n      elementAt(3),\n      map((touchMoveEvent: SwipeCoordinates) => ({\n          x: touchStartEvent.x,\n          y: touchStartEvent.y,\n          direction: getTouchDirection(touchStartEvent, touchMoveEvent)\n        })\n      ))\n    )\n  );\n\n  return touchStartsWithDirection$.pipe(\n    switchMap(touchStartEvent => touchMoves$.pipe(\n      map(touchMoveEvent => getTouchDistance(touchStartEvent, touchMoveEvent)),\n      tap((coordinates: SwipeCoordinates) => {\n        if (typeof onSwipeMove !== 'function') { return; }\n        onSwipeMove(getSwipeEvent(touchStartEvent, coordinates));\n      }),\n      takeUntil(race(\n        touchEnds$.pipe(\n          map(touchEndEvent => getTouchDistance(touchStartEvent, touchEndEvent)),\n          tap((coordinates: SwipeCoordinates) => {\n            if (typeof onSwipeEnd !== 'function') { return; }\n            onSwipeEnd(getSwipeEvent(touchStartEvent, coordinates));\n          })\n        ),\n        touchCancels$\n      ))\n    ))\n  ).subscribe();\n}\n\nfunction getTouchCoordinates(touchEvent: TouchEvent): SwipeCoordinates  {\n  return {\n    x: touchEvent.changedTouches[0].clientX,\n    y: touchEvent.changedTouches[0].clientY\n  };\n}\n\nfunction getTouchDistance(startCoordinates: SwipeCoordinates, moveCoordinates: SwipeCoordinates): SwipeCoordinates {\n  return {\n    x: moveCoordinates.x - startCoordinates.x,\n    y: moveCoordinates.y - startCoordinates.y\n  };\n}\n\nfunction getTouchDirection(startCoordinates: SwipeCoordinates, moveCoordinates: SwipeCoordinates): SwipeDirection {\n  const { x, y } = getTouchDistance(startCoordinates, moveCoordinates);\n  return Math.abs(x) < Math.abs(y) ? SwipeDirection.Y : SwipeDirection.X;\n}\n\nfunction getSwipeEvent(touchStartEvent: SwipeStartEvent, coordinates: SwipeCoordinates): SwipeEvent  {\n  return {\n    direction: touchStartEvent.direction,\n    distance: coordinates[touchStartEvent.direction]\n  };\n}\n","import { Directive, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { createSwipeSubscription, SwipeEvent } from './ag-swipe.core';\n\n@Directive({\n    selector: '[ngSwipe]',\n    standalone: true\n})\nexport class SwipeDirective implements OnInit, OnDestroy {\n  private swipeSubscription: Subscription | undefined;\n\n  @Output() swipeMove: EventEmitter<SwipeEvent> = new EventEmitter<SwipeEvent>();\n  @Output() swipeEnd: EventEmitter<SwipeEvent> = new EventEmitter<SwipeEvent>();\n\n  constructor(\n    private elementRef: ElementRef,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      this.swipeSubscription = createSwipeSubscription({\n        domElement: this.elementRef.nativeElement,\n        onSwipeMove: (swipeMoveEvent: SwipeEvent) => this.swipeMove.emit(swipeMoveEvent),\n        onSwipeEnd: (swipeEndEvent: SwipeEvent) => this.swipeEnd.emit(swipeEndEvent)\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.swipeSubscription?.unsubscribe?.();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  inject,\n  Inject,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {AsyncPipe, DOCUMENT, NgClass, NgFor, NgIf, NgStyle, NgSwitch, NgSwitchCase, PercentPipe} from '@angular/common';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {\n  BehaviorSubject,\n  debounceTime,\n  distinctUntilChanged,\n  forkJoin,\n  fromEvent,\n  map,\n  merge,\n  Observable,\n  ReplaySubject,\n  Subject,\n  take,\n  tap\n} from 'rxjs';\nimport {ChangeContext, LabelType, NgxSliderModule, Options} from 'ngx-slider-v2';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {FormBuilder, FormControl, FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModal, NgbProgressbar} from '@ng-bootstrap/ng-bootstrap';\nimport {ToastrService} from 'ngx-toastr';\nimport {ShortcutsModalComponent} from 'src/app/reader-shared/_modals/shortcuts-modal/shortcuts-modal.component';\nimport {Stack} from 'src/app/shared/data-structures/stack';\nimport {Breakpoint, KEY_CODES, UtilityService} from 'src/app/shared/_services/utility.service';\nimport {LibraryType} from 'src/app/_models/library/library';\nimport {MangaFormat} from 'src/app/_models/manga-format';\nimport {PageSplitOption} from 'src/app/_models/preferences/page-split-option';\nimport {layoutModes, pageSplitOptions} from 'src/app/_models/preferences/preferences';\nimport {ReaderMode} from 'src/app/_models/preferences/reader-mode';\nimport {ReadingDirection} from 'src/app/_models/preferences/reading-direction';\nimport {ScalingOption} from 'src/app/_models/preferences/scaling-option';\nimport {User} from 'src/app/_models/user';\nimport {AccountService} from 'src/app/_services/account.service';\nimport {MemberService} from 'src/app/_services/member.service';\nimport {NavService} from 'src/app/_services/nav.service';\nimport {ReaderService} from 'src/app/_services/reader.service';\nimport {LayoutMode} from '../../_models/layout-mode';\nimport {FITTING_OPTION, PAGING_DIRECTION} from '../../_models/reader-enums';\nimport {ReaderSetting} from '../../_models/reader-setting';\nimport {ManagaReaderService} from '../../_service/managa-reader.service';\nimport {CanvasRendererComponent} from '../canvas-renderer/canvas-renderer.component';\nimport {DoubleRendererComponent} from '../double-renderer/double-renderer.component';\nimport {DoubleReverseRendererComponent} from '../double-reverse-renderer/double-reverse-renderer.component';\nimport {SingleRendererComponent} from '../single-renderer/single-renderer.component';\nimport {ChapterInfo} from '../../_models/chapter-info';\nimport {DoubleNoCoverRendererComponent} from '../double-renderer-no-cover/double-no-cover-renderer.component';\nimport {SwipeEvent} from 'src/app/ng-swipe/ag-swipe.core';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {FullscreenIconPipe} from '../../../_pipes/fullscreen-icon.pipe';\nimport {ReaderModeIconPipe} from '../../../_pipes/reader-mode-icon.pipe';\nimport {FittingIconPipe} from '../../../_pipes/fitting-icon.pipe';\nimport {InfiniteScrollerComponent} from '../infinite-scroller/infinite-scroller.component';\nimport {SwipeDirective} from '../../../ng-swipe/ng-swipe.directive';\nimport {LoadingComponent} from '../../../shared/loading/loading.component';\nimport {translate, TranslocoDirective} from \"@ngneat/transloco\";\nimport {shareReplay} from \"rxjs/operators\";\n\n\nconst PREFETCH_PAGES = 10;\n\nconst CHAPTER_ID_NOT_FETCHED = -2;\nconst CHAPTER_ID_DOESNT_EXIST = -1;\n\nconst ANIMATION_SPEED = 200;\nconst OVERLAY_AUTO_CLOSE_TIME = 3000;\nconst CLICK_OVERLAY_TIMEOUT = 3000;\n\nenum ChapterInfoPosition {\n  Previous = 0,\n  Current = 1,\n  Next = 2\n}\n\nenum KeyDirection {\n  Right = 0,\n  Left = 1,\n  Up = 2,\n  Down = 3\n}\n\n@Component({\n    selector: 'app-manga-reader',\n    templateUrl: './manga-reader.component.html',\n    styleUrls: ['./manga-reader.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [ManagaReaderService],\n    animations: [\n        trigger('slideFromTop', [\n            state('in', style({ transform: 'translateY(0)' })),\n            transition('void => *', [\n                style({ transform: 'translateY(-100%)' }),\n                animate(ANIMATION_SPEED)\n            ]),\n            transition('* => void', [\n                animate(ANIMATION_SPEED, style({ transform: 'translateY(-100%)' })),\n            ])\n        ]),\n        trigger('slideFromBottom', [\n            state('in', style({ transform: 'translateY(0)' })),\n            transition('void => *', [\n                style({ transform: 'translateY(100%)' }),\n                animate(ANIMATION_SPEED)\n            ]),\n            transition('* => void', [\n                animate(ANIMATION_SPEED, style({ transform: 'translateY(100%)' })),\n            ])\n        ])\n    ],\n    standalone: true,\n  imports: [NgStyle, NgIf, LoadingComponent, SwipeDirective, CanvasRendererComponent, SingleRendererComponent,\n    DoubleRendererComponent, DoubleReverseRendererComponent, DoubleNoCoverRendererComponent, InfiniteScrollerComponent,\n    NgxSliderModule, ReactiveFormsModule, NgFor, NgSwitch, NgSwitchCase, FittingIconPipe, ReaderModeIconPipe,\n    FullscreenIconPipe, TranslocoDirective, NgbProgressbar, PercentPipe, NgClass, AsyncPipe]\n})\nexport class MangaReaderComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\n  @ViewChild('reader') reader!: ElementRef;\n  @ViewChild('readingArea') readingArea!: ElementRef;\n  @ViewChild('content') canvas: ElementRef | undefined;\n\n  @ViewChild(CanvasRendererComponent, { static: false }) canvasRenderer!: CanvasRendererComponent;\n  @ViewChild(SingleRendererComponent, { static: false }) singleRenderer!: SingleRendererComponent;\n  @ViewChild(DoubleRendererComponent, { static: false }) doubleRenderer!: DoubleRendererComponent;\n  @ViewChild(DoubleReverseRendererComponent, { static: false }) doubleReverseRenderer!: DoubleReverseRendererComponent;\n  @ViewChild(DoubleNoCoverRendererComponent, { static: false }) doubleNoCoverRenderer!: DoubleNoCoverRendererComponent;\n\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly route = inject(ActivatedRoute);\n  private readonly router = inject(Router);\n  private readonly accountService = inject(AccountService);\n  private readonly formBuilder = inject(FormBuilder);\n  private readonly navService = inject(NavService);\n  private readonly memberService = inject(MemberService);\n  private readonly modalService = inject(NgbModal);\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly toastr = inject(ToastrService);\n  public readonly readerService = inject(ReaderService);\n  public readonly utilityService = inject(UtilityService);\n  public readonly mangaReaderService = inject(ManagaReaderService);\n\n  protected readonly KeyDirection = KeyDirection;\n  protected readonly ReaderMode = ReaderMode;\n  protected readonly LayoutMode = LayoutMode;\n  protected readonly ReadingDirection = ReadingDirection;\n  protected readonly Breakpoint = Breakpoint;\n  protected readonly Math = Math;\n\n  libraryId!: number;\n  seriesId!: number;\n  volumeId!: number;\n  chapterId!: number;\n  /**\n   * Reading List id. Defaults to -1.\n   */\n  readingListId: number = CHAPTER_ID_DOESNT_EXIST;\n\n  /**\n   * If this is true, no progress will be saved.\n   */\n  incognitoMode: boolean = false;\n  /**\n   * If this is true, we are reading a bookmark. ChapterId will be 0. There is no continuous reading. Progress is not saved. Bookmark control is removed.\n   */\n  bookmarkMode: boolean = false;\n\n  /**\n   * If this is true, chapters will be fetched in the order of a reading list, rather than natural series order.\n   */\n  readingListMode: boolean = false;\n  /**\n   * The current page. UI will show this number + 1.\n   */\n  pageNum = 0;\n  /**\n   * Total pages in the given Chapter\n   */\n  maxPages = 1;\n  totalSeriesPages = 0;\n  totalSeriesPagesRead = 0;\n  user!: User;\n  generalSettingsForm!: FormGroup;\n\n  readingDirection = ReadingDirection.LeftToRight;\n  scalingOption = ScalingOption.FitToHeight;\n  pageSplitOption = PageSplitOption.FitSplit;\n\n  isFullscreen: boolean = false;\n  autoCloseMenu: boolean = true;\n\n  readerMode: ReaderMode = ReaderMode.LeftRight;\n  readerModeSubject = new BehaviorSubject(this.readerMode);\n  readerMode$: Observable<ReaderMode> = this.readerModeSubject.asObservable();\n\n  pagingDirection: PAGING_DIRECTION = PAGING_DIRECTION.FORWARD;\n  pagingDirectionSubject: Subject<PAGING_DIRECTION> = new BehaviorSubject(this.pagingDirection);\n  pagingDirection$: Observable<PAGING_DIRECTION> = this.pagingDirectionSubject.asObservable();\n\n\n  pageSplitOptionsTranslated = pageSplitOptions.map(this.translatePrefOptions);\n  layoutModesTranslated = layoutModes.map(this.translatePrefOptions);\n\n  isLoading = true;\n  hasBookmarkRights: boolean = false; // TODO: This can be an observable\n\n\n  getPageFn!: (pageNum: number) => HTMLImageElement;\n\n\n  /**\n   * Used to render a page on the canvas or in the image tag. This Image element is prefetched by the cachedImages buffer.\n   * @remarks Used for rendering to screen.\n   */\n  canvasImage = new Image();\n\n  /**\n   * A circular array of size PREFETCH_PAGES. Maintains prefetched Images around the current page to load from to avoid loading animation.\n   * @see CircularArray\n   */\n  cachedImages: Array<HTMLImageElement> = [];\n  /**\n   * A stack of the chapter ids we come across during continuous reading mode. When we traverse a boundary, we use this to avoid extra API calls.\n   * @see Stack\n   */\n  continuousChaptersStack: Stack<number> = new Stack();\n\n  continuousChapterInfos: Array<ChapterInfo | undefined> = [undefined, undefined, undefined];\n\n  /**\n   * An event emitter when a page change occurs. Used solely by the webtoon reader.\n   */\n  goToPageEvent!: BehaviorSubject<number>; // Renderer interaction\n\n   /**\n   * An event emitter when a bookmark on a page change occurs. Used solely by the webtoon reader.\n   */\n  showBookmarkEffectEvent: ReplaySubject<number> = new ReplaySubject<number>();\n  showBookmarkEffect$: Observable<number> = this.showBookmarkEffectEvent.asObservable();\n   /**\n   * An event emitter when fullscreen mode is toggled. Used solely by the webtoon reader.\n   */\n  fullscreenEvent: ReplaySubject<boolean> = new ReplaySubject<boolean>();\n  /**\n   * If the menu is open/visible.\n   */\n  menuOpen = false;\n  /**\n   * If the prev page allows a page change to occur.\n   */\n  prevPageDisabled = false;\n  /**\n   * If the next page allows a page change to occur.\n   */\n  nextPageDisabled = false;\n  pageOptions: Options = {\n    floor: 0,\n    ceil: 0,\n    step: 1,\n    boundPointerLabels: true,\n    showSelectionBar: true,\n    translate: (value: number, label: LabelType) => {\n      if (label == LabelType.Floor) {\n        return 1 + '';\n      } else if (label === LabelType.Ceil) {\n        return this.maxPages + '';\n      }\n      return (this.pageNum + 1) + '';\n    },\n    animate: false\n  };\n  refreshSlider: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Used to store the Series name for UI\n   */\n  title: string = '';\n  /**\n   * Used to store the Volume/Chapter information\n   */\n  subtitle: string = '';\n  /**\n   * Timeout id for auto-closing menu overlay\n   */\n  menuTimeout: any;\n  /**\n   * If the click overlay is rendered on screen\n   */\n  showClickOverlay: boolean = false;\n  private showClickOverlaySubject: ReplaySubject<boolean> = new ReplaySubject();\n  showClickOverlay$ = this.showClickOverlaySubject.asObservable();\n  /**\n   * Next Chapter Id. This is not guaranteed to be a valid ChapterId. Prefetched on page load (non-blocking).\n   */\n  nextChapterId: number = CHAPTER_ID_NOT_FETCHED;\n  /**\n   * Previous Chapter Id. This is not guaranteed to be a valid ChapterId. Prefetched on page load (non-blocking).\n   */\n  prevChapterId: number = CHAPTER_ID_NOT_FETCHED;\n  /**\n   * Is there a next chapter. If not, this will disable UI controls.\n   */\n  nextChapterDisabled: boolean = false;\n  /**\n   * Is there a previous chapter. If not, this will disable UI controls.\n   */\n  prevChapterDisabled: boolean = false;\n  /**\n   * Has the next chapter been prefetched. Prefetched means the backend will cache the files.\n   */\n  nextChapterPrefetched: boolean = false;\n  /**\n   * Has the previous chapter been prefetched. Prefetched means the backend will cache the files.\n   */\n  prevChapterPrefetched: boolean = false;\n  /**\n   * If extended settings area is visible. Blocks auto-closing of menu.\n   */\n  settingsOpen: boolean = false;\n  /**\n   * A map of bookmarked pages to anything. Used for O(1) lookup time if a page is bookmarked or not.\n   */\n  bookmarks: {[key: string]: number} = {};\n  /**\n   * Library Type used for rendering chapter or issue\n   */\n  libraryType: LibraryType = LibraryType.Manga;\n  /**\n   * Used for webtoon reader. When loading pages or data, this will disable the reader\n   */\n  inSetup: boolean = true;\n  /**\n   * If we render 2 pages at once or 1\n   */\n  layoutMode: LayoutMode = LayoutMode.Single;\n  /**\n   * Background color for canvas/reader. User configured.\n   */\n  backgroundColor: string = '#FFFFFF';\n\n  /**\n   * This is here as absolute layout requires us to calculate a negative right property for the right pagination when there is overflow. This is calculated on scroll.\n   */\n  rightPaginationOffset = 0;\n\n  /**\n   * Previous amount of scroll left. Used for swipe to paginate functionality.\n   */\n  prevScrollLeft = 0;\n  /**\n   * Previous amount of scroll top. Used for swipe to paginate functionality.\n   */\n  prevScrollTop = 0;\n\n  prevIsHorizontalScrollLeft = true;\n  prevIsVerticalScrollLeft = true;\n\n  /**\n   * Has the user scrolled to the far right side. This is used for swipe to next page and must ensure user is at end of scroll then on next swipe, will move pages.\n   */\n  hasHitRightScroll = false;\n  /**\n   * Has the user scrolled once for the current page\n   */\n  hasScrolledX: boolean = false;\n  /**\n   * Has the user scrolled once in the Y axis for the current page\n   */\n  hasScrolledY: boolean = false;\n  /**\n   * Has the user scrolled to far left size. This doesn't include starting from no scroll\n   */\n  hasHitZeroScroll: boolean = false;\n  /**\n   * Has the user scrolled to the far top of the screen\n   */\n  hasHitZeroTopScroll: boolean = false;\n  /**\n   * Has the user scrolled to the far bottom of the screen\n   */\n  hasHitBottomTopScroll: boolean = false;\n\n  /**\n   * Show and log debug information\n   */\n  debugMode: boolean = false;\n\n  // Renderer interaction\n  readerSettings$!: Observable<ReaderSetting>;\n  private currentImage: Subject<HTMLImageElement | null> = new ReplaySubject(1);\n  currentImage$: Observable<HTMLImageElement | null> = this.currentImage.asObservable().pipe(\n    shareReplay({refCount: true, bufferSize: 2})\n  );\n\n  private pageNumSubject: Subject<{pageNum: number, maxPages: number}> = new ReplaySubject();\n  pageNum$: Observable<{pageNum: number, maxPages: number}> = this.pageNumSubject.asObservable();\n\n  getPageUrl = (pageNum: number, chapterId: number = this.chapterId) => {\n    if (this.bookmarkMode) return this.readerService.getBookmarkPageUrl(this.seriesId, this.user.apiKey, pageNum);\n    return this.readerService.getPageUrl(chapterId, pageNum);\n  }\n\n  get CurrentPageBookmarked() {\n    return this.bookmarks.hasOwnProperty(this.pageNum);\n  }\n\n  get WindowWidth() {\n    return this.readingArea?.nativeElement.scrollWidth + 'px';\n  }\n\n  get ImageHeight() {\n    if (this.FittingOption !== FITTING_OPTION.HEIGHT) {\n      return this.mangaReaderService.getPageDimensions(this.pageNum)?.height  + 'px';\n    }\n\n    return this.readingArea?.nativeElement?.clientHeight + 'px';\n  }\n\n  // This is for the pagination area\n  get MaxHeight() {\n    if (this.FittingOption ===  FITTING_OPTION.HEIGHT) {\n      return 'calc(var(--vh) * 100)';\n    }\n\n    const needsScrolling = this.readingArea?.nativeElement?.scrollHeight > this.readingArea?.nativeElement?.clientHeight;\n    if (this.readingArea?.nativeElement?.clientHeight <= this.mangaReaderService.getPageDimensions(this.pageNum)?.height!) {\n      if (needsScrolling) {\n        return Math.min(this.readingArea?.nativeElement?.scrollHeight, this.mangaReaderService.getPageDimensions(this.pageNum)?.height!) + 'px';\n      }\n    }\n    return this.readingArea?.nativeElement?.clientHeight + 'px';\n  }\n\n  get RightPaginationOffset() {\n    if (this.readerMode === ReaderMode.LeftRight && this.FittingOption !== FITTING_OPTION.WIDTH) {\n      return (this.readingArea?.nativeElement?.scrollLeft || 0) * -1;\n    }\n    return 0;\n  }\n\n  get SplitIconClass() {\n    if (this.mangaReaderService.isSplitLeftToRight(this.pageSplitOption)) {\n      return 'left-side';\n    } else if (this.mangaReaderService.isNoSplit(this.pageSplitOption)) {\n      return 'none';\n    }\n    return 'right-side';\n  }\n\n  get FittingOption() { return this.generalSettingsForm?.get('fittingOption')?.value || FITTING_OPTION.HEIGHT; }\n  get ReadingAreaWidth() {\n    return this.readingArea?.nativeElement.scrollWidth - this.readingArea?.nativeElement.clientWidth;\n  }\n\n  get ReadingAreaHeight() {\n    return this.readingArea?.nativeElement.scrollHeight - this.readingArea?.nativeElement.clientHeight;\n  }\n\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    this.navService.hideNavBar();\n    this.navService.hideSideNav();\n    this.cdRef.markForCheck();\n  }\n\n  ngOnInit(): void {\n    const libraryId = this.route.snapshot.paramMap.get('libraryId');\n    const seriesId = this.route.snapshot.paramMap.get('seriesId');\n    const chapterId = this.route.snapshot.paramMap.get('chapterId');\n    if (libraryId === null || seriesId === null || chapterId === null) {\n      this.router.navigateByUrl('/home');\n      return;\n    }\n\n    this.getPageFn = this.getPage.bind(this);\n\n    this.libraryId = parseInt(libraryId, 10);\n    this.seriesId = parseInt(seriesId, 10);\n    this.chapterId = parseInt(chapterId, 10);\n    this.incognitoMode = this.route.snapshot.queryParamMap.get('incognitoMode') === 'true';\n    this.bookmarkMode = this.route.snapshot.queryParamMap.get('bookmarkMode') === 'true';\n\n    const readingListId = this.route.snapshot.queryParamMap.get('readingListId');\n    if (readingListId != null) {\n      this.readingListMode = true;\n      this.readingListId = parseInt(readingListId, 10);\n    }\n\n    this.continuousChaptersStack.push(this.chapterId);\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      if (!user) {\n        this.router.navigateByUrl('/login');\n        return;\n      }\n\n      this.user = user;\n      this.hasBookmarkRights = this.accountService.hasBookmarkRole(user) || this.accountService.hasAdminRole(user);\n      this.readingDirection = this.user.preferences.readingDirection;\n      this.scalingOption = this.user.preferences.scalingOption;\n      this.pageSplitOption = this.user.preferences.pageSplitOption;\n      this.autoCloseMenu = this.user.preferences.autoCloseMenu;\n      this.readerMode = this.user.preferences.readerMode;\n      this.layoutMode = this.user.preferences.layoutMode || LayoutMode.Single;\n      this.backgroundColor = this.user.preferences.backgroundColor || '#000000';\n      this.readerService.setOverrideStyles(this.backgroundColor);\n\n      this.generalSettingsForm = this.formBuilder.nonNullable.group({\n        autoCloseMenu: new FormControl(this.autoCloseMenu),\n        pageSplitOption: new FormControl(this.pageSplitOption),\n        fittingOption: new FormControl(this.mangaReaderService.translateScalingOption(this.scalingOption)),\n        layoutMode: new FormControl(this.layoutMode),\n        darkness: new FormControl(100),\n        emulateBook: new FormControl(this.user.preferences.emulateBook),\n        swipeToPaginate: new FormControl(this.user.preferences.swipeToPaginate)\n      });\n\n      this.readerModeSubject.next(this.readerMode);\n      this.pagingDirectionSubject.next(this.pagingDirection);\n\n      // We need a mergeMap when page changes\n      this.readerSettings$ = merge(this.generalSettingsForm.valueChanges, this.pagingDirection$, this.readerMode$).pipe(\n        map(_ => this.createReaderSettingsUpdate()),\n        takeUntilDestroyed(this.destroyRef),\n      );\n\n      this.updateForm();\n\n      this.pagingDirection$.pipe(\n        distinctUntilChanged(),\n        tap(dir => {\n          this.pagingDirection = dir;\n          this.cdRef.markForCheck();\n        }),\n        takeUntilDestroyed(this.destroyRef)\n      ).subscribe(() => {});\n\n      this.readerMode$.pipe(\n        distinctUntilChanged(),\n        tap(mode => {\n          this.readerMode = mode;\n          this.disableDoubleRendererIfScreenTooSmall();\n          this.cdRef.markForCheck();\n        }),\n        takeUntilDestroyed(this.destroyRef)\n      ).subscribe(() => {});\n\n\n\n\n      this.generalSettingsForm.get('layoutMode')?.valueChanges.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(val => {\n\n        const changeOccurred = parseInt(val, 10) !== this.layoutMode;\n        this.layoutMode = parseInt(val, 10);\n\n        if (this.layoutMode === LayoutMode.Single) {\n          this.generalSettingsForm.get('pageSplitOption')?.setValue(this.user.preferences.pageSplitOption);\n          this.generalSettingsForm.get('pageSplitOption')?.enable();\n          this.generalSettingsForm.get('fittingOption')?.enable();\n          this.generalSettingsForm.get('emulateBook')?.enable();\n        } else {\n          this.generalSettingsForm.get('pageSplitOption')?.setValue(PageSplitOption.NoSplit);\n          this.generalSettingsForm.get('pageSplitOption')?.disable();\n          this.generalSettingsForm.get('fittingOption')?.setValue(this.mangaReaderService.translateScalingOption(ScalingOption.FitToHeight));\n          this.generalSettingsForm.get('fittingOption')?.disable();\n          this.generalSettingsForm.get('emulateBook')?.enable();\n        }\n        this.cdRef.markForCheck();\n\n        // Re-render the current page when we switch layouts\n        if (changeOccurred) {\n          this.setPageNum(this.adjustPagesForDoubleRenderer(this.pageNum));\n          this.loadPage();\n        }\n      });\n\n      this.generalSettingsForm.valueChanges.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(() => {\n        this.autoCloseMenu = this.generalSettingsForm.get('autoCloseMenu')?.value;\n        this.pageSplitOption = parseInt(this.generalSettingsForm.get('pageSplitOption')?.value, 10);\n\n        const needsSplitting = this.mangaReaderService.isWidePage(this.readerService.imageUrlToPageNum(this.canvasImage.src));\n        // If we need to split on a menu change, then we need to re-render.\n        if (needsSplitting) {\n          // If we need to re-render, to ensure things layout properly, let's update paging direction & reset render\n          this.pagingDirectionSubject.next(PAGING_DIRECTION.FORWARD);\n          this.canvasRenderer.reset();\n          this.loadPage();\n        }\n      });\n\n      this.memberService.hasReadingProgress(this.libraryId).pipe(take(1)).subscribe(progress => {\n        if (!progress) {\n          this.toggleMenu();\n          this.toastr.info(translate('manga-reader.first-time-reading-manga'));\n        }\n      });\n    });\n\n    this.init();\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.readingArea.nativeElement, 'scroll').pipe(debounceTime(20), takeUntilDestroyed(this.destroyRef)).subscribe(() => {\n      if (this.readerMode === ReaderMode.Webtoon) return;\n      if (this.readerMode === ReaderMode.LeftRight && this.FittingOption === FITTING_OPTION.HEIGHT) {\n        this.rightPaginationOffset = (this.readingArea.nativeElement.scrollLeft) * -1;\n        this.cdRef.markForCheck();\n        return;\n      }\n      this.rightPaginationOffset = 0;\n      this.cdRef.markForCheck();\n    });\n\n    fromEvent(this.readingArea.nativeElement, 'click').pipe(debounceTime(200), takeUntilDestroyed(this.destroyRef)).subscribe((event: MouseEvent | any) => {\n      if (event.detail > 1) return;\n      this.toggleMenu();\n    });\n\n    fromEvent(this.readingArea.nativeElement, 'scroll').pipe(debounceTime(200), takeUntilDestroyed(this.destroyRef)).subscribe(() => {\n      this.prevScrollLeft = this.readingArea?.nativeElement?.scrollLeft || 0;\n      this.prevScrollTop = this.readingArea?.nativeElement?.scrollTop || 0;\n      this.hasScrolledX = true;\n      this.hasScrolledY = true;\n    });\n  }\n\n  ngOnDestroy() {\n    this.readerService.resetOverrideStyles();\n    this.navService.showNavBar();\n    this.navService.showSideNav();\n    this.showBookmarkEffectEvent.complete();\n    if (this.goToPageEvent !== undefined) this.goToPageEvent.complete();\n    this.readerService.disableWakeLock();\n  }\n\n\n  @HostListener('window:resize', ['$event'])\n  @HostListener('window:orientationchange', ['$event'])\n  onResize() {\n    this.disableDoubleRendererIfScreenTooSmall();\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  handleKeyPress(event: KeyboardEvent) {\n    switch (this.readerMode) {\n      case ReaderMode.LeftRight:\n        if (event.key === KEY_CODES.RIGHT_ARROW) {\n          if (!this.checkIfPaginationAllowed(KeyDirection.Right)) return;\n          this.readingDirection === ReadingDirection.LeftToRight ? this.nextPage() : this.prevPage();\n        } else if (event.key === KEY_CODES.LEFT_ARROW) {\n          if (!this.checkIfPaginationAllowed(KeyDirection.Left)) return;\n          this.readingDirection === ReadingDirection.LeftToRight ? this.prevPage() : this.nextPage();\n        }\n        break;\n      case ReaderMode.UpDown:\n        if (event.key === KEY_CODES.UP_ARROW) {\n          if (!this.checkIfPaginationAllowed(KeyDirection.Up)) return;\n          this.prevPage();\n        } else if (event.key === KEY_CODES.DOWN_ARROW) {\n          if (!this.checkIfPaginationAllowed(KeyDirection.Down)) return;\n          this.nextPage();\n        }\n        break;\n      case ReaderMode.Webtoon:\n        break;\n    }\n\n    if (event.key === KEY_CODES.ESC_KEY) {\n      if (this.menuOpen) {\n        this.toggleMenu();\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n      this.closeReader();\n    } else if (event.key === KEY_CODES.SPACE) {\n      this.toggleMenu();\n    } else if (event.key === KEY_CODES.G) {\n      const goToPageNum = this.promptForPage();\n      if (goToPageNum === null) { return; }\n      this.goToPage(parseInt(goToPageNum.trim(), 10));\n    } else if (event.key === KEY_CODES.B) {\n      this.bookmarkPage();\n    } else if (event.key === KEY_CODES.F) {\n      this.toggleFullscreen();\n    } else if (event.key === KEY_CODES.H) {\n      this.openShortcutModal();\n    }\n  }\n\n  createReaderSettingsUpdate() {\n    return {\n      pageSplit: parseInt(this.generalSettingsForm.get('pageSplitOption')?.value, 10),\n      fitting: (this.generalSettingsForm.get('fittingOption')?.value as FITTING_OPTION),\n      layoutMode: this.layoutMode,\n      darkness: parseInt(this.generalSettingsForm.get('darkness')?.value + '', 10) || 100,\n      pagingDirection: this.pagingDirection,\n      readerMode: this.readerMode,\n      emulateBook: this.generalSettingsForm.get('emulateBook')?.value,\n    };\n  }\n\n  // If we are in double mode, we need to check if our current page is on a right edge or not, if so adjust by decrementing by 1\n  adjustPagesForDoubleRenderer(pageNum: number) {\n    if (pageNum === this.maxPages - 1) return pageNum;\n    if (this.readerMode !== ReaderMode.Webtoon && this.layoutMode !== LayoutMode.Single) {\n      return this.mangaReaderService.adjustForDoubleReader(pageNum);\n    }\n    return pageNum;\n  }\n\n  disableDoubleRendererIfScreenTooSmall() {\n    if (window.innerWidth > window.innerHeight) {\n      this.generalSettingsForm.get('layoutMode')?.enable();\n      this.cdRef.markForCheck();\n      return;\n    }\n    if (this.layoutMode === LayoutMode.Single || this.readerMode === ReaderMode.Webtoon) return;\n\n    this.generalSettingsForm.get('layoutMode')?.setValue(LayoutMode.Single);\n    this.generalSettingsForm.get('layoutMode')?.disable();\n    this.toastr.info(translate('manga-reader.layout-mode-switched'));\n    this.cdRef.markForCheck();\n  }\n\n  /**\n   * Gets a page from cache else gets a brand new Image\n   * @param pageNum Page Number to load\n   * @param forceNew Forces to fetch a new image\n   * @param chapterId ChapterId to fetch page from. Defaults to current chapterId. Not used when in bookmark mode\n   * @returns HTMLImageElement | undefined\n   */\n   getPage(pageNum: number, chapterId: number = this.chapterId, forceNew: boolean = false) {\n\n    let img: HTMLImageElement | undefined;\n    if (this.bookmarkMode) img = this.cachedImages.find(img => this.readerService.imageUrlToPageNum(img.src) === pageNum);\n    else img = this.cachedImages.find(img => this.readerService.imageUrlToPageNum(img.src) === pageNum\n      && (this.readerService.imageUrlToChapterId(img.src) == chapterId || this.readerService.imageUrlToChapterId(img.src) === -1)\n    );\n\n    //console.log('Requesting page ', pageNum, ' found page: ', img, ' and app is requesting new image? ', forceNew);\n    if (!img || forceNew) {\n      img = new Image();\n      img.src = this.getPageUrl(pageNum, chapterId);\n      img.onload = (evt) => {\n        this.currentImage.next(img!);\n        this.cdRef.markForCheck();\n      }\n      // img.onerror = (evt) => {\n      //   const event = evt as Event;\n      //   const page = this.readerService.imageUrlToPageNum((event.target as HTMLImageElement).src);\n      //   console.error('Image failed to load: ', page);\n      //   (event.target as HTMLImageElement).onerror = null;\n      //   const newSrc = this.getPageUrl(pageNum, chapterId) + '#' + new Date().getTime();\n      //   console.log('requesting page ', page, ' with url: ', newSrc);\n      //   (event.target as HTMLImageElement).src = newSrc;\n      //   this.cdRef.markForCheck();\n      // }\n    }\n\n    return img;\n  }\n\n\n\n  isHorizontalScrollLeft() {\n    const scrollLeft = this.readingArea?.nativeElement?.scrollLeft || 0;\n    // if scrollLeft is 0 and this.ReadingAreaWidth is 0, then there is no scroll needed\n    // if they equal each other, it means we are at the end of the scroll area\n    if (scrollLeft === 0 && this.ReadingAreaWidth === 0) return false;\n    if (scrollLeft === this.ReadingAreaWidth) return false;\n    return scrollLeft < this.ReadingAreaWidth;\n  }\n\n  isVerticalScrollLeft() {\n    const scrollTop = this.readingArea?.nativeElement?.scrollTop || 0;\n    return scrollTop < this.ReadingAreaHeight;\n  }\n\n  /**\n   * Is there any room to scroll in the direction we are giving? If so, return false. Otherwise, return true.\n   * @param direction\n   * @returns\n   */\n  checkIfPaginationAllowed(direction: KeyDirection) {\n    if (this.readingArea === undefined || this.readingArea.nativeElement === undefined) return true;\n\n    const scrollLeft = this.readingArea?.nativeElement?.scrollLeft || 0;\n    const scrollTop = this.readingArea?.nativeElement?.scrollTop || 0;\n\n    switch (direction) {\n      case KeyDirection.Right:\n        if (this.prevIsHorizontalScrollLeft && !this.isHorizontalScrollLeft()) { return true; }\n        this.prevIsHorizontalScrollLeft = this.isHorizontalScrollLeft();\n\n        if (this.isHorizontalScrollLeft()) {\n          return false;\n        }\n        break;\n      case KeyDirection.Left:\n        this.prevIsHorizontalScrollLeft = this.isHorizontalScrollLeft();\n        if (scrollLeft > 0 || this.prevScrollLeft > 0) {\n          return false;\n        }\n        break;\n      case KeyDirection.Up:\n        this.prevIsVerticalScrollLeft = this.isVerticalScrollLeft();\n        if (scrollTop > 0|| this.prevScrollTop > 0) {\n          return false;\n        }\n        break;\n      case KeyDirection.Down:\n        if (this.prevIsVerticalScrollLeft && !this.isVerticalScrollLeft()) { return true; }\n        this.prevIsVerticalScrollLeft = this.isVerticalScrollLeft();\n\n        if (this.isVerticalScrollLeft()) {\n          return false;\n        }\n        break;\n    }\n\n    return true;\n  }\n\n\n\n  init() {\n    this.nextChapterId = CHAPTER_ID_NOT_FETCHED;\n    this.prevChapterId = CHAPTER_ID_NOT_FETCHED;\n    this.nextChapterDisabled = false;\n    this.prevChapterDisabled = false;\n    this.nextChapterPrefetched = false;\n    this.pageNum = 0;\n    this.pagingDirectionSubject.next(PAGING_DIRECTION.FORWARD);\n    this.inSetup = true;\n    this.canvasImage.src = '';\n    this.cdRef.markForCheck();\n\n    this.cachedImages = [];\n    for (let i = 0; i < PREFETCH_PAGES; i++) {\n      this.cachedImages.push(new Image());\n    }\n\n    if (this.goToPageEvent) {\n      // There was a bug where goToPage was emitting old values into infinite scroller between chapter loads. We explicitly clear it out between loads,\n      // and we use a BehaviourSubject to ensure only latest value is sent\n      this.goToPageEvent.complete();\n    }\n\n    if (this.bookmarkMode) {\n      this.readerService.getBookmarkInfo(this.seriesId).subscribe(bookmarkInfo => {\n        this.setPageNum(0);\n        this.title = bookmarkInfo.seriesName;\n        this.subtitle = translate('manga-reader.bookmarks-title');\n        this.libraryType = bookmarkInfo.libraryType;\n        this.maxPages = bookmarkInfo.pages;\n        this.mangaReaderService.load(bookmarkInfo);\n\n        // Due to change detection rules in Angular, we need to re-create the options object to apply the change\n        const newOptions: Options = Object.assign({}, this.pageOptions);\n        newOptions.ceil = this.maxPages - 1; // We -1 so that the slider UI shows us hitting the end, since visually we +1 everything.\n        this.pageOptions = newOptions;\n        this.inSetup = false;\n        this.cdRef.markForCheck();\n\n        this.goToPageEvent = new BehaviorSubject<number>(this.pageNum);\n\n        this.render();\n      });\n\n      setTimeout(() => {\n        this.readerService.enableWakeLock(this.reader.nativeElement);\n      }, 1000);\n      return;\n    }\n\n    forkJoin({\n      progress: this.readerService.getProgress(this.chapterId),\n      chapterInfo: this.readerService.getChapterInfo(this.chapterId, true),\n      bookmarks: this.readerService.getBookmarks(this.chapterId),\n    }).pipe(take(1)).subscribe(results => {\n      if (this.readingListMode && (results.chapterInfo.seriesFormat === MangaFormat.EPUB || results.chapterInfo.seriesFormat === MangaFormat.PDF)) {\n        // Redirect to the book reader.\n        const params = this.readerService.getQueryParamsObject(this.incognitoMode, this.readingListMode, this.readingListId);\n        this.router.navigate(this.readerService.getNavigationArray(results.chapterInfo.libraryId, results.chapterInfo.seriesId, this.chapterId, results.chapterInfo.seriesFormat), {queryParams: params});\n        return;\n      }\n\n      this.mangaReaderService.load(results.chapterInfo);\n\n      this.continuousChapterInfos[ChapterInfoPosition.Current] = results.chapterInfo;\n      this.volumeId = results.chapterInfo.volumeId;\n      this.maxPages = results.chapterInfo.pages;\n      let page = results.progress.pageNum;\n      if (page > this.maxPages) {\n        page = this.maxPages - 1;\n      }\n\n      page = this.adjustPagesForDoubleRenderer(page);\n\n      this.totalSeriesPages = results.chapterInfo.seriesTotalPages;\n      this.totalSeriesPagesRead = results.chapterInfo.seriesTotalPagesRead - page;\n\n      this.setPageNum(page); // first call\n      this.goToPageEvent = new BehaviorSubject<number>(this.pageNum);\n\n      // Due to change detection rules in Angular, we need to re-create the options object to apply the change\n      const newOptions: Options = Object.assign({}, this.pageOptions);\n      newOptions.ceil = this.maxPages - 1; // We -1 so that the slider UI shows us hitting the end, since visually we +1 everything.\n      this.pageOptions = newOptions;\n\n      this.libraryType = results.chapterInfo.libraryType;\n      this.title = results.chapterInfo.title;\n      this.subtitle = results.chapterInfo.subtitle;\n\n      this.inSetup = false;\n\n      this.disableDoubleRendererIfScreenTooSmall();\n\n\n      // From bookmarks, create map of pages to make lookup time O(1)\n      this.bookmarks = {};\n      results.bookmarks.forEach(bookmark => {\n        this.bookmarks[bookmark.page] = 1;\n      });\n      this.cdRef.markForCheck();\n\n      this.readerService.getNextChapter(this.seriesId, this.volumeId, this.chapterId, this.readingListId).pipe(take(1)).subscribe(chapterId => {\n        this.nextChapterId = chapterId;\n        if (chapterId === CHAPTER_ID_DOESNT_EXIST || chapterId === this.chapterId) {\n          this.nextChapterDisabled = true;\n          this.cdRef.markForCheck();\n        } else {\n          // Fetch the first page of next chapter\n          this.getPage(0, this.nextChapterId);\n\n        }\n      });\n      this.readerService.getPrevChapter(this.seriesId, this.volumeId, this.chapterId, this.readingListId).pipe(take(1)).subscribe(chapterId => {\n        this.prevChapterId = chapterId;\n        if (chapterId === CHAPTER_ID_DOESNT_EXIST || chapterId === this.chapterId) {\n          this.prevChapterDisabled = true;\n          this.cdRef.markForCheck();\n        } else {\n          // Fetch the last page of prev chapter\n          this.getPage(1000000, this.prevChapterId);\n        }\n      });\n\n      this.render();\n    }, () => {\n      setTimeout(() => {\n        this.closeReader();\n      }, 200);\n    });\n  }\n\n  closeReader() {\n    this.readerService.closeReader(this.readingListMode, this.readingListId);\n  }\n\n  render() {\n    if (this.readerMode === ReaderMode.Webtoon) {\n      this.isLoading = false;\n      this.cdRef.markForCheck();\n    } else {\n      this.loadPage();\n    }\n  }\n\n  cancelMenuCloseTimer() {\n    if (this.menuTimeout) {\n      clearTimeout(this.menuTimeout);\n    }\n  }\n\n  /**\n   * Whenever the menu is interacted with, restart the timer. However, if the settings menu is open, don't restart, just cancel the timeout.\n   */\n  resetMenuCloseTimer() {\n    if (this.menuTimeout) {\n      clearTimeout(this.menuTimeout);\n      if (!this.settingsOpen && this.autoCloseMenu) {\n        this.startMenuCloseTimer();\n      }\n    }\n  }\n\n  startMenuCloseTimer() {\n    if (!this.autoCloseMenu) { return; }\n\n    this.menuTimeout = setTimeout(() => {\n      this.toggleMenu();\n    }, OVERLAY_AUTO_CLOSE_TIME);\n  }\n\n\n  toggleMenu() {\n    this.menuOpen = !this.menuOpen;\n    this.cdRef.markForCheck();\n\n    if (this.menuTimeout) {\n      clearTimeout(this.menuTimeout);\n    }\n\n    if (this.menuOpen && !this.settingsOpen) {\n      this.startMenuCloseTimer();\n    } else {\n      this.showClickOverlay = false;\n      this.settingsOpen = false;\n      this.cdRef.markForCheck();\n    }\n  }\n\n  resetSwipeModifiers() {\n    this.prevScrollLeft = 0;\n    this.prevScrollTop = 0;\n    this.hasScrolledX = false;\n    this.hasScrolledY = false;\n    this.hasHitRightScroll = false;\n    this.hasHitZeroScroll = false;\n    this.hasHitBottomTopScroll = false;\n    this.hasHitZeroTopScroll = false;\n  }\n\n  /**\n   * This executes BEFORE fromEvent('scroll')\n   * @returns\n   * @param _\n   */\n  onSwipeMove(_: SwipeEvent) {\n    this.prevScrollLeft = this.readingArea?.nativeElement?.scrollLeft || 0;\n    this.prevScrollTop = this.readingArea?.nativeElement?.scrollTop || 0\n  }\n\n  triggerSwipePagination(direction: KeyDirection) {\n    if (!this.generalSettingsForm.get('swipeToPaginate')?.value) return;\n\n    switch(direction) {\n      case KeyDirection.Down:\n        this.nextPage();\n        break;\n      case KeyDirection.Right:\n        this.readingDirection === ReadingDirection.LeftToRight ? this.nextPage() : this.prevPage();\n        break;\n      case KeyDirection.Up:\n        this.prevPage();\n        break;\n      case KeyDirection.Left:\n          this.readingDirection === ReadingDirection.LeftToRight ? this.prevPage() : this.nextPage();\n          break;\n    }\n\n  }\n\n  onSwipeEnd(event: SwipeEvent) {\n    // Positive number means swiping right/down, negative means left\n    switch (this.readerMode) {\n      case ReaderMode.Webtoon: break;\n      case ReaderMode.LeftRight:\n        {\n          if (event.direction !== 'x') return;\n          const scrollLeft = this.readingArea?.nativeElement?.scrollLeft || 0;\n          const direction = event.distance < 0 ? KeyDirection.Right : KeyDirection.Left;\n          if (!this.checkIfPaginationAllowed(direction)) {\n            return;\n          }\n\n\n          // We just came from a swipe where pagination was required, and we are now at the end of the swipe, so make the user do it once more\n          if (direction === KeyDirection.Right) {\n            this.hasHitZeroScroll = false;\n            if (scrollLeft === 0 && this.ReadingAreaWidth === 0) {\n              this.triggerSwipePagination(direction);\n              return;\n            }\n            if (!this.hasHitRightScroll && this.checkIfPaginationAllowed(direction)) {\n              this.hasHitRightScroll = true;\n              return;\n            }\n          } else if (direction === KeyDirection.Left) {\n            this.hasHitRightScroll = false;\n\n            // If we have not scrolled then let the user page back\n            if (scrollLeft === 0 && this.prevScrollLeft === 0) {\n              if (!this.hasScrolledX || this.hasHitZeroScroll) {\n                this.triggerSwipePagination(direction);\n                return;\n              }\n              this.hasHitZeroScroll = true;\n              return;\n            }\n          }\n\n          if (!this.hasHitRightScroll) {\n            return;\n          }\n\n          this.triggerSwipePagination(direction);\n          break;\n        }\n      case ReaderMode.UpDown:\n        {\n          if (event.direction !== 'y') return;\n          const direction = event.distance < 0 ? KeyDirection.Down : KeyDirection.Up;\n          const scrollTop = this.readingArea?.nativeElement?.scrollTop || 0;\n          if (!this.checkIfPaginationAllowed(direction)) return;\n\n\n          if (direction === KeyDirection.Down) {\n            this.hasHitZeroTopScroll = false;\n            if (!this.hasHitBottomTopScroll && this.checkIfPaginationAllowed(direction)) {\n              this.hasHitBottomTopScroll = true;\n              return;\n            }\n          } else if (direction === KeyDirection.Up) {\n            this.hasHitBottomTopScroll = false;\n\n            // If we have not scrolled then let the user page back\n            if (scrollTop === 0 && this.prevScrollTop === 0) {\n              if (!this.hasScrolledY || this.hasHitZeroTopScroll) {\n                this.triggerSwipePagination(direction);\n                return;\n              }\n              this.hasHitZeroTopScroll = true;\n              return;\n            }\n          }\n\n          if (!this.hasHitBottomTopScroll) {\n            return;\n          }\n\n          this.triggerSwipePagination(direction);\n          break;\n        }\n    }\n  }\n\n  handlePageChange(event: any, direction: KeyDirection) {\n    if (this.readerMode === ReaderMode.Webtoon) {\n      if (direction === KeyDirection.Right) {\n        this.nextPage(event);\n      } else {\n        this.prevPage(event);\n      }\n      return;\n    }\n    if (direction === KeyDirection.Right) {\n      this.readingDirection === ReadingDirection.LeftToRight ? this.nextPage(event) : this.prevPage(event);\n    } else if (direction === KeyDirection.Left) {\n      this.readingDirection === ReadingDirection.LeftToRight ? this.prevPage(event) : this.nextPage(event);\n    }\n  }\n\n  nextPage(event?: any) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    this.resetSwipeModifiers();\n\n    this.isLoading = true;\n    this.cdRef.markForCheck();\n\n    this.pagingDirectionSubject.next(PAGING_DIRECTION.FORWARD);\n\n    const pageAmount = Math.max(this.canvasRenderer.getPageAmount(PAGING_DIRECTION.FORWARD), this.singleRenderer.getPageAmount(PAGING_DIRECTION.FORWARD),\n                                this.doubleRenderer.getPageAmount(PAGING_DIRECTION.FORWARD),\n                                this.doubleReverseRenderer.getPageAmount(PAGING_DIRECTION.FORWARD),\n                                this.doubleNoCoverRenderer.getPageAmount(PAGING_DIRECTION.FORWARD)\n                              );\n    // If we are on last page with split mode, we need to be able to progress, hence why we check if we could move backwards or not\n    const isSplitRendering = [PageSplitOption.SplitRightToLeft, PageSplitOption.SplitRightToLeft].includes(parseInt(this.generalSettingsForm.get('pageSplitOption')?.value, 10));\n    const notInSplit = this.canvasRenderer.getPageAmount(PAGING_DIRECTION.BACKWARDS) === 0;\n    const isASpread = this.mangaReaderService.isWidePage(this.pageNum);\n\n\n    if ((this.pageNum + pageAmount >= this.maxPages && (!isASpread || !isSplitRendering || notInSplit))) {\n      // Move to next volume/chapter automatically\n      this.loadNextChapter();\n      return;\n    }\n\n    this.setPageNum(this.pageNum + pageAmount);\n    this.loadPage();\n  }\n\n  prevPage(event?: any) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    this.resetSwipeModifiers();\n\n    this.isLoading = true;\n    this.cdRef.markForCheck();\n\n    this.pagingDirectionSubject.next(PAGING_DIRECTION.BACKWARDS);\n\n\n    const pageAmount = this.readerMode === ReaderMode.Webtoon ? 1 : Math.max(this.canvasRenderer.getPageAmount(PAGING_DIRECTION.BACKWARDS),\n                                this.singleRenderer.getPageAmount(PAGING_DIRECTION.BACKWARDS),\n                                this.doubleRenderer.getPageAmount(PAGING_DIRECTION.BACKWARDS),\n                                this.doubleNoCoverRenderer.getPageAmount(PAGING_DIRECTION.BACKWARDS),\n                                this.doubleReverseRenderer.getPageAmount(PAGING_DIRECTION.BACKWARDS)\n                              );\n\n    const notInSplit = this.readerMode === ReaderMode.Webtoon ? true : this.canvasRenderer.shouldMovePrev();\n\n    if ((this.pageNum - 1 < 0 && notInSplit)) {\n      // Move to next volume/chapter automatically\n      this.loadPrevChapter();\n      return;\n    }\n\n    this.setPageNum(this.pageNum - pageAmount);\n    this.loadPage();\n  }\n\n  /**\n   * Sets canvasImage's src to current page, but first attempts to use a pre-fetched image\n   */\n  setCanvasImage() {\n    if (this.cachedImages === undefined) return;\n\n    this.canvasImage = this.getPage(this.pageNum, this.chapterId, this.layoutMode !== LayoutMode.Single);\n    if (!this.canvasImage.complete) {\n      this.canvasImage.addEventListener('load', () => {\n        this.currentImage.next(this.canvasImage);\n      }, false);\n    } else {\n      this.currentImage.next(this.canvasImage);\n    }\n\n\n    this.cdRef.markForCheck();\n  }\n\n\n  loadNextChapter() {\n    if (this.nextPageDisabled || this.nextChapterDisabled || this.bookmarkMode) {\n      this.toastr.info(translate('manga-reader.no-next-chapter'));\n      this.isLoading = false;\n      this.cdRef.markForCheck();\n      return;\n     }\n\n    if (this.nextChapterId === CHAPTER_ID_NOT_FETCHED || this.nextChapterId === this.chapterId) {\n      this.readerService.getNextChapter(this.seriesId, this.volumeId, this.chapterId, this.readingListId).pipe(take(1)).subscribe(chapterId => {\n        this.nextChapterId = chapterId;\n        this.loadChapter(chapterId, 'Next');\n      });\n    } else {\n      this.loadChapter(this.nextChapterId, 'Next');\n    }\n  }\n\n  loadPrevChapter() {\n    if (this.prevPageDisabled || this.prevChapterDisabled || this.bookmarkMode) {\n      this.toastr.info(translate('manga-reader.no-prev-chapter'));\n      this.isLoading = false;\n      this.cdRef.markForCheck();\n      return;\n    }\n    this.continuousChaptersStack.pop();\n    const prevChapter = this.continuousChaptersStack.peek();\n    if (prevChapter != this.chapterId) {\n      if (prevChapter !== undefined) {\n        this.chapterId = prevChapter;\n        this.init();\n        return;\n      }\n    }\n\n    if (this.prevChapterId === CHAPTER_ID_NOT_FETCHED || this.prevChapterId === this.chapterId) {\n      this.readerService.getPrevChapter(this.seriesId, this.volumeId, this.chapterId, this.readingListId).pipe(take(1)).subscribe(chapterId => {\n        this.prevChapterId = chapterId;\n        this.loadChapter(chapterId, 'Prev');\n      });\n    } else {\n      this.loadChapter(this.prevChapterId, 'Prev');\n    }\n  }\n\n  loadChapter(chapterId: number, direction: 'Next' | 'Prev') {\n    if (chapterId > 0) {\n      this.isLoading = true;\n      this.cdRef.markForCheck();\n\n      this.chapterId = chapterId;\n      this.continuousChaptersStack.push(chapterId);\n      // Load chapter Id onto route but don't reload\n      const newRoute = this.readerService.getNextChapterUrl(this.router.url, this.chapterId, this.incognitoMode, this.readingListMode, this.readingListId);\n      window.history.replaceState({}, '', newRoute);\n      this.init();\n      const msg = translate(direction === 'Next' ? 'toasts.load-next-chapter' : 'toasts.load-prev-chapter', {entity: this.utilityService.formatChapterName(this.libraryType).toLowerCase()});\n      this.toastr.info(msg, '', {timeOut: 3000});\n    } else {\n      // This will only happen if no actual chapter can be found\n      const msg = translate(direction === 'Next' ? 'toasts.no-next-chapter' : 'toasts.no-prev-chapter',\n        {entity: this.utilityService.formatChapterName(this.libraryType).toLowerCase()});\n      this.toastr.warning(msg);\n      this.isLoading = false;\n      if (direction === 'Prev') {\n        this.prevPageDisabled = true;\n      } else {\n        this.nextPageDisabled = true;\n      }\n      this.cdRef.markForCheck();\n    }\n  }\n\n\n\n  renderPage() {\n    const page = [this.canvasImage];\n\n    this.canvasRenderer?.renderPage(page);\n    this.singleRenderer?.renderPage(page);\n    this.doubleRenderer?.renderPage(page);\n    this.doubleNoCoverRenderer?.renderPage(page);\n    this.doubleReverseRenderer?.renderPage(page);\n\n    // Originally this was only for fit to height, but when swiping was introduced, it made more sense to do it always to reset to the same view\n    this.readingArea.nativeElement.scroll(0,0);\n\n    this.isLoading = false;\n    this.cdRef.markForCheck();\n  }\n\n  /**\n   * Maintains an array of images (that are requested from backend) around the user's current page. This allows for quick loading (seamless to user)\n   * and also maintains page info (wide image, etc.) due to onload event.\n   */\n  prefetch() {\n    // NOTE: This doesn't allow for any directionality\n    // NOTE: This doesn't maintain 1 image behind at all times\n    for(let i = 0; i <= PREFETCH_PAGES - 3; i++) {\n      let numOffset = this.pageNum + i;\n\n      if (numOffset > this.maxPages - 1) {\n        continue;\n      }\n\n      const index = (numOffset % this.cachedImages.length + this.cachedImages.length) % this.cachedImages.length;\n      const cachedImagePageNum = this.readerService.imageUrlToPageNum(this.cachedImages[index].src);\n      if (cachedImagePageNum !== numOffset) {\n        this.cachedImages[index] = this.getPage(numOffset, this.chapterId);\n      }\n    }\n  }\n\n\n  /**\n   * This is responsible for setting up the image variables. This will be moved out to different renderers\n   */\n  loadPage() {\n    if (this.readerMode === ReaderMode.Webtoon) return;\n\n    this.isLoading = true;\n    this.setCanvasImage();\n    this.cdRef.markForCheck();\n\n    this.renderPage();\n    this.isLoading = false;\n    this.cdRef.markForCheck();\n\n    this.prefetch();\n  }\n\n  setReadingDirection() {\n    if (this.readingDirection === ReadingDirection.LeftToRight) {\n      this.readingDirection = ReadingDirection.RightToLeft;\n    } else {\n      this.readingDirection = ReadingDirection.LeftToRight;\n    }\n\n    if (this.menuOpen && this.user.preferences.showScreenHints) {\n      this.showClickOverlay = true;\n      this.showClickOverlaySubject.next(true);\n      setTimeout(() => {\n        this.showClickOverlay = false;\n        this.showClickOverlaySubject.next(false);\n      }, CLICK_OVERLAY_TIMEOUT);\n    }\n  }\n\n\n  sliderDragUpdate(context: ChangeContext) {\n    // This will update the value for value except when in webtoon due to how the webtoon reader\n    // responds to page changes\n    if (this.readerMode !== ReaderMode.Webtoon) {\n      this.setPageNum(context.value);\n    }\n  }\n\n  sliderPageUpdate(context: ChangeContext) {\n    const page = context.value;\n\n    if (page > this.pageNum) {\n      this.pagingDirectionSubject.next(PAGING_DIRECTION.FORWARD);\n    } else {\n      this.pagingDirectionSubject.next(PAGING_DIRECTION.BACKWARDS);\n    }\n\n    this.setPageNum(this.adjustPagesForDoubleRenderer(page));\n    this.refreshSlider.emit();\n    this.goToPageEvent.next(this.pageNum);\n    this.render();\n  }\n\n  setPageNum(pageNum: number) {\n    this.pageNum = Math.max(Math.min(pageNum, this.maxPages - 1), 0);\n    this.pageNumSubject.next({pageNum: this.pageNum, maxPages: this.maxPages});\n    this.cdRef.markForCheck();\n\n    if (this.pageNum >= this.maxPages - 10) {\n      // Tell server to cache the next chapter\n      if (this.nextChapterId > 0 && !this.nextChapterPrefetched) {\n        this.readerService.getChapterInfo(this.nextChapterId).pipe(take(1)).subscribe(res => {\n          this.continuousChapterInfos[ChapterInfoPosition.Next] = res;\n          this.nextChapterPrefetched = true;\n          this.prefetchStartOfChapter(this.nextChapterId, PAGING_DIRECTION.FORWARD);\n        });\n      }\n    } else if (this.pageNum <= 10) {\n      if (this.prevChapterId > 0 && !this.prevChapterPrefetched) {\n        this.readerService.getChapterInfo(this.prevChapterId).pipe(take(1)).subscribe(res => {\n          this.continuousChapterInfos[ChapterInfoPosition.Previous] = res;\n          this.prevChapterPrefetched = true;\n          this.prefetchStartOfChapter(this.nextChapterId, PAGING_DIRECTION.BACKWARDS);\n        });\n      }\n    }\n\n    // Due to the fact that we start at image 0, but page 1, we need the last page to have progress as page + 1 to be completed\n    let tempPageNum = this.pageNum;\n    if (this.pageNum == this.maxPages - 1 && this.pagingDirection === PAGING_DIRECTION.FORWARD) {\n      tempPageNum = this.pageNum + 1;\n    }\n\n    if (!this.incognitoMode && !this.bookmarkMode) {\n      this.readerService.saveProgress(this.libraryId, this.seriesId, this.volumeId, this.chapterId, tempPageNum).pipe(take(1)).subscribe(() => {/* No operation */});\n    }\n  }\n\n  /**\n   * Loads the first 5 images (throwaway cache) from the given chapterId\n   * @param chapterId\n   * @param direction Used to indicate if the chapter is behind or ahead of current chapter\n   */\n  prefetchStartOfChapter(chapterId: number, direction: PAGING_DIRECTION) {\n    let pages = [];\n\n    if (direction === PAGING_DIRECTION.BACKWARDS) {\n      if (this.continuousChapterInfos[ChapterInfoPosition.Previous] === undefined) return;\n      const n = this.continuousChapterInfos[ChapterInfoPosition.Previous]!.pages;\n      pages = Array.from({length: n + 1}, (v, k) => n - k);\n    } else {\n      pages = [0, 1, 2, 3, 4];\n    }\n\n    let images = [];\n    pages.forEach((_, i: number) => {\n      let img = new Image();\n      img.src = this.getPageUrl(i, chapterId);\n      images.push(img)\n    });\n  }\n\n  goToPage(pageNum: number) {\n    let page = pageNum;\n\n    if (page === undefined || this.pageNum === page) { return; }\n\n    if (page > this.maxPages) {\n      page = this.maxPages;\n    } else if (page < 0) {\n      page = 0;\n    }\n\n    if (!(page === 0 || page === this.maxPages - 1)) {\n      page -= 1;\n    }\n\n    if (page > this.pageNum) {\n      this.pagingDirectionSubject.next(PAGING_DIRECTION.FORWARD);\n    } else {\n      this.pagingDirectionSubject.next(PAGING_DIRECTION.BACKWARDS);\n    }\n\n    this.setPageNum(this.adjustPagesForDoubleRenderer(page));\n    this.goToPageEvent.next(page);\n    this.render();\n  }\n\n  // This is menu code\n  clickOverlayClass(side: 'right' | 'left') {\n    if (!this.showClickOverlay) {\n      return '';\n    }\n\n    if (this.readingDirection === ReadingDirection.LeftToRight) {\n      return side === 'right' ? 'highlight' : 'highlight-2';\n    }\n    return side === 'right' ? 'highlight-2' : 'highlight';\n  }\n\n  // This is menu only code\n  promptForPage() {\n    const question = translate('book-reader.go-to-page-prompt', {totalPages: this.maxPages});\n    const goToPageNum = window.prompt(question, '');\n    if (goToPageNum === null || goToPageNum.trim().length === 0) { return null; }\n    return goToPageNum;\n  }\n\n  // This is menu only code\n  toggleFullscreen() {\n      this.readerService.toggleFullscreen(this.reader.nativeElement, () => {\n        this.isFullscreen = true;\n        this.fullscreenEvent.next(true);\n        this.render();\n      });\n  }\n\n  // This is menu only code\n  toggleReaderMode() {\n    switch(this.readerMode) {\n      case ReaderMode.LeftRight:\n        this.pagingDirectionSubject.next(PAGING_DIRECTION.FORWARD);\n        this.readerModeSubject.next(ReaderMode.UpDown);\n        break;\n      case ReaderMode.UpDown:\n        this.readerModeSubject.next(ReaderMode.Webtoon);\n        break;\n      case ReaderMode.Webtoon:\n        this.readerModeSubject.next(ReaderMode.LeftRight);\n        break;\n    }\n\n    // We must set this here because loadPage from render doesn't call if we aren't page splitting\n    if (this.readerMode !== ReaderMode.Webtoon) {\n      this.canvasImage = this.getPage(this.pageNum);\n      this.currentImage.next(this.canvasImage);\n      this.pageNumSubject.next({pageNum: this.pageNum, maxPages: this.maxPages});\n      //this.isLoading = true;\n      this.cdRef.detectChanges(); // Must use detectChanges to ensure ViewChildren get updated again\n    }\n\n    this.updateForm();\n\n    this.render();\n  }\n\n  // This is menu only code\n  updateForm() {\n    if ( this.readerMode === ReaderMode.Webtoon) {\n      this.generalSettingsForm.get('pageSplitOption')?.disable()\n      this.generalSettingsForm.get('fittingOption')?.disable()\n      this.generalSettingsForm.get('layoutMode')?.disable();\n    } else {\n      this.generalSettingsForm.get('fittingOption')?.enable()\n      this.generalSettingsForm.get('pageSplitOption')?.enable();\n      this.generalSettingsForm.get('layoutMode')?.enable();\n\n      if (this.layoutMode !== LayoutMode.Single) {\n        this.generalSettingsForm.get('pageSplitOption')?.disable();\n        this.generalSettingsForm.get('fittingOption')?.disable();\n      }\n    }\n    this.cdRef.markForCheck();\n  }\n\n  handleWebtoonPageChange(updatedPageNum: number) {\n    this.setPageNum(updatedPageNum);\n  }\n\n  /**\n   * Bookmarks the current page for the chapter\n   */\n  bookmarkPage(event: MouseEvent | undefined = undefined) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    if (this.bookmarkMode) return;\n\n    const pageNum = this.pageNum;\n    // if canvasRenderer and doubleRenderer is undefined, then we are in webtoon mode\n    const isDouble = this.canvasRenderer !== undefined && this.doubleRenderer !== undefined && Math.max(this.canvasRenderer.getBookmarkPageCount(), this.singleRenderer.getBookmarkPageCount(),\n      this.doubleRenderer.getBookmarkPageCount(), this.doubleReverseRenderer.getBookmarkPageCount(), this.doubleNoCoverRenderer.getBookmarkPageCount()) > 1;\n\n    if (this.CurrentPageBookmarked) {\n      let apis = [this.readerService.unbookmark(this.seriesId, this.volumeId, this.chapterId, pageNum)];\n      if (isDouble) apis.push(this.readerService.unbookmark(this.seriesId, this.volumeId, this.chapterId, pageNum + 1));\n      forkJoin(apis).pipe(take(1)).subscribe(() => {\n        delete this.bookmarks[pageNum];\n        if (isDouble) delete this.bookmarks[pageNum + 1];\n        this.cdRef.detectChanges();\n      });\n    } else {\n      let apis = [this.readerService.bookmark(this.seriesId, this.volumeId, this.chapterId, pageNum)];\n      if (isDouble) apis.push(this.readerService.bookmark(this.seriesId, this.volumeId, this.chapterId, pageNum + 1));\n      forkJoin(apis).pipe(take(1)).subscribe(() => {\n        this.bookmarks[pageNum] = 1;\n        if (isDouble) this.bookmarks[pageNum + 1] = 1;\n        this.cdRef.detectChanges();\n      });\n    }\n\n    // Show an effect on the image to show that it was bookmarked\n    this.showBookmarkEffectEvent.next(pageNum);\n  }\n\n  // This is menu only code\n  /**\n   * Turns off Incognito mode. This can only happen once if the user clicks the icon. This will modify URL state\n   */\n  turnOffIncognito() {\n    this.incognitoMode = false;\n    const newRoute = this.readerService.getNextChapterUrl(this.router.url, this.chapterId, this.incognitoMode, this.readingListMode, this.readingListId);\n    window.history.replaceState({}, '', newRoute);\n    this.toastr.info(translate('toasts.incognito-off'));\n    if (!this.bookmarkMode) {\n      this.readerService.saveProgress(this.libraryId, this.seriesId, this.volumeId, this.chapterId, this.pageNum).pipe(take(1)).subscribe(() => {/* No operation */});\n    }\n  }\n\n  // This is menu only code\n  openShortcutModal() {\n    const ref = this.modalService.open(ShortcutsModalComponent, { scrollable: true, size: 'md' });\n    ref.componentInstance.shortcuts = [\n      {key: '⇽', description: 'prev-page'},\n      {key: '⇾', description: 'next-page'},\n      {key: '↑', description: 'prev-page'},\n      {key: '↓', description: 'next-page'},\n      {key: 'G', description: 'go-to'},\n      {key: 'B', description: 'bookmark'},\n      {key: translate('shortcuts-modal.double-click'), description: 'bookmark'},\n      {key: 'ESC', description: 'close-reader'},\n      {key: 'SPACE', description: 'toggle-menu'},\n    ];\n  }\n\n  // menu only code\n  savePref() {\n    const modelSettings = this.generalSettingsForm.value;\n    // Get latest preferences from user, overwrite with what we manage in this UI, then save\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      if (!user) return;\n      const data = {...user.preferences};\n      data.layoutMode = parseInt(modelSettings.layoutMode, 10);\n      data.readerMode = this.readerMode;\n      data.autoCloseMenu = this.autoCloseMenu;\n      data.readingDirection = this.readingDirection;\n      data.emulateBook = modelSettings.emulateBook;\n      data.swipeToPaginate = modelSettings.swipeToPaginate;\n      data.pageSplitOption = parseInt(modelSettings.pageSplitOption, 10);\n      data.locale = data.locale || 'en';\n\n      this.accountService.updatePreferences(data).subscribe(updatedPrefs => {\n        this.toastr.success(translate('manga-reader.user-preferences-updated'));\n        if (this.user) {\n          this.user.preferences = updatedPrefs;\n          this.cdRef.markForCheck();\n        }\n      })\n    });\n  }\n\n  translatePrefOptions(o: {text: string, value: any}) {\n    const d = {...o};\n    d.text = translate('preferences.' + o.text);\n    return d;\n  }\n\n}\n","<ng-container *transloco=\"let t; read: 'manga-reader'\">\n  <div class=\"reader\" #reader [ngStyle]=\"{overflow: (isFullscreen ? 'auto' : 'visible')}\">\n    @if(debugMode) {\n      <div class=\"fixed-top overlay\">\n        @for(img of cachedImages; track img.src) {\n          <ng-container *ngIf=\"this.readerService.imageUrlToPageNum(img.src) as imageNum\">\n            <span class=\"me-1\" [ngClass]=\"{'current': imageNum === this.pageNum, 'loaded': img.complete}\">{{this.readerService.imageUrlToPageNum(img.src)}}</span>\n          </ng-container>\n        }\n      </div>\n    }\n    <div class=\"fixed-top overlay\" *ngIf=\"menuOpen\" [@slideFromTop]=\"menuOpen\">\n      <div style=\"display: flex; margin-top: 5px;\">\n        <button class=\"btn btn-icon\" style=\"height: 100%\" [title]=\"t('back')\" (click)=\"closeReader()\">\n          <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n          <span class=\"visually-hidden\">{{t('back')}}</span>\n        </button>\n\n        <div>\n          <div style=\"font-weight: bold;\">{{title}} <span class=\"clickable\" *ngIf=\"incognitoMode\" (click)=\"turnOffIncognito()\" role=\"button\" [attr.aria-label]=\"t('incognito-alt')\">(<i class=\"fa fa-glasses\"  aria-hidden=\"true\"></i><span class=\"visually-hidden\">{{t('incognito-title')}}</span>)</span></div>\n          <div class=\"subtitle\">\n            {{subtitle}} <span *ngIf=\"totalSeriesPages > 0\">{{t('series-progress', {percentage: (Math.min(1, ((totalSeriesPagesRead + pageNum) / totalSeriesPages)) | percent)}) }}</span>\n          </div>\n        </div>\n\n        <div style=\"margin-left: auto; padding-right: 3%;\">\n          <button class=\"btn btn-icon\" title=\"Shortcuts\" (click)=\"openShortcutModal()\">\n            <i class=\"fa-regular fa-rectangle-list\" aria-hidden=\"true\"></i>\n            <span class=\"visually-hidden\">{{t('shortcuts-menu-alt')}}</span>\n          </button>\n          <button *ngIf=\"!bookmarkMode && hasBookmarkRights\" class=\"btn btn-icon\" role=\"checkbox\" [attr.aria-checked]=\"CurrentPageBookmarked\"\n                  title=\"{{t(CurrentPageBookmarked ? 'unbookmark-page-tooltip' : 'bookmark-page-tooltip')}}\" (click)=\"bookmarkPage()\">\n            <i class=\"{{CurrentPageBookmarked ? 'fa' : 'far'}} fa-bookmark\" aria-hidden=\"true\"></i>\n            <span class=\"visually-hidden\">{{t(CurrentPageBookmarked ? 'unbookmark-page-tooltip' : 'bookmark-page-tooltip')}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <app-loading [loading]=\"isLoading || (!(currentImage$ | async)?.complete && this.readerMode !== ReaderMode.Webtoon)\" [absolute]=\"true\"></app-loading>\n    <div class=\"reading-area\"\n         ngSwipe (swipeEnd)=\"onSwipeEnd($event)\" (swipeMove)=\"onSwipeMove($event)\"\n         [ngStyle]=\"{'background-color': backgroundColor, 'height': readerMode === ReaderMode.Webtoon ? 'inherit' : 'calc(var(--vh)*100)'}\" #readingArea>\n\n      <ng-container *ngIf=\"readerMode !== ReaderMode.Webtoon; else webtoon\">\n        <div (dblclick)=\"bookmarkPage($event)\">\n          <app-canvas-renderer\n            [readerSettings$]=\"readerSettings$\"\n            [image$]=\"currentImage$\"\n            [bookmark$]=\"showBookmarkEffect$\"\n            [showClickOverlay$]=\"showClickOverlay$\">\n          </app-canvas-renderer>\n        </div>\n\n        <!-- Pagination controls and screen hints-->\n        <div class=\"pagination-area\">\n          <div class=\"{{readerMode === ReaderMode.LeftRight ? 'left' : 'top'}} {{clickOverlayClass('left')}}\" (click)=\"handlePageChange($event, KeyDirection.Left)\"\n               [ngStyle]=\"{'height': (readerMode === ReaderMode.LeftRight ? ImageHeight: '25%'), 'max-height': MaxHeight}\">\n            <div *ngIf=\"showClickOverlay\">\n              <i class=\"fa fa-angle-{{readingDirection === ReadingDirection.RightToLeft ? 'double-' : ''}}{{readerMode === ReaderMode.LeftRight ? 'left' : 'up'}}\"\n                 [title]=\"t('prev-page-tooltip')\" aria-hidden=\"true\"></i>\n            </div>\n          </div>\n          <div class=\"{{readerMode === ReaderMode.LeftRight ? 'right' : 'bottom'}} {{clickOverlayClass('right')}}\" (click)=\"handlePageChange($event, KeyDirection.Right)\"\n               [ngStyle]=\"{'height': (readerMode === ReaderMode.LeftRight ? ImageHeight: '25%'),\n                                'left': 'inherit',\n                                'right': RightPaginationOffset + 'px',\n                                'max-height': MaxHeight}\">\n            <div *ngIf=\"showClickOverlay\">\n              <i class=\"fa fa-angle-{{readingDirection === ReadingDirection.LeftToRight ? 'double-' : ''}}{{readerMode === ReaderMode.LeftRight ? 'right' : 'down'}}\"\n                 [title]=\"t('next-page-tooltip')\" aria-hidden=\"true\"></i>\n            </div>\n          </div>\n        </div>\n\n        <div (dblclick)=\"bookmarkPage($event)\">\n          <app-single-renderer [image$]=\"currentImage$\"\n                               [readerSettings$]=\"readerSettings$\"\n                               [bookmark$]=\"showBookmarkEffect$\"\n                               [pageNum$]=\"pageNum$\"\n                               [showClickOverlay$]=\"showClickOverlay$\">\n          </app-single-renderer>\n\n          <app-double-renderer [image$]=\"currentImage$\"\n                               [readerSettings$]=\"readerSettings$\"\n                               [bookmark$]=\"showBookmarkEffect$\"\n                               [showClickOverlay$]=\"showClickOverlay$\"\n                               [pageNum$]=\"pageNum$\"\n                               [getPage]=\"getPageFn\">\n          </app-double-renderer>\n\n          <app-double-reverse-renderer [image$]=\"currentImage$\"\n                                       [readerSettings$]=\"readerSettings$\"\n                                       [bookmark$]=\"showBookmarkEffect$\"\n                                       [showClickOverlay$]=\"showClickOverlay$\"\n                                       [pageNum$]=\"pageNum$\"\n                                       [getPage]=\"getPageFn\">\n          </app-double-reverse-renderer>\n\n          <app-double-no-cover-renderer [image$]=\"currentImage$\"\n                                        [readerSettings$]=\"readerSettings$\"\n                                        [bookmark$]=\"showBookmarkEffect$\"\n                                        [showClickOverlay$]=\"showClickOverlay$\"\n                                        [pageNum$]=\"pageNum$\"\n                                        [getPage]=\"getPageFn\">\n          </app-double-no-cover-renderer>\n        </div>\n\n      </ng-container>\n\n      <ng-template #webtoon>\n        <div class=\"webtoon-images\" *ngIf=\"!isLoading && !inSetup\">\n          <app-infinite-scroller [pageNum]=\"pageNum\"\n                                 [bufferPages]=\"5\"\n                                 [goToPage]=\"goToPageEvent\"\n                                 (pageNumberChange)=\"handleWebtoonPageChange($event)\"\n                                 [totalPages]=\"maxPages\"\n                                 [urlProvider]=\"getPageUrl\"\n                                 (loadNextChapter)=\"loadNextChapter()\"\n                                 (loadPrevChapter)=\"loadPrevChapter()\"\n                                 [bookmarkPage]=\"showBookmarkEffectEvent\"\n                                 [fullscreenToggled]=\"fullscreenEvent\">\n          </app-infinite-scroller>\n        </div>\n      </ng-template>\n\n\n    </div>\n\n    <div class=\"fixed-bottom overlay\" *ngIf=\"menuOpen\" [@slideFromBottom]=\"menuOpen\">\n\n      <div class=\"mb-3\" *ngIf=\"pageOptions !== undefined && pageOptions.ceil !== undefined\">\n        <span class=\"visually-hidden\" id=\"slider-info\"></span>\n        <div class=\"row g-0\">\n          <button class=\"btn btn-icon col-1\" [disabled]=\"prevChapterDisabled\" (click)=\"loadPrevChapter();resetMenuCloseTimer();\" [title]=\"t('prev-chapter-tooltip')\"><i class=\"fa fa-fast-backward\" aria-hidden=\"true\"></i></button>\n          <button class=\"btn btn-icon col-2\" [disabled]=\"prevPageDisabled || pageNum === 0\" (click)=\"goToPage(0);resetMenuCloseTimer();\" [title]=\"t('first-page-tooltip')\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i></button>\n          <div class=\"col custom-slider\" *ngIf=\"pageOptions.ceil > 0; else noSlider\">\n            <ngx-slider [options]=\"pageOptions\" [value]=\"pageNum\" aria-describedby=\"slider-info\" [manualRefresh]=\"refreshSlider\" (userChangeEnd)=\"sliderPageUpdate($event);startMenuCloseTimer()\" (userChange)=\"sliderDragUpdate($event)\" (userChangeStart)=\"cancelMenuCloseTimer();\"></ngx-slider>\n          </div>\n          <ng-template #noSlider>\n            <div class=\"col custom-slider\">\n              <ngx-slider [options]=\"pageOptions\" [value]=\"pageNum\" aria-describedby=\"slider-info\" (userChangeEnd)=\"startMenuCloseTimer()\" (userChangeStart)=\"cancelMenuCloseTimer();\"></ngx-slider>\n            </div>\n          </ng-template>\n          <button class=\"btn btn-icon col-2\" [disabled]=\"nextPageDisabled || pageNum >= maxPages - 1\" (click)=\"goToPage(this.maxPages);resetMenuCloseTimer();\" [title]=\"t('last-page-tooltip')\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i></button>\n          <button class=\"btn btn-icon col-1\" [disabled]=\"nextChapterDisabled\" (click)=\"loadNextChapter();resetMenuCloseTimer();\" [title]=\"t('next-chapter-tooltip')\"><i class=\"fa fa-fast-forward\" aria-hidden=\"true\"></i></button>\n        </div>\n      </div>\n      <div class=\"row pt-4 ms-2 me-2 mb-2\">\n        <div class=\"col\">\n          <button class=\"btn btn-icon\" (click)=\"setReadingDirection();resetMenuCloseTimer();\" [disabled]=\"readerMode === ReaderMode.Webtoon || readerMode === ReaderMode.UpDown\" aria-describedby=\"reading-direction\" [title]=\"t('reading-direction-tooltip') + readingDirection === ReadingDirection.LeftToRight ? t('left-to-right-alt') : t('right-to-left-alt')\">\n            <i class=\"fa fa-angle-double-{{readingDirection === ReadingDirection.LeftToRight ? 'right' : 'left'}}\" aria-hidden=\"true\"></i>\n            <span id=\"reading-direction\" class=\"visually-hidden\">{{readingDirection === ReadingDirection.LeftToRight ? t('left-to-right-alt') : t('right-to-left-alt')}}</span>\n          </button>\n        </div>\n        <div class=\"col\">\n          <button class=\"btn btn-icon\" [title]=\"t('reading-mode-tooltip')\" (click)=\"toggleReaderMode();resetMenuCloseTimer();\">\n            <i class=\"fa {{this.readerMode | readerModeIcon}}\" aria-hidden=\"true\"></i>\n            <span class=\"visually-hidden\">{{t('reading-mode-tooltip')}}</span>\n          </button>\n        </div>\n        <div class=\"col\">\n          <button class=\"btn btn-icon\" title=\"{{this.isFullscreen ? t('collapse') : t('fullscreen')}}\" (click)=\"toggleFullscreen();resetMenuCloseTimer();\">\n            <i class=\"fa {{this.isFullscreen | fullscreenIcon}}\" aria-hidden=\"true\"></i>\n            <span class=\"visually-hidden\">{{this.isFullscreen ? t('collapse') : t('fullscreen')}}</span>\n          </button>\n        </div>\n        <div class=\"col\">\n          <button class=\"btn btn-icon\" [title]=\"t('settings-tooltip')\" (click)=\"settingsOpen = !settingsOpen;resetMenuCloseTimer();\">\n            <i class=\"fa fa-sliders-h\" aria-hidden=\"true\"></i>\n            <span class=\"visually-hidden\">{{t('settings-tooltip')}}</span>\n          </button>\n        </div>\n      </div>\n      <div class=\"bottom-menu\" *ngIf=\"settingsOpen && generalSettingsForm\">\n        <form [formGroup]=\"generalSettingsForm\">\n          <div class=\"row mb-2\">\n            <div class=\"col-md-6 col-sm-12\">\n              <label for=\"page-splitting\" class=\"form-label\">{{t('image-splitting-label')}}</label>&nbsp;\n              <div class=\"split fa fa-image\">\n                <div class=\"{{SplitIconClass}}\"></div>\n              </div>\n              <select class=\"form-control\" id=\"page-splitting\" formControlName=\"pageSplitOption\">\n                <option *ngFor=\"let opt of pageSplitOptionsTranslated\" [value]=\"opt.value\">{{opt.text}}</option>\n              </select>\n            </div>\n\n            <div class=\"col-md-6 col-sm-12\">\n              <label for=\"page-fitting\" class=\"form-label\">{{t('image-scaling-label')}}</label>&nbsp;<i class=\"{{FittingOption | fittingIcon}}\" aria-hidden=\"true\"></i>\n              <select class=\"form-control\" id=\"page-fitting\" formControlName=\"fittingOption\">\n                <option value=\"full-height\">{{t('height')}}</option>\n                <option value=\"full-width\">{{t('width')}}</option>\n                <option value=\"original\">{{t('original')}}</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"row mb-2\">\n            <div class=\"col-md-6 col-sm-12\">\n              <label for=\"layout-mode\" class=\"form-label\">Layout Mode</label>&nbsp;\n              <ng-container [ngSwitch]=\"layoutMode\">\n                <ng-container *ngSwitchCase=\"LayoutMode.Single\">\n                  <div class=\"split-double\">\n                    <span class=\"fa-stack fa-1x\">\n                        <i class=\"fa-regular fa-square-full fa-stack-2x\"></i>\n                        <i class=\"fa fa-image fa-stack-1x\"></i>\n                      </span>\n                  </div>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"LayoutMode.Double\">\n                  <div class=\"split-double\">\n                    <span class=\"fa-stack fa-1x\">\n                        <i class=\"fa-regular fa-square-full fa-stack-2x\"></i>\n                        <i class=\"fab fa-1 fa-stack-1x\"></i>\n                    </span>\n                    <span class=\"fa-stack fa right\">\n                      <i class=\"fa-regular fa-square-full fa-stack-2x\"></i>\n                      <i class=\"fab fa-2 fa-stack-1x\"></i>\n                    </span>\n                  </div>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"LayoutMode.DoubleReversed\">\n                  <div class=\"split-double\">\n                    <span class=\"fa-stack fa-1x\">\n                        <i class=\"fa-regular fa-square-full fa-stack-2x\"></i>\n                        <i class=\"fab fa-2 fa-stack-1x\"></i>\n                    </span>\n                    <span class=\"fa-stack fa right\">\n                      <i class=\"fa-regular fa-square-full fa-stack-2x\"></i>\n                      <i class=\"fab fa-1 fa-stack-1x\"></i>\n                    </span>\n                  </div>\n                </ng-container>\n              </ng-container>\n              <select class=\"form-control\" id=\"layout-mode\" formControlName=\"layoutMode\">\n                <option [value]=\"opt.value\" *ngFor=\"let opt of layoutModesTranslated\">{{opt.text}}</option>\n              </select>\n            </div>\n            <div class=\"col-md-3 col-sm-12\">\n              <div class=\"mb-3\">\n                <div class=\"mb-3\">\n                  <div class=\"form-check form-switch\">\n                    <input type=\"checkbox\" id=\"auto-close\" formControlName=\"autoCloseMenu\" class=\"form-check-input\" >\n                    <label class=\"form-check-label\" for=\"auto-close\">{{t('auto-close-menu-label')}}</label>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"mb-3\">\n                <div class=\"mb-3\">\n                  <div class=\"form-check form-switch\">\n                    <input type=\"checkbox\" id=\"swipe-to-paginate\" formControlName=\"swipeToPaginate\" class=\"form-check-input\" >\n                    <label class=\"form-check-label\" for=\"swipe-to-paginate\">{{t('swipe-enabled-label')}}</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-3 col-sm-12\">\n              <div class=\"mb-3\">\n                <div class=\"mb-3\">\n                  <div class=\"form-check form-switch\">\n                    <input type=\"checkbox\" id=\"emulate-book\" formControlName=\"emulateBook\" class=\"form-check-input\">\n                    <label class=\"form-check-label\" for=\"emulate-book\">{{t('emulate-comic-book-label')}}</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row mb-2\">\n            <div class=\"col-md-6 col-sm-12\">\n              <label for=\"darkness\" class=\"form-label range-label\">{{t('brightness-label')}}</label>\n              <span class=\"ms-1 range-text\">{{generalSettingsForm.get('darkness')?.value + '%'}}</span>\n              <input type=\"range\" class=\"form-range\" id=\"darkness\"\n                     min=\"10\" max=\"100\" step=\"1\" formControlName=\"darkness\">\n            </div>\n\n\n            <div class=\"col-md-6 col-sm-12\">\n              <button class=\"btn btn-primary\" (click)=\"savePref()\">{{t('save-globally')}}</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n</ng-container>\n","import { Routes } from '@angular/router';\nimport { MangaReaderComponent } from '../manga-reader/_components/manga-reader/manga-reader.component';\n\nexport const routes: Routes = [\n  {\n      path: ':chapterId',\n      component: MangaReaderComponent\n  },\n  {\n    // This will allow the MangaReader to have a list to use for next/prev chapters rather than natural sort order\n    path: ':chapterId/list/:listId',\n    component: MangaReaderComponent\n  }\n];\n\n"],"mappings":"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","names":["w","matchMedia","passiveOptionAccessed","options","noop","supportsPassiveEvents","supportsPointerEvents","onTouchStartInWindow","touchEventInWindow","supportsTouchEvents","hasTouch","userAgent","isIPad","hasCoarsePrimaryPointer","hasAnyHoverOrAnyFinePointer","_c0","a0","a1","a2","TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template","rf","ctx","TooltipWrapperComponent_ng_container_0_1_Template","ɵɵtemplate","TooltipWrapperComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction3","TooltipWrapperComponent_ng_container_1_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵattribute","ɵɵtextInterpolate1","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","_c13","_c14","SliderComponent_span_28_ngx_slider_tooltip_wrapper_2_Template","ɵɵelement","t_r1","ctx_r1","SliderComponent_span_28_span_3_Template","SliderComponent_span_28_span_4_Template","ɵɵsanitizeHtml","SliderComponent_span_28_Template","ɵɵpureFunction1","LabelType","Options","AllowUnsafeHtmlInSlider","InjectionToken","PointerType","ChangeContext","ValueHelper","value","array1","array2","i","val","minVal","maxVal","range","percent","modelValue","stepsArray","differences","step","minDifferenceIndex","index","CompatibilityHelper","event","MathHelper","precisionLimit","modulo","limit","floor","ceil","EventListener","EventListenerHelper","renderer","nativeElement","eventName","callback","throttleInterval","supportsPassiveEvents","listener","Subject","observerCallback","tap","throttleTime","eventListener","SliderElementDirective","elemRef","changeDetectionRef","hide","vertical","scale","rotate","pos","dim","debounceInterval","listenersToKeep","listenersToRemove","t","ɵɵdirectiveInject","ElementRef","Renderer2","ChangeDetectorRef","ɵɵdefineDirective","ɵɵstyleProp","SliderHandleDirective","ɵɵclassProp","ɵɵInheritDefinitionFeature","SliderLabelDirective","allowUnsafeHtmlInSlider","recalculateDimension","TooltipWrapperComponent","ɵɵdefineComponent","NgIf","NgTemplateOutlet","Tick","Dragging","ModelValues","x","y","ModelChange","NGX_SLIDER_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","SliderComponent","EventEmitter","Options","manualRefresh","triggerFocus","pointerType","ValueHelper","Subject","Dragging","renderer","elementRef","changeDetectionRef","zone","allowUnsafeHtmlInSlider","EventListenerHelper","changes","obj","onChangeCallback","onTouchedCallback","isDisabled","ariaLabel","event","distinctUntilChanged","ModelChange","filter","modelChange","CompatibilityHelper","PointerType","modelValue","viewValue","sliderValue","step","normalisedModelChange","normalisationChange","ModelValues","emitOutputs","input","normalisedInput","valueIndex","highValueIndex","MathHelper","tempValue","previousModelValues","normalisedModelValues","previousOptionsInfluencingEventBindings","newOptionsInfluencingEventBindings","rebindEvents","minValue","maxValue","value","hideLabelsForTicks","element","LabelType","handleWidth","ticksArray","translate","tickValueStep","hasAtLeastOneLegend","newTicks","position","translation","tick","Tick","legend","i","numberOfValues","index","center","which","newPos","labelType","labelDimension","nearHandlePos","endOfBarPos","floorLabelHidden","ceilLabelHidden","isMinLabelAtFloor","isMinLabelAtCeil","isMaxLabelAtCeil","isCombinedLabelAtFloor","isCombinedLabelAtCeil","hideCeil","hideFloor","label","pos","dim","floorPos","floorDim","ceilPos","ceilDim","dimension","isSelectionBarFromRight","positionForRange","centerPosition","offset","reversed","direction","color","isLabelOverlap","lowDisplayValue","highDisplayValue","combinedLabelValue","customStep","steppedDifference","val","fn","percent","targetTouchId","touchIndex","touches","sliderElementBoundingRect","sliderPos","eventPos","distanceMin","distanceMax","draggableRange","options","bindMove","bindEnd","simulateImmediateMove","simulateImmediateEnd","supportsPassiveEvents","pointerElement","onMoveCallback","e","onEndCallback","fromTick","touchForThisSlider","changedTouches","newValue","ceilValue","floorValue","pointer","currentValue","valueRange","increaseStep","decreaseStep","increasePage","decreasePage","actions","keyCode","keys","key","action","actionValue","difference","newMinValue","newMaxValue","outOfBounds","isAbove","isRTL","ceilLimit","floorLimit","floorHandleElement","ceilHandleElement","isUnderFloorLimit","isOverCeilLimit","oppositeValue","minRange","maxRange","changeContext","ChangeContext","t","ɵɵdirectiveInject","Renderer2","ElementRef","ChangeDetectorRef","NgZone","AllowUnsafeHtmlInSlider","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_c1","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c2","SliderElementDirective","_c3","_c4","_c5","_c6","SliderHandleDirective","_c7","_c8","SliderLabelDirective","_c9","_c10","_c11","_c12","_c13","ɵɵlistener","$event","ɵɵresolveWindow","ɵɵattribute","ɵɵclassProp","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtemplate","SliderComponent_span_28_Template","ɵɵadvance","ɵɵproperty","ɵɵstyleProp","NgClass","NgForOf","NgIf","NgStyle","TooltipWrapperComponent","NgxSliderModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","shortcut_r3","key","ɵɵtextInterpolate1","t_r4","description","ɵɵelementContainerStart","ɵɵlistener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","close","ɵɵtemplate","ShortcutsModalComponent_ng_container_0_div_7_Template","ɵɵproperty","shortcuts","ShortcutsModalComponent","constructor","modal","ɵɵdirectiveInject","NgbActiveModal","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ShortcutsModalComponent_ng_container_0_Template","CommonModule","NgForOf","NgbModalModule","TranslocoDirective","styles","changeDetection","_ShortcutsModalComponent","ManagaReaderService","constructor","rendererFactory","readerService","pageDimensions","pairs","renderer","createRenderer","load","chapterInfo","forEach","d","pageNumber","height","width","isWide","doublePairs","adjustForDoubleReader","page","hasOwnProperty","getPageDimensions","pageNum","isWidePage","maxHeight","Object","values","reduce","max","obj","Math","maxWidth","isCoverImage","isNoSplit","pageSplitOption","splitValue","parseInt","PageSplitOption","NoSplit","FitSplit","isSplitLeftToRight","SplitLeftToRight","isSecondLastImage","maxPages","isLastImage","shouldSplit","img","needsSplitting","imageUrlToPageNum","src","shouldRenderAsFitSplit","translateScalingOption","option","ScalingOption","Automatic","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","windowHeight","innerHeight","clientHeight","ratio","FITTING_OPTION","WIDTH","HEIGHT","FitToHeight","FitToWidth","ORIGINAL","applyBookmarkEffect","elements","length","elem","addClass","setTimeout","removeClass","ɵɵinject","RendererFactory2","ReaderService","factory","ɵfac","providedIn","_ManagaReaderService","SafeStylePipe","constructor","sanitizer","inject","DomSanitizer","transform","style","bypassSecurityTrustStyle","pure","standalone","_SafeStylePipe","ValidSplits","PageSplitOption","SplitLeftToRight","SplitRightToLeft","CanvasRendererComponent","constructor","cdRef","mangaReaderService","readerService","imageHeight","EventEmitter","destroyRef","inject","DestroyRef","currentImageSplitPart","SPLIT_PAGE_PART","NO_SPLIT","pagingDirection","PAGING_DIRECTION","FORWARD","fit","FITTING_OPTION","ORIGINAL","pageSplit","FitSplit","layoutMode","LayoutMode","Single","canvasImage","darkness$","of","renderWithCanvas","ngOnInit","readerSettings$","pipe","takeUntilDestroyed","tap","value","fitting","rerenderNeeded","reset","subscribe","map","values","darkness","filter","_","isValid","imageFitClass$","WIDTH","isWidePage","imageUrlToPageNum","src","shouldRenderAsFitSplit","bookmark$","canvas","elements","nativeElement","applyBookmarkEffect","showClickOverlayClass$","showClickOverlay$","showOverlay","ngAfterViewInit","ctx","getContext","alpha","updateSplitPage","needsSplitting","isNoSplit","splitLeftToRight","isSplitLeftToRight","LEFT_PART","RIGHT_PART","r2lSplittingPart","l2rSplittingPart","BACKWARDS","renderPage","img","length","markForCheck","includes","setCanvasSize","width","drawImage","height","getPageAmount","direction","shouldMoveNext","shouldMovePrev","isSafari","navigator","platform","userAgent","document","canvasLimit","emit","getBookmarkPageCount","ɵɵdirectiveInject","ChangeDetectorRef","ManagaReaderService","ReaderService","selectors","viewQuery","rf","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMapInterpolate1","ɵɵpipeBind1","ɵɵstyleProp","tmp_2_0","undefined","ɵɵproperty","ɵɵpureFunction1","_c1","ɵɵadvance","ɵɵclassMap","NgClass","AsyncPipe","SafeStylePipe","styles","changeDetection","_CanvasRendererComponent","ɵɵelementContainerStart","ɵɵelement","ɵɵadvance","ɵɵclassMapInterpolate3","ɵɵpipeBind1","ctx_r0","imageFitClass$","readerModeClass$","showClickOverlayClass$","ɵɵproperty","currentImage","src","ɵɵsanitizeUrl","currentImage2","ɵɵelementStart","ɵɵtemplate","DoubleRendererComponent_ng_container_0_ng_container_8_Template","DoubleRendererComponent_ng_container_0_ng_container_9_Template","ɵɵelementEnd","layoutClass$","emulateBookClass$","ɵɵstyleProp","tmp_2_0","darkness$","undefined","ɵɵpureFunction1","_c0","shouldRenderDouble$","DoubleRendererComponent","constructor","cdRef","mangaReaderService","document","readerService","imageHeight","EventEmitter","destroyRef","inject","DestroyRef","debugMode","of","layoutMode","LayoutMode","Single","pageSplit","PageSplitOption","FitSplit","pageNum","maxPages","Image","ReaderMode","ngOnInit","readerSettings$","pipe","map","values","readerMode","mode","LeftRight","UpDown","filter","_","isValid","takeUntilDestroyed","darkness","data","emulateBook","enabled","showClickOverlay$","showOverlay","pageNum$","tap","pageInfo","getPage","markForCheck","subscribe","shouldRenderDouble","fitting","shareReplay","combineLatest","value","FITTING_OPTION","WIDTH","HEIGHT","ORIGINAL","isWidePage","bookmark$","elements","image1","querySelector","push","image2","applyBookmarkEffect","isCoverImage","debugLog","isSecondLastImage","isLastImage","Double","renderPage","img","length","height","emit","Math","max","shouldMovePrev","shouldMoveNext","getPageAmount","direction","PAGING_DIRECTION","FORWARD","BACKWARDS","adjustForDoubleReader","reset","getBookmarkPageCount","message","extraData","console","log","ɵɵdirectiveInject","ChangeDetectorRef","ManagaReaderService","DOCUMENT","ReaderService","selectors","inputs","image$","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","DoubleRendererComponent_ng_container_0_Template","NgIf","NgClass","AsyncPipe","SafeStylePipe","styles","changeDetection","_DoubleRendererComponent","ɵɵelementContainerStart","ɵɵelement","ɵɵadvance","ɵɵclassMapInterpolate3","ɵɵpipeBind1","ctx_r0","imageFitClass$","readerModeClass$","showClickOverlayClass$","ɵɵproperty","leftImage","src","ɵɵsanitizeUrl","rightImage","ɵɵelementStart","ɵɵtemplate","DoubleReverseRendererComponent_ng_container_0_ng_container_8_Template","DoubleReverseRendererComponent_ng_container_0_ng_container_9_Template","ɵɵelementEnd","ɵɵclassMapInterpolate2","layoutClass$","emulateBookClass$","ɵɵstyleProp","tmp_2_0","darkness$","undefined","ɵɵpureFunction2","_c0","shouldRenderDouble$","DoubleReverseRendererComponent","ReaderMode","FITTING_OPTION","LayoutMode","constructor","cdRef","mangaReaderService","document","readerService","imageHeight","EventEmitter","destroyRef","inject","DestroyRef","debugMode","of","layoutMode","Single","pageSplit","PageSplitOption","FitSplit","pageNum","maxPages","Image","ngOnInit","readerSettings$","pipe","filter","_","isValid","map","values","readerMode","mode","LeftRight","UpDown","takeUntilDestroyed","darkness","data","emulateBook","enabled","showClickOverlay$","showOverlay","pageNum$","tap","pageInfo","getPage","subscribe","shouldRenderDouble","shareReplay","fitting","combineLatest","value","WIDTH","HEIGHT","ORIGINAL","isWidePage","markForCheck","bookmark$","elements","image1","querySelector","push","image2","applyBookmarkEffect","isCoverImage","debugLog","isSecondLastImage","isLastImage","DoubleReversed","renderPage","img","length","emit","Math","max","height","shouldMovePrev","shouldMoveNext","getPageAmount","direction","PAGING_DIRECTION","FORWARD","BACKWARDS","adjustForDoubleReader","reset","getBookmarkPageCount","message","extraData","console","log","ɵɵdirectiveInject","ChangeDetectorRef","ManagaReaderService","DOCUMENT","ReaderService","selectors","inputs","image$","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","DoubleReverseRendererComponent_ng_container_0_Template","NgIf","NgClass","AsyncPipe","SafeStylePipe","styles","changeDetection","_DoubleReverseRendererComponent","ɵɵelement","ɵɵclassMapInterpolate3","ɵɵpipeBind1","ctx_r0","imageFitClass$","readerModeClass$","showClickOverlayClass$","ɵɵproperty","currentImage","src","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtemplate","SingleRendererComponent_Conditional_0_Conditional_7_Template","ɵɵelementEnd","ɵɵclassMapInterpolate2","emulateBookClass$","ɵɵstyleProp","tmp_2_0","darkness$","undefined","tmp_3_0","imageContainerHeight$","ɵɵadvance","ɵɵconditional","SingleRendererComponent","ReaderMode","LayoutMode","constructor","cdRef","mangaReaderService","document","imageHeight","EventEmitter","destroyRef","inject","DestroyRef","of","layoutMode","Single","pageSplit","PageSplitOption","FitSplit","pageNum","maxPages","ngOnInit","readerSettings$","pipe","map","values","readerMode","mode","LeftRight","UpDown","filter","_","isValid","takeUntilDestroyed","data","emulateBook","enabled","image$","switchMap","img","markForCheck","calculateImageContainerHeight$","pageNum$","tap","pageInfo","subscribe","darkness","showClickOverlay$","showOverlay","bookmark$","elements","image1","querySelector","push","applyBookmarkEffect","combineLatest","fitting","fit","isWidePage","shouldRenderAsFitSplit","FITTING_OPTION","WIDTH","shareReplay","refCount","bufferSize","HEIGHT","readingArea","width","scrollWidth","renderPage","length","emit","height","shouldMovePrev","shouldMoveNext","getPageAmount","direction","shouldSplit","reset","getBookmarkPageCount","ɵɵdirectiveInject","ChangeDetectorRef","ManagaReaderService","DOCUMENT","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","SingleRendererComponent_Conditional_0_Template","AsyncPipe","SafeStylePipe","styles","changeDetection","_SingleRendererComponent","ɵɵelementContainerStart","ɵɵelement","ɵɵadvance","ɵɵclassMapInterpolate3","ɵɵpipeBind1","ctx_r0","imageFitClass$","readerModeClass$","showClickOverlayClass$","ɵɵproperty","currentImage","src","ɵɵsanitizeUrl","currentImage2","ɵɵelementStart","ɵɵtemplate","DoubleNoCoverRendererComponent_ng_container_0_ng_container_8_Template","DoubleNoCoverRendererComponent_ng_container_0_ng_container_9_Template","ɵɵelementEnd","layoutClass$","emulateBookClass$","ɵɵstyleProp","tmp_2_0","darkness$","undefined","ɵɵpureFunction1","_c0","shouldRenderDouble$","DoubleNoCoverRendererComponent","ReaderMode","FITTING_OPTION","LayoutMode","constructor","cdRef","mangaReaderService","document","readerService","imageHeight","EventEmitter","destroyRef","inject","DestroyRef","debugMode","of","layoutMode","Single","pageSplit","PageSplitOption","FitSplit","pageNum","maxPages","Image","ngOnInit","readerSettings$","pipe","map","values","readerMode","mode","LeftRight","UpDown","filter","_","isValid","takeUntilDestroyed","darkness","data","emulateBook","enabled","showClickOverlay$","showOverlay","pageNum$","tap","pageInfo","getPage","markForCheck","subscribe","shouldRenderDouble","fitting","shareReplay","combineLatest","value","WIDTH","HEIGHT","ORIGINAL","bookmark$","elements","image1","querySelector","push","image2","applyBookmarkEffect","isWidePage","debugLog","isSecondLastImage","isLastImage","DoubleNoCover","renderPage","img","length","height","emit","Math","max","shouldMovePrev","shouldMoveNext","getPageAmount","direction","PAGING_DIRECTION","FORWARD","isCoverImage","BACKWARDS","adjustForDoubleReader","reset","getBookmarkPageCount","message","extraData","console","log","ɵɵdirectiveInject","ChangeDetectorRef","ManagaReaderService","DOCUMENT","ReaderService","selectors","inputs","image$","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","DoubleNoCoverRendererComponent_ng_container_0_Template","NgIf","NgClass","AsyncPipe","SafeStylePipe","styles","changeDetection","_DoubleNoCoverRendererComponent","FullscreenIconPipe","transform","isFullscreen","pure","standalone","_FullscreenIconPipe","ReaderModeIconPipe","transform","readerMode","ReaderMode","LeftRight","UpDown","Webtoon","pure","standalone","_ReaderModeIconPipe","FittingIconPipe","transform","fit","FITTING_OPTION","HEIGHT","WIDTH","ORIGINAL","pure","standalone","_FittingIconPipe","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","isScrolling","allImagesLoaded","ɵɵtextInterpolate2","isScrollingForwards","minPageLoaded","maxPageLoaded","pageNum","totalPages","atTop","atBottom","getTotalHeight","getTotalScroll","getScrollTop","ɵɵlistener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","loadPrevChapter","emit","ɵɵelement","ɵɵtextInterpolate","t_r4","ɵɵelementContainerStart","$event","_r5","onImageLoad","ɵɵclassMapInterpolate2","item_r6","page","showDebugOutline","areImagesWiderThanWindow","ɵɵpropertyInterpolate","src","ɵɵsanitizeUrl","ɵɵpropertyInterpolate1","ɵɵtemplate","InfiniteScrollerComponent_ng_container_0_div_1_Template","InfiniteScrollerComponent_ng_container_0_div_2_Template","InfiniteScrollerComponent_ng_container_0_ng_container_4_Template","_r1","loadNextChapter","ɵɵproperty","showDebugBar","ɵɵpipeBind1","webtoonImages","SPACER_SCROLL_INTO_PX","InfiniteScrollerComponent","Math","min","Object","values","imagesLoaded","max","_","innerWidth","getInnerDimensions","webtoonImageWidth","document","body","clientWidth","constructor","mangaReaderService","inject","ManagaReaderService","readerService","ReaderService","renderer","Renderer2","scrollService","ScrollService","cdRef","ChangeDetectorRef","bufferPages","pageNumberChange","EventEmitter","bookmarkPage","ReplaySubject","fullscreenToggled","bottomSpacerIntersectionObserver","IntersectionObserver","entries","handleBottomIntersection","threshold","destroyRef","DestroyRef","BehaviorSubject","intersectionObserver","handleIntersection","scrollingDirection","PAGING_DIRECTION","FORWARD","prevScrollPosition","currentPageElem","window","documentElement","isFullscreenMode","previousScrollHeightMinusTop","initFinished","debugMode","debugLogFilter","reader","querySelector","readerElemRef","ElementRef","ngOnChanges","changes","hasOwnProperty","previousValue","currentValue","markForCheck","initWebtoonReader","ngOnDestroy","disconnect","initScrollHandler","fromEvent","nativeElement","pipe","debounceTime","takeUntilDestroyed","subscribe","event","handleScrollEvent","handleScrollEndEvent","ngOnInit","recalculateImageWidth","goToPage","debugLog","BACKWARDS","setPageNum","image","addClass","setTimeout","removeClass","isFullscreen","ngAfterViewInit","observe","bottomSpacer","getVerticalOffset","offset","Window","scrollY","scrollTop","verticalOffset","isElementVisible","midlineImages","Array","from","querySelectorAll","filter","entry","shouldElementCountAsCurrentPage","length","parseInt","getAttribute","checkIfShouldTriggerContinuousReader","closestImages","img","findClosestVisibleImage","totalHeight","forEach","getBoundingClientRect","height","round","offsetHeight","totalScroll","requestAnimationFrame","scrollHeight","scrollTo","innerHeight","clientHeight","elem","rect","bottom","right","top","left","topX","abs","images","closestImage","closestDistanceToTop","Number","MAX_VALUE","distanceToTop","next","startingIndex","endingIndex","calculatePrefetchIndecies","i","loadWebtoonImage","imagePage","imageUrlToPageNum","target","width","setAttribute","maxWidth","attachIntersectionObserverElem","Promise","all","complete","map","resolve","onload","onerror","then","scrollToCurrentPage","isIntersecting","attributes","getNamedItem","value","prefetchWebtoonImages","scrollToPage","scrollIntoView","behavior","data","concat","urlProvider","sort","a","b","console","error","temp","range","size","startAt","keys","message","extraData","str","replace","startsWith","undefined","log","ɵɵdirectiveInject","DOCUMENT","selectors","viewQuery","rf","ctx","InfiniteScrollerComponent_ng_container_0_Template","NgIf","NgFor","AsyncPipe","TranslocoDirective","InfiniteScrollModule","InfiniteScrollDirective","styles","changeDetection","_InfiniteScrollerComponent","SwipeDirection","createSwipeSubscription","domElement","onSwipeMove","onSwipeEnd","HTMLElement","Error","touchStarts$","fromEvent","pipe","map","getTouchCoordinates","touchMoves$","touchEnds$","touchCancels$","switchMap","touchStartEvent","elementAt","touchMoveEvent","x","y","direction","getTouchDirection","getTouchDistance","tap","coordinates","getSwipeEvent","takeUntil","race","touchEndEvent","subscribe","touchEvent","changedTouches","clientX","clientY","startCoordinates","moveCoordinates","Math","abs","Y","X","distance","SwipeDirective","constructor","elementRef","zone","swipeMove","EventEmitter","swipeEnd","ngOnInit","runOutsideAngular","swipeSubscription","createSwipeSubscription","domElement","nativeElement","onSwipeMove","swipeMoveEvent","emit","onSwipeEnd","swipeEndEvent","ngOnDestroy","unsubscribe","ɵɵdirectiveInject","ElementRef","NgZone","selectors","outputs","standalone","_SwipeDirective","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction2","_c5","imageNum_r2","ctx_r3","pageNum","img_r3","complete","ɵɵtextInterpolate","readerService","imageUrlToPageNum","src","ɵɵtemplate","MangaReaderComponent_ng_container_0_Conditional_3_For_2_ng_container_0_Template","ɵɵrepeaterCreate","MangaReaderComponent_ng_container_0_Conditional_3_For_2_Template","_forTrack0","ɵɵrepeater","cachedImages","ɵɵlistener","ɵɵrestoreView","_r6","ɵɵnextContext","ɵɵresetView","turnOffIncognito","ɵɵelement","t_r7","ɵɵpureFunction1","_c6","ɵɵpipeBind1","Math","min","totalSeriesPagesRead","totalSeriesPages","_r8","bookmarkPage","ɵɵpropertyInterpolate","CurrentPageBookmarked","ɵɵclassMapInterpolate1","_r5","closeReader","MangaReaderComponent_ng_container_0_div_4_span_9_Template","MangaReaderComponent_ng_container_0_div_4_span_12_Template","openShortcutModal","MangaReaderComponent_ng_container_0_div_4_button_18_Template","menuOpen","ɵɵtextInterpolate1","title","incognitoMode","subtitle","bookmarkMode","hasBookmarkRights","ɵɵclassMapInterpolate2","readingDirection","ReadingDirection","RightToLeft","readerMode","ReaderMode","LeftRight","LeftToRight","$event","_r9","handlePageChange","KeyDirection","Left","MangaReaderComponent_ng_container_0_ng_container_9_div_5_Template","Right","MangaReaderComponent_ng_container_0_ng_container_9_div_7_Template","readerSettings$","currentImage$","showBookmarkEffect$","showClickOverlay$","clickOverlayClass","_c7","ImageHeight","MaxHeight","showClickOverlay","ɵɵpureFunction3","_c8","RightPaginationOffset","pageNum$","getPageFn","_r10","handleWebtoonPageChange","loadNextChapter","loadPrevChapter","goToPageEvent","maxPages","getPageUrl","showBookmarkEffectEvent","fullscreenEvent","MangaReaderComponent_ng_container_0_ng_template_10_div_0_Template","isLoading","inSetup","_r13","sliderPageUpdate","startMenuCloseTimer","sliderDragUpdate","cancelMenuCloseTimer","pageOptions","refreshSlider","_r14","_r12","resetMenuCloseTimer","goToPage","MangaReaderComponent_ng_container_0_div_12_div_1_div_7_Template","MangaReaderComponent_ng_container_0_div_12_div_1_ng_template_8_Template","ɵɵtemplateRefExtractor","prevChapterDisabled","prevPageDisabled","ceil","noSlider_r15","nextPageDisabled","nextChapterDisabled","opt_r17","value","text","opt_r18","MangaReaderComponent_ng_container_0_div_12_div_25_option_10_Template","MangaReaderComponent_ng_container_0_div_12_div_25_ng_container_30_Template","MangaReaderComponent_ng_container_0_div_12_div_25_ng_container_31_Template","MangaReaderComponent_ng_container_0_div_12_div_25_ng_container_32_Template","MangaReaderComponent_ng_container_0_div_12_div_25_option_34_Template","_r16","savePref","generalSettingsForm","ɵɵclassMap","SplitIconClass","pageSplitOptionsTranslated","FittingOption","layoutMode","LayoutMode","Single","Double","DoubleReversed","layoutModesTranslated","tmp_25_0","get","MangaReaderComponent_ng_container_0_div_12_div_1_Template","_r11","setReadingDirection","toggleReaderMode","toggleFullscreen","settingsOpen","MangaReaderComponent_ng_container_0_div_12_div_25_Template","undefined","Webtoon","UpDown","isFullscreen","MangaReaderComponent_ng_container_0_Conditional_3_Template","MangaReaderComponent_ng_container_0_div_4_Template","_r1","onSwipeEnd","onSwipeMove","MangaReaderComponent_ng_container_0_ng_container_9_Template","MangaReaderComponent_ng_container_0_ng_template_10_Template","MangaReaderComponent_ng_container_0_div_12_Template","_c3","ɵɵconditional","debugMode","tmp_8_0","_c4","backgroundColor","webtoon_r19","PREFETCH_PAGES","CHAPTER_ID_NOT_FETCHED","CHAPTER_ID_DOESNT_EXIST","ANIMATION_SPEED","OVERLAY_AUTO_CLOSE_TIME","CLICK_OVERLAY_TIMEOUT","ChapterInfoPosition","MangaReaderComponent","bookmarks","hasOwnProperty","WindowWidth","readingArea","nativeElement","scrollWidth","FITTING_OPTION","HEIGHT","mangaReaderService","getPageDimensions","height","clientHeight","needsScrolling","scrollHeight","WIDTH","scrollLeft","isSplitLeftToRight","pageSplitOption","isNoSplit","ReadingAreaWidth","clientWidth","ReadingAreaHeight","constructor","document","destroyRef","inject","DestroyRef","route","ActivatedRoute","router","Router","accountService","AccountService","formBuilder","FormBuilder","navService","NavService","memberService","MemberService","modalService","NgbModal","cdRef","ChangeDetectorRef","toastr","ToastrService","ReaderService","utilityService","UtilityService","ManagaReaderService","Breakpoint","readingListId","readingListMode","scalingOption","ScalingOption","FitToHeight","PageSplitOption","FitSplit","autoCloseMenu","readerModeSubject","BehaviorSubject","readerMode$","asObservable","pagingDirection","PAGING_DIRECTION","FORWARD","pagingDirectionSubject","pagingDirection$","pageSplitOptions","map","translatePrefOptions","layoutModes","canvasImage","Image","continuousChaptersStack","Stack","continuousChapterInfos","ReplaySubject","floor","step","boundPointerLabels","showSelectionBar","translate","label","LabelType","Floor","Ceil","animate","EventEmitter","showClickOverlaySubject","nextChapterId","prevChapterId","nextChapterPrefetched","prevChapterPrefetched","libraryType","LibraryType","Manga","rightPaginationOffset","prevScrollLeft","prevScrollTop","prevIsHorizontalScrollLeft","prevIsVerticalScrollLeft","hasHitRightScroll","hasScrolledX","hasScrolledY","hasHitZeroScroll","hasHitZeroTopScroll","hasHitBottomTopScroll","currentImage","pipe","shareReplay","refCount","bufferSize","pageNumSubject","chapterId","getBookmarkPageUrl","seriesId","user","apiKey","hideNavBar","hideSideNav","markForCheck","ngOnInit","libraryId","snapshot","paramMap","navigateByUrl","getPage","bind","parseInt","queryParamMap","push","currentUser$","take","subscribe","hasBookmarkRole","hasAdminRole","preferences","setOverrideStyles","nonNullable","group","FormControl","fittingOption","translateScalingOption","darkness","emulateBook","swipeToPaginate","next","merge","valueChanges","_","createReaderSettingsUpdate","takeUntilDestroyed","updateForm","distinctUntilChanged","tap","dir","mode","disableDoubleRendererIfScreenTooSmall","val","changeOccurred","setValue","enable","NoSplit","disable","setPageNum","adjustPagesForDoubleRenderer","loadPage","isWidePage","canvasRenderer","reset","hasReadingProgress","progress","toggleMenu","info","init","ngAfterViewInit","fromEvent","debounceTime","event","detail","scrollTop","ngOnDestroy","resetOverrideStyles","showNavBar","showSideNav","disableWakeLock","onResize","handleKeyPress","key","KEY_CODES","RIGHT_ARROW","checkIfPaginationAllowed","nextPage","prevPage","LEFT_ARROW","UP_ARROW","Up","DOWN_ARROW","Down","ESC_KEY","stopPropagation","preventDefault","SPACE","G","goToPageNum","promptForPage","trim","B","F","H","pageSplit","fitting","adjustForDoubleReader","window","innerWidth","innerHeight","forceNew","img","find","imageUrlToChapterId","onload","evt","isHorizontalScrollLeft","isVerticalScrollLeft","direction","i","getBookmarkInfo","bookmarkInfo","seriesName","pages","load","newOptions","Object","assign","render","setTimeout","enableWakeLock","reader","forkJoin","getProgress","chapterInfo","getChapterInfo","getBookmarks","results","seriesFormat","MangaFormat","EPUB","PDF","params","getQueryParamsObject","navigate","getNavigationArray","queryParams","Current","volumeId","page","seriesTotalPages","seriesTotalPagesRead","forEach","bookmark","getNextChapter","getPrevChapter","menuTimeout","clearTimeout","resetSwipeModifiers","triggerSwipePagination","distance","pageAmount","max","getPageAmount","singleRenderer","doubleRenderer","doubleReverseRenderer","doubleNoCoverRenderer","isSplitRendering","SplitRightToLeft","includes","notInSplit","BACKWARDS","isASpread","shouldMovePrev","setCanvasImage","addEventListener","loadChapter","pop","prevChapter","peek","newRoute","getNextChapterUrl","url","history","replaceState","msg","entity","formatChapterName","toLowerCase","timeOut","warning","renderPage","scroll","prefetch","numOffset","index","length","showScreenHints","context","emit","res","Next","prefetchStartOfChapter","Previous","tempPageNum","saveProgress","n","Array","from","v","k","images","side","question","totalPages","prompt","detectChanges","updatedPageNum","isDouble","getBookmarkPageCount","apis","unbookmark","ref","open","ShortcutsModalComponent","scrollable","size","componentInstance","shortcuts","description","modelSettings","data","__spreadValues","locale","updatePreferences","updatedPrefs","success","o","d","ɵɵdirectiveInject","DOCUMENT","selectors","viewQuery","rf","ctx","CanvasRendererComponent","SingleRendererComponent","DoubleRendererComponent","DoubleReverseRendererComponent","DoubleNoCoverRendererComponent","ɵɵresolveWindow","ɵɵStandaloneFeature","decls","vars","consts","template","MangaReaderComponent_ng_container_0_Template","NgStyle","NgIf","LoadingComponent","SwipeDirective","InfiniteScrollerComponent","NgxSliderModule","SliderComponent","ReactiveFormsModule","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","RangeValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","NgFor","NgSwitch","NgSwitchCase","FittingIconPipe","ReaderModeIconPipe","FullscreenIconPipe","TranslocoDirective","PercentPipe","NgClass","AsyncPipe","styles","animation","trigger","state","style","transform","transition","changeDetection","_MangaReaderComponent","routes","path","component","MangaReaderComponent"],"x_google_ignoreList":[0,1]}