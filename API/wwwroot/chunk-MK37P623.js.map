{
  "version": 3,
  "sources": ["src/app/_guards/auth.guard.ts", "src/app/_guards/library-access.guard.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\nimport {TranslocoService} from \"@ngneat/transloco\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  public urlKey: string = 'kavita--auth-intersection-url';\n  constructor(private accountService: AccountService,\n              private router: Router,\n              private toastr: ToastrService,\n              private translocoService: TranslocoService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(take(1),\n      map((user) => {\n        if (user) {\n          return true;\n        }\n\n        localStorage.setItem(this.urlKey, window.location.pathname);\n        this.router.navigateByUrl('/login');\n        return false;\n      })\n    );\n  }\n}\n", "import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { MemberService } from '../_services/member.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryAccessGuard implements CanActivate {\n\n  constructor(private memberService: MemberService) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    const libraryId = parseInt(state.url.split('library/')[1], 10);\n    if (isNaN(libraryId)) return of(false);\n    return this.memberService.hasLibraryAccess(libraryId);\n  }\n}\n"],
  "mappings": "6MAWA,IAAaA,GAAS,IAAA,CAAhB,IAAOA,EAAP,MAAOA,CAAS,CAEpBC,YAAoBC,EACAC,EACAC,EACAC,EAAkC,CAHlC,KAAAH,eAAAA,EACA,KAAAC,OAAAA,EACA,KAAAC,OAAAA,EACA,KAAAC,iBAAAA,EAJb,KAAAC,OAAiB,+BAIiC,CAEzDC,aAAW,CACT,OAAO,KAAKL,eAAeM,aAAaC,KAAKC,EAAK,CAAC,EACjDC,EAAKC,GACCA,EACK,IAGTC,aAAaC,QAAQ,KAAKR,OAAQS,OAAOC,SAASC,QAAQ,EAC1D,KAAKd,OAAOe,cAAc,QAAQ,EAC3B,GACR,CAAC,CAEN,yCAnBWlB,GAASmB,EAAAC,CAAA,EAAAD,EAAAE,CAAA,EAAAF,EAAAG,CAAA,EAAAH,EAAAI,CAAA,CAAA,CAAA,wBAATvB,EAASwB,QAATxB,EAASyB,UAAAC,WAFR,MAAM,CAAA,EAEd,IAAO1B,EAAP2B,SAAO3B,CAAS,GAAA,ECHtB,IAAa4B,GAAkB,IAAA,CAAzB,IAAOA,EAAP,MAAOA,CAAkB,CAE7BC,YAAoBC,EAA4B,CAA5B,KAAAA,cAAAA,CAA+B,CAEnDC,YAAYC,EAA8BC,EAA0B,CAClE,IAAMC,EAAYC,SAASF,EAAMG,IAAIC,MAAM,UAAU,EAAE,CAAC,EAAG,EAAE,EAC7D,OAAIC,MAAMJ,CAAS,EAAUK,EAAG,EAAK,EAC9B,KAAKT,cAAcU,iBAAiBN,CAAS,CACtD,yCARWN,GAAkBa,EAAAC,CAAA,CAAA,CAAA,wBAAlBd,EAAkBe,QAAlBf,EAAkBgB,UAAAC,WAFjB,MAAM,CAAA,EAEd,IAAOjB,EAAPkB,SAAOlB,CAAkB,GAAA",
  "names": ["AuthGuard", "constructor", "accountService", "router", "toastr", "translocoService", "urlKey", "canActivate", "currentUser$", "pipe", "take", "map", "user", "localStorage", "setItem", "window", "location", "pathname", "navigateByUrl", "\u0275\u0275inject", "AccountService", "Router", "ToastrService", "TranslocoService", "factory", "\u0275fac", "providedIn", "_AuthGuard", "LibraryAccessGuard", "constructor", "memberService", "canActivate", "next", "state", "libraryId", "parseInt", "url", "split", "isNaN", "of", "hasLibraryAccess", "\u0275\u0275inject", "MemberService", "factory", "\u0275fac", "providedIn", "_LibraryAccessGuard"]
}
