{
  "version": 3,
  "sources": ["src/app/_guards/admin.guard.ts", "src/app/shared/update-notification/update-notification-modal.component.ts", "src/app/shared/update-notification/update-notification-modal.component.html"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\nimport {TranslocoService} from \"@ngneat/transloco\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService,\n              private router: Router,\n              private translocoService: TranslocoService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(take(1),\n      map((user) => {\n        if (user && this.accountService.hasAdminRole(user)) {\n          return true;\n        }\n\n        this.toastr.error(this.translocoService.translate('toasts.unauthorized-1'));\n        this.router.navigateByUrl('/home');\n        return false;\n      })\n    );\n  }\n}\n", "import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {NgbActiveModal, NgbModalModule} from '@ng-bootstrap/ng-bootstrap';\nimport { UpdateVersionEvent } from 'src/app/_models/events/update-version-event';\nimport {CommonModule} from \"@angular/common\";\nimport {SafeHtmlPipe} from \"../../_pipes/safe-html.pipe\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\nimport {WikiLink} from \"../../_models/wiki\";\n\n\n@Component({\n  selector: 'app-update-notification-modal',\n  standalone: true,\n  imports: [CommonModule, NgbModalModule, SafeHtmlPipe, TranslocoDirective],\n  templateUrl: './update-notification-modal.component.html',\n  styleUrls: ['./update-notification-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UpdateNotificationModalComponent implements OnInit {\n\n  @Input({required: true}) updateData!: UpdateVersionEvent;\n  updateUrl: string = WikiLink.UpdateNative;\n\n  constructor(public modal: NgbActiveModal) { }\n\n  ngOnInit() {\n    if (this.updateData.isDocker) {\n      this.updateUrl = WikiLink.UpdateDocker;\n    } else {\n      this.updateUrl = WikiLink.UpdateNative;\n    }\n  }\n\n  close() {\n    this.modal.close({success: false, series: undefined});\n  }\n}\n", "<ng-container *transloco=\"let t; read: 'update-notification-modal'\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{t('title')}}</h4>\n    <button type=\"button\" class=\"btn-close\" [attr.aria-label]=\"t('close')\" (click)=\"close()\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <h5>{{updateData.updateTitle}}</h5>\n    <pre class=\"update-body\" [innerHtml]=\"updateData.updateBody | safeHtml\"></pre>\n  </div>\n\n  <div class=\"modal-footer\">\n    <a class=\"btn btn-icon\" [href]=\"updateUrl\" target=\"_blank\" rel=\"noopener noreferrer\">{{t('help')}}</a>\n    <button type=\"button\" class=\"btn {{updateData.isDocker ? 'btn-primary' : 'btn-secondary'}}\" (click)=\"close()\">{{t('close')}}</button>\n    <a *ngIf=\"!updateData.isDocker\" href=\"{{updateData.updateUrl}}\" class=\"btn btn-primary\" target=\"_blank\" rel=\"noopener noreferrer\" (click)=\"close()\">{{t('download')}}</a>\n  </div>\n</ng-container>\n"],
  "mappings": "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",
  "names": ["AdminGuard", "constructor", "accountService", "toastr", "router", "translocoService", "canActivate", "currentUser$", "pipe", "take", "map", "user", "hasAdminRole", "error", "translate", "navigateByUrl", "\u0275\u0275inject", "AccountService", "ToastrService", "Router", "TranslocoService", "factory", "\u0275fac", "providedIn", "_AdminGuard", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "close", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275propertyInterpolate", "updateData", "updateUrl", "\u0275\u0275sanitizeUrl", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "t_r4", "\u0275\u0275elementContainerStart", "_r1", "\u0275\u0275element", "\u0275\u0275template", "UpdateNotificationModalComponent_ng_container_0_a_15_Template", "updateTitle", "\u0275\u0275property", "\u0275\u0275pipeBind1", "updateBody", "\u0275\u0275sanitizeHtml", "\u0275\u0275classMapInterpolate1", "isDocker", "UpdateNotificationModalComponent", "constructor", "modal", "WikiLink", "UpdateNative", "ngOnInit", "UpdateDocker", "success", "series", "undefined", "\u0275\u0275directiveInject", "NgbActiveModal", "selectors", "inputs", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "UpdateNotificationModalComponent_ng_container_0_Template", "CommonModule", "NgIf", "NgbModalModule", "SafeHtmlPipe", "TranslocoDirective", "styles", "changeDetection", "_UpdateNotificationModalComponent"]
}
