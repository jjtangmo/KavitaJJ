{
  "version": 3,
  "sources": ["src/app/user-settings/manage-scrobbling-providers/manage-scrobbling-providers.component.ts", "src/app/user-settings/manage-scrobbling-providers/manage-scrobbling-providers.component.html"],
  "sourcesContent": ["import {ChangeDetectorRef, Component, ContentChild, DestroyRef, ElementRef, inject, OnInit} from '@angular/core';\nimport {NgIf, NgOptimizedImage} from \"@angular/common\";\nimport {\n  NgbAccordionBody,\n  NgbAccordionButton,\n  NgbAccordionCollapse, NgbAccordionDirective, NgbAccordionHeader, NgbAccordionItem,\n  NgbCollapse,\n  NgbTooltip\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {Select2Module} from \"ng-select2-component\";\nimport {translate, TranslocoDirective} from \"@ngneat/transloco\";\nimport {AccountService} from \"../../_services/account.service\";\nimport {ScrobbleProvider, ScrobblingService} from \"../../_services/scrobbling.service\";\nimport {ToastrService} from \"ngx-toastr\";\nimport {ManageAlertsComponent} from \"../../admin/manage-alerts/manage-alerts.component\";\nimport {LoadingComponent} from \"../../shared/loading/loading.component\";\n\n@Component({\n  selector: 'app-manage-scrobbling-providers',\n  standalone: true,\n  imports: [\n    NgIf,\n    NgOptimizedImage,\n    NgbTooltip,\n    ReactiveFormsModule,\n    Select2Module,\n    TranslocoDirective,\n    NgbCollapse,\n    ManageAlertsComponent,\n    NgbAccordionBody,\n    NgbAccordionButton,\n    NgbAccordionCollapse,\n    NgbAccordionDirective,\n    NgbAccordionHeader,\n    NgbAccordionItem,\n    LoadingComponent,\n  ],\n  templateUrl: './manage-scrobbling-providers.component.html',\n  styleUrl: './manage-scrobbling-providers.component.scss'\n})\nexport class ManageScrobblingProvidersComponent implements OnInit {\n  public readonly accountService = inject(AccountService);\n  private readonly scrobblingService = inject(ScrobblingService);\n  private readonly toastr = inject(ToastrService);\n  private readonly cdRef = inject(ChangeDetectorRef);\n  private readonly destroyRef = inject(DestroyRef);\n\n  hasValidLicense: boolean = false;\n\n  formGroup: FormGroup = new FormGroup({});\n  aniListToken: string = '';\n  malToken: string = '';\n  malUsername: string = '';\n\n  aniListTokenExpired: boolean = false;\n  malTokenExpired: boolean = false;\n\n  isViewMode: boolean = true;\n  loaded: boolean = false;\n\n  constructor() {\n    this.accountService.hasValidLicense$.subscribe(res => {\n      this.hasValidLicense = res;\n      this.cdRef.markForCheck();\n      if (this.hasValidLicense) {\n        this.scrobblingService.getAniListToken().subscribe(token => {\n          this.aniListToken = token;\n          this.formGroup.get('aniListToken')?.setValue(token);\n          this.loaded = true;\n          this.cdRef.markForCheck();\n        });\n        this.scrobblingService.getMalToken().subscribe(dto => {\n          this.malToken = dto.accessToken;\n          this.malUsername = dto.username;\n          this.formGroup.get('malToken')?.setValue(this.malToken);\n          this.formGroup.get('malUsername')?.setValue(this.malUsername);\n          this.cdRef.markForCheck();\n        });\n        this.scrobblingService.hasTokenExpired(ScrobbleProvider.AniList).subscribe(hasExpired => {\n          this.aniListTokenExpired = hasExpired;\n          this.cdRef.markForCheck();\n        });\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.formGroup.addControl('aniListToken', new FormControl('', [Validators.required]));\n    this.formGroup.addControl('malClientId', new FormControl('', [Validators.required]));\n    this.formGroup.addControl('malUsername', new FormControl('', [Validators.required]));\n  }\n\n\n\n  resetForm() {\n    this.formGroup.get('aniListToken')?.setValue('');\n    this.formGroup.get('malClientId')?.setValue('');\n    this.formGroup.get('malUsername')?.setValue('');\n    this.cdRef.markForCheck();\n  }\n\n  saveAniListForm() {\n    this.scrobblingService.updateAniListToken(this.formGroup.get('aniListToken')!.value).subscribe(() => {\n      this.toastr.success(translate('toasts.anilist-token-updated'));\n      this.aniListToken = this.formGroup.get('aniListToken')!.value;\n      this.resetForm();\n      this.cdRef.markForCheck();\n    });\n  }\n\n  saveMalForm() {\n    this.scrobblingService.updateMalToken(this.formGroup.get('malUsername')!.value, this.formGroup.get('malClientId')!.value).subscribe(() => {\n      this.toastr.success(translate('toasts.mal-clientId-updated'));\n      this.malToken = this.formGroup.get('malClientId')!.value;\n      this.malUsername = this.formGroup.get('malUsername')!.value;\n      this.resetForm();\n      this.cdRef.markForCheck();\n    });\n  }\n\n  toggleViewMode() {\n    this.isViewMode = !this.isViewMode;\n    this.resetForm();\n  }\n}\n", "<ng-container *transloco=\"let t; read:'scrobbling-providers'\">\n  <div class=\"card mt-2\">\n    <div class=\"card-body\">\n      <div class=\"card-title\">\n        <div class=\"container-fluid row mb-2\">\n          <div class=\"col-10 col-sm-11\">\n            <h4>{{t('title')}}\n              @if(!aniListTokenExpired) {\n                <i class=\"fa-solid fa-circle-check ms-1 confirm-icon\" aria-hidden=\"true\" [ngbTooltip]=\"t('token-valid')\"></i>\n                <span class=\"visually-hidden\">{{t('token-valid')}}</span>\n              } @else {\n                <i class=\"fa-solid fa-circle ms-1 confirm-icon error\" aria-hidden=\"true\" [ngbTooltip]=\"t('token-expired')\"></i>\n                <span class=\"visually-hidden\">{{t('token-expired')}}</span>\n              }\n            </h4>\n          </div>\n          <div class=\"col-1 text-end\">\n            <button class=\"btn btn-primary btn-sm\" [disabled]=\"!hasValidLicense\" (click)=\"toggleViewMode()\">{{isViewMode ? t('edit') : t('cancel')}}</button>\n          </div>\n        </div>\n      </div>\n\n      @if(loaded) {\n        <ng-container *ngIf=\"isViewMode\">\n          <div class=\"container-fluid row\">\n          <span class=\"col-12\">\n            @if(!hasValidLicense) {\n              {{t('requires', {product: 'Kavita+'})}}\n            } @else {\n              <span>\n                <img class=\"me-2\" width=\"32\" height=\"32\" ngSrc=\"assets/images/ExternalServices/AniList.png\" alt=\"AniList\" ngbTooltip=\"AniList\">\n                @if(aniListToken && aniListToken.length > 0) {\n                  {{t('token-set')}}\n                } @else {\n                  {{t('no-token-set')}}\n                }\n                @if(aniListTokenExpired) {\n                  <i class=\"error fa-solid fa-exclamation-circle\" [ngbTooltip]=\"t('token-expired')\">\n                    <span class=\"visually-hidden\">{{t('token-expired')}}</span>\n                  </i>\n                }\n              </span>\n\n              <span class=\"ms-2\">\n                <img class=\"me-2\" width=\"32\" height=\"32\" ngSrc=\"assets/images/ExternalServices/MAL.png\" alt=\"MAL\" ngbTooltip=\"MAL\">\n                @if (malToken && malToken.length > 0) {\n                  {{t('token-set')}}\n                }\n                @else {\n                  {{t('no-token-set')}}\n                }\n              </span>\n\n                @if(malTokenExpired) {\n                  <i class=\"error fa-solid fa-exclamation-circle\" [ngbTooltip]=\"t('token-expired')\">\n                    <span class=\"visually-hidden\">{{t('token-expired')}}</span>\n                  </i>\n                }\n\n              @if (!aniListToken && !malToken) {\n                {{t('no-token-set')}}\n              }\n            }\n          </span>\n        </div>\n      </ng-container>\n\n        <div [(ngbCollapse)]=\"isViewMode\">\n          <p>{{t('generic-instructions')}}</p>\n          <form [formGroup]=\"formGroup\">\n\n            <div class=\"mt-3\" ngbAccordion #accordion [destroyOnHide]=\"false\" [closeOthers]=\"true\">\n              <div ngbAccordionItem=\"anilist\">\n                <h2 ngbAccordionHeader>\n                  <button ngbAccordionButton id=\"anilist-token-header\">\n                    AniList\n                    @if(!aniListTokenExpired) {\n                      <i class=\"fa-solid fa-circle-check ms-1 confirm-icon\" aria-hidden=\"true\" [ngbTooltip]=\"t('token-valid')\"></i>\n                      <span class=\"visually-hidden\">{{t('token-valid')}}</span>\n                    } @else {\n                      <i class=\"fa-solid fa-circle ms-1 confirm-icon error\" aria-hidden=\"true\" [ngbTooltip]=\"t('token-expired')\"></i>\n                      <span class=\"visually-hidden\">{{t('token-expired')}}</span>\n                    }\n                  </button>\n                </h2>\n                <div ngbAccordionCollapse>\n                  <div ngbAccordionBody>\n                    <ng-template>\n                      <p>{{t('instructions', {service: 'AniList'})}}</p>\n                      <div class=\"form-group mb-3\">\n                        <label for=\"anilist-token\">{{t('token-input-label', {service: 'AniList'})}}</label>\n                        <textarea id=\"anilist-token\" rows=\"2\" cols=\"3\" class=\"form-control\" formControlName=\"aniListToken\"></textarea>\n                      </div>\n                      <div class=\"col-auto d-flex d-md-block justify-content-sm-center text-md-end mb-3\">\n                        <a class=\"flex-fill btn btn-secondary me-2\"\n                           href=\"https://anilist.co/api/v2/oauth/authorize?client_id=12809&redirect_url=https://anilist.co/api/v2/oauth/pin&response_type=token\"\n                           target=\"_blank\" rel=\"noopener noreferrer\">{{t('generate')}}</a>\n                        <button type=\"button\" class=\"flex-fill btn btn-primary\" aria-describedby=\"anilist-token-header\" (click)=\"saveAniListForm()\">{{t('save')}}</button>\n                      </div>\n                    </ng-template>\n                  </div>\n                </div>\n              </div>\n\n              <div ngbAccordionItem=\"mal\">\n                <h2 ngbAccordionHeader>\n                  <button ngbAccordionButton id=\"mal-token-header\">\n                    MAL\n                    @if(!malTokenExpired) {\n                      <i class=\"fa-solid fa-circle-check ms-1 confirm-icon\" aria-hidden=\"true\" [ngbTooltip]=\"t('token-valid')\"></i>\n                      <span class=\"visually-hidden\">{{t('token-valid')}}</span>\n                    } @else {\n                      <i class=\"fa-solid fa-circle ms-1 confirm-icon error\" aria-hidden=\"true\" [ngbTooltip]=\"t('token-expired')\"></i>\n                      <span class=\"visually-hidden\">{{t('token-expired')}}</span>\n                    }\n                  </button>\n                </h2>\n                <div ngbAccordionCollapse>\n                  <div ngbAccordionBody>\n                    <ng-template>\n                      <p>{{t('mal-instructions', {service: 'MAL'})}}</p>\n                      <div class=\"form-group mb-3\">\n                        <label for=\"mal-token\">{{t('mal-token-input-label')}}</label>\n                        <input type=\"text\" id=\"mal-token\" class=\"form-control\" formControlName=\"malClientId\"/>\n                      </div>\n\n                      <div class=\"form-group mb-3\">\n                        <label for=\"mal-username\">{{t('mal-username-input-label')}}</label>\n                        <input type=\"text\" id=\"mal-username\" class=\"form-control\" formControlName=\"malUsername\"/>\n                      </div>\n                      <div class=\"col-auto d-flex d-md-block justify-content-sm-center text-md-end mb-3\">\n                        <button type=\"button\" class=\"flex-fill btn btn-primary\" aria-describedby=\"mal-token-header\" (click)=\"saveMalForm()\">{{t('save')}}</button>\n                      </div>\n                    </ng-template>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </form>\n        </div>\n      } @else {\n        <app-loading [loading]=\"!loaded\" [message]=\"t('loading')\"></app-loading>\n      }\n\n\n    </div>\n  </div>\n\n\n</ng-container>\n"],
  "mappings": "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",
  "names": ["\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "t_r2", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "\u0275\u0275textInterpolate1", "\u0275\u0275pureFunction0", "_c0", "\u0275\u0275template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_4_Conditional_2_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_4_Conditional_3_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_4_Conditional_4_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_4_Conditional_7_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_4_Conditional_8_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_4_Conditional_9_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_4_Conditional_10_Template", "\u0275\u0275conditional", "ctx_r2", "aniListToken", "length", "aniListTokenExpired", "malToken", "malTokenExpired", "\u0275\u0275elementContainerStart", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_3_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Conditional_4_Template", "hasValidLicense", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r5", "\u0275\u0275nextContext", "\u0275\u0275resetView", "saveAniListForm", "_c1", "_r6", "saveMalForm", "_c2", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_container_0_Template", "\u0275\u0275twoWayListener", "$event", "_r4", "i0", "\u0275\u0275twoWayBindingSet", "isViewMode", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_Conditional_11_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_Conditional_12_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_template_15_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_Conditional_20_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_Conditional_21_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_ng_template_24_Template", "\u0275\u0275twoWayProperty", "formGroup", "loaded", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_8_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_9_Template", "_r1", "toggleViewMode", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_13_Template", "ManageScrobblingProvidersComponent_ng_container_0_Conditional_14_Template", "ManageScrobblingProvidersComponent", "constructor", "accountService", "inject", "AccountService", "scrobblingService", "ScrobblingService", "toastr", "ToastrService", "cdRef", "ChangeDetectorRef", "destroyRef", "DestroyRef", "FormGroup", "malUsername", "hasValidLicense$", "subscribe", "res", "markForCheck", "getAniListToken", "token", "get", "setValue", "getMalToken", "dto", "accessToken", "username", "hasTokenExpired", "ScrobbleProvider", "AniList", "hasExpired", "ngOnInit", "addControl", "FormControl", "Validators", "required", "resetForm", "updateAniListToken", "value", "success", "translate", "updateMalToken", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ManageScrobblingProvidersComponent_ng_container_0_Template", "NgIf", "NgOptimizedImage", "NgbTooltip", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "Select2Module", "TranslocoDirective", "NgbCollapse", "NgbAccordionBody", "NgbAccordionButton", "NgbAccordionCollapse", "NgbAccordionDirective", "NgbAccordionHeader", "NgbAccordionItem", "LoadingComponent", "styles", "_ManageScrobblingProvidersComponent"]
}
