{
  "version": 3,
  "sources": ["src/app/statistics/_components/user-stats-info-cards/user-stats-info-cards.component.ts", "src/app/statistics/_components/user-stats-info-cards/user-stats-info-cards.component.html", "src/app/statistics/_components/user-stats/user-stats.component.ts", "src/app/statistics/_components/user-stats/user-stats.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { StatisticsService } from 'src/app/_services/statistics.service';\nimport { GenericListModalComponent } from '../_modals/generic-list-modal/generic-list-modal.component';\nimport { TimeAgoPipe } from '../../../_pipes/time-ago.pipe';\nimport { TimeDurationPipe } from '../../../_pipes/time-duration.pipe';\nimport { DecimalPipe } from '@angular/common';\nimport { IconAndTitleComponent } from '../../../shared/icon-and-title/icon-and-title.component';\nimport {AccountService} from \"../../../_services/account.service\";\nimport {CompactNumberPipe} from \"../../../_pipes/compact-number.pipe\";\nimport {TranslocoDirective} from \"@ngneat/transloco\";\n\n@Component({\n    selector: 'app-user-stats-info-cards',\n    templateUrl: './user-stats-info-cards.component.html',\n    styleUrls: ['./user-stats-info-cards.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [IconAndTitleComponent, DecimalPipe, CompactNumberPipe, TimeDurationPipe, TimeAgoPipe, TranslocoDirective]\n})\nexport class UserStatsInfoCardsComponent {\n\n  @Input() totalPagesRead: number = 0;\n  @Input() totalWordsRead: number = 0;\n  @Input() timeSpentReading: number = 0;\n  @Input() chaptersRead: number = 0;\n  @Input() lastActive: string = '';\n  @Input() avgHoursPerWeekSpentReading: number = 0;\n\n  constructor(private statsService: StatisticsService, private modalService: NgbModal, private accountService: AccountService) { }\n\n  openPageByYearList() {\n    const numberPipe = new CompactNumberPipe();\n    this.statsService.getPagesPerYear().subscribe(yearCounts => {\n      const ref = this.modalService.open(GenericListModalComponent, { scrollable: true });\n      ref.componentInstance.items = yearCounts.map(t => `${t.name}: ${numberPipe.transform(t.value)} pages`);\n      ref.componentInstance.title = 'Pages Read By Year';\n    });\n  }\n\n  openWordByYearList() {\n    const numberPipe = new CompactNumberPipe();\n    this.statsService.getWordsPerYear().subscribe(yearCounts => {\n      const ref = this.modalService.open(GenericListModalComponent, { scrollable: true });\n      ref.componentInstance.items = yearCounts.map(t => `${t.name}: ${numberPipe.transform(t.value)} words`);\n      ref.componentInstance.title = 'Words Read By Year';\n    });\n  }\n}\n", "<ng-container *transloco=\"let t; read:'user-stats-info-cards'\">\n  <div class=\"row g-0 mt-4 mb-3 d-flex justify-content-around\">\n    <ng-container>\n      <div class=\"col-auto mb-2\">\n        <app-icon-and-title [label]=\"t('total-pages-read-label')\" [clickable]=\"true\" fontClasses=\"fa-regular fa-file-lines\"\n                            [title]=\"t('total-pages-read-tooltip', {value: totalPagesRead | number})\" (click)=\"openPageByYearList();$event.stopPropagation();\">\n          {{totalPagesRead | compactNumber}}\n        </app-icon-and-title>\n      </div>\n      <div class=\"vr d-none d-lg-block m-2\"></div>\n    </ng-container>\n\n    <ng-container>\n      <div class=\"col-auto mb-2\">\n        <app-icon-and-title [label]=\"t('total-words-read-label')\" [clickable]=\"true\" fontClasses=\"fa-regular fa-file-lines\"\n                            [title]=\"t('total-words-read-tooltip', {value: totalWordsRead | number})\" (click)=\"openWordByYearList();$event.stopPropagation();\">\n          {{totalWordsRead | compactNumber}}\n        </app-icon-and-title>\n      </div>\n      <div class=\"vr d-none d-lg-block m-2\"></div>\n    </ng-container>\n\n    <ng-container >\n      <div class=\"col-auto mb-2\">\n        <app-icon-and-title [label]=\"t('time-spent-reading-label')\" [clickable]=\"false\" fontClasses=\"fas fa-eye\"\n                            [title]=\"t('time-spent-reading-tooltip', {value: timeSpentReading | number})\">\n          {{timeSpentReading | timeDuration}}\n        </app-icon-and-title>\n      </div>\n      <div class=\"vr d-none d-lg-block m-2\"></div>\n    </ng-container>\n\n    <ng-container>\n      <div class=\"col-auto mb-2\">\n        <app-icon-and-title [label]=\"t('avg-reading-per-week-label')\" [clickable]=\"false\" fontClasses=\"fas fa-eye\">\n          {{avgHoursPerWeekSpentReading | timeDuration}}\n        </app-icon-and-title>\n      </div>\n      <div class=\"vr d-none d-lg-block m-2\"></div>\n    </ng-container>\n\n    <ng-container>\n      <div class=\"col-auto mb-2\">\n        <app-icon-and-title [label]=\"t('chapters-read-label')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-file-lines\"\n                            [title]=\"t('chapters-read-tooltip', {value: (chaptersRead | number)})\">\n          {{t('chapters', {value: (chaptersRead | compactNumber)})}}\n        </app-icon-and-title>\n      </div>\n      <div class=\"vr d-none d-lg-block m-2\"></div>\n    </ng-container>\n\n    <ng-container>\n      <div class=\"col-auto mb-2\">\n        <app-icon-and-title [label]=\"t('last-active-label')\" [clickable]=\"false\" fontClasses=\"fa-regular fa-calendar\">\n          {{lastActive | timeAgo}}\n        </app-icon-and-title>\n      </div>\n    </ng-container>\n  </div>\n</ng-container>\n", "import {ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, inject, OnInit} from '@angular/core';\nimport {map, Observable, shareReplay} from 'rxjs';\nimport {UserReadStatistics} from 'src/app/statistics/_models/user-read-statistics';\nimport {StatisticsService} from 'src/app/_services/statistics.service';\nimport {ReadHistoryEvent} from '../../_models/read-history-event';\nimport {MemberService} from 'src/app/_services/member.service';\nimport {AccountService} from 'src/app/_services/account.service';\nimport {PieDataItem} from '../../_models/pie-data-item';\nimport {LibraryService} from 'src/app/_services/library.service';\nimport {AsyncPipe, NgIf, PercentPipe} from '@angular/common';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {StatListComponent} from '../stat-list/stat-list.component';\nimport {ReadingActivityComponent} from '../reading-activity/reading-activity.component';\nimport {UserStatsInfoCardsComponent} from '../user-stats-info-cards/user-stats-info-cards.component';\nimport {TranslocoModule} from \"@ngneat/transloco\";\nimport {DayBreakdownComponent} from \"../day-breakdown/day-breakdown.component\";\n\n@Component({\n    selector: 'app-user-stats',\n    templateUrl: './user-stats.component.html',\n    styleUrls: ['./user-stats.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [\n        NgIf,\n        UserStatsInfoCardsComponent,\n        ReadingActivityComponent,\n        StatListComponent,\n        AsyncPipe,\n        TranslocoModule,\n        DayBreakdownComponent,\n    ],\n})\nexport class UserStatsComponent implements OnInit {\n\n  userId: number | undefined = undefined;\n  userStats$!: Observable<UserReadStatistics>;\n  readSeries$!: Observable<ReadHistoryEvent[]>;\n  isAdmin$: Observable<boolean>;\n  percentageRead$!: Observable<PieDataItem[]>;\n  private readonly destroyRef = inject(DestroyRef);\n\n  constructor(private readonly cdRef: ChangeDetectorRef, private statService: StatisticsService,\n    private accountService: AccountService, private memberService: MemberService,\n    private libraryService: LibraryService) {\n      this.isAdmin$ = this.accountService.currentUser$.pipe(takeUntilDestroyed(this.destroyRef), map(u => {\n        if (!u) return false;\n        return this.accountService.hasAdminRole(u);\n      }));\n\n    }\n\n  ngOnInit(): void {\n    this.memberService.getMember().subscribe(me => {\n      this.userId = me.id;\n      this.cdRef.markForCheck();\n\n      this.userStats$ = this.statService.getUserStatistics(this.userId).pipe(takeUntilDestroyed(this.destroyRef), shareReplay());\n      this.readSeries$ = this.statService.getReadingHistory(this.userId).pipe(\n        takeUntilDestroyed(this.destroyRef),\n      );\n\n      const pipe = new PercentPipe('en-US');\n      this.libraryService.getLibraryNames().subscribe(names => {\n        this.percentageRead$ = this.userStats$.pipe(takeUntilDestroyed(this.destroyRef), map(d => d.percentReadPerLibrary.map(l => {\n          return {name: names[l.count], value: parseFloat((pipe.transform(l.value, '1.1-1') || '0').replace('%', ''))};\n        }).sort((a: PieDataItem, b: PieDataItem) => b.value - a.value)));\n      })\n\n    });\n  }\n}\n", "<ng-container *transloco=\"let t; read:'user-stats'\">\n  <div class=\"vstack gap-3\" *ngIf=\"userId\">\n\n    <div class=\"row g-0 d-flex justify-content-around\">\n      <ng-container *ngIf=\"userStats$ | async as userStats\">\n        <app-user-stats-info-cards [totalPagesRead]=\"userStats.totalPagesRead\" [totalWordsRead]=\"userStats.totalWordsRead\" [timeSpentReading]=\"userStats.timeSpentReading\"\n                                   [chaptersRead]=\"userStats.chaptersRead\" [lastActive]=\"userStats.lastActive\" [avgHoursPerWeekSpentReading]=\"userStats.avgHoursPerWeekSpentReading\"></app-user-stats-info-cards>\n      </ng-container>\n    </div>\n\n    <div class=\"row g-0 fixed-row\">\n      <div class=\"col-md-12 col-sm-12 mt-4 pt-2\">\n        <app-reading-activity [userId]=\"userId\" [isAdmin]=\"(isAdmin$ | async) || false\" [individualUserMode]=\"true\"></app-reading-activity>\n      </div>\n    </div>\n\n    <div class=\"row g-0 fixed-row\">\n      <div class=\"col-md-6 col-sm-12 mb-sm-4\">\n        <app-day-breakdown [userId]=\"userId\"></app-day-breakdown>\n      </div>\n      <div class=\"col-md-6 col-sm-12\">\n        <app-stat-list [data$]=\"percentageRead$\" [label]=\"t('read-percentage')\" [title]=\"t('library-read-progress-title')\"></app-stat-list>\n      </div>\n\n    </div>\n\n  </div>\n\n</ng-container>\n"],
  "mappings": "2yBCAAA,EAAA,CAAA,EACEC,EAAA,EAAA,MAAA,CAAA,EACED,EAAA,CAAA,EACEC,EAAA,EAAA,MAAA,CAAA,EAA2B,EAAA,qBAAA,CAAA,gBAEqEC,EAAA,QAAA,SAAAC,EAAA,CAAAC,OAAAC,EAAAC,CAAA,EAAAC,EAAA,EAASC,mBAAA,EAAoBC,EAACN,EAAAO,gBAAA,CAAwB,CAAA,CAAA,EAClJC,EAAA,CAAA,uBACFC,EAAA,EAAqB,EAEvBC,EAAA,EAAA,MAAA,CAAA,MAGFb,EAAA,CAAA,EACEC,EAAA,GAAA,MAAA,CAAA,EAA2B,GAAA,qBAAA,CAAA,iBAEqEC,EAAA,QAAA,SAAAC,EAAA,CAAAC,OAAAC,EAAAC,CAAA,EAAAC,EAAA,EAASO,mBAAA,EAAoBL,EAACN,EAAAO,gBAAA,CAAwB,CAAA,CAAA,EAClJC,EAAA,EAAA,wBACFC,EAAA,EAAqB,EAEvBC,EAAA,GAAA,MAAA,CAAA,MAGFb,EAAA,EAAA,EACEC,EAAA,GAAA,MAAA,CAAA,EAA2B,GAAA,qBAAA,CAAA,iBAGvBU,EAAA,EAAA,uBACFC,EAAA,EAAqB,EAEvBC,EAAA,GAAA,MAAA,CAAA,MAGFb,EAAA,EAAA,EACEC,EAAA,GAAA,MAAA,CAAA,EAA2B,GAAA,qBAAA,CAAA,EAEvBU,EAAA,EAAA,uBACFC,EAAA,EAAqB,EAEvBC,EAAA,GAAA,MAAA,CAAA,MAGFb,EAAA,EAAA,EACEC,EAAA,GAAA,MAAA,CAAA,EAA2B,GAAA,qBAAA,CAAA,iBAGvBU,EAAA,EAAA,wBACFC,EAAA,EAAqB,EAEvBC,EAAA,GAAA,MAAA,CAAA,MAGFb,EAAA,EAAA,EACEC,EAAA,GAAA,MAAA,CAAA,EAA2B,GAAA,qBAAA,CAAA,EAEvBU,EAAA,EAAA,kBACFC,EAAA,EAAqB,MAG3BA,EAAA,sCAtD0BG,EAAA,CAAA,EAAAC,EAAA,QAAAC,EAAA,wBAAA,CAAA,EAAqC,YAAA,EAAA,EAAmB,QAAAA,EAAA,2BAAAC,EAAA,GAAAC,EAAAC,EAAA,EAAA,GAAAC,EAAAC,cAAA,CAAA,CAAA,CAAA,EAE1EP,EAAA,CAAA,EAAAQ,EAAA,IAAAH,EAAA,EAAA,GAAAC,EAAAC,cAAA,EAAA,GAAA,EAQkBP,EAAA,CAAA,EAAAC,EAAA,QAAAC,EAAA,wBAAA,CAAA,EAAqC,YAAA,EAAA,EAAmB,QAAAA,EAAA,2BAAAC,EAAA,GAAAC,EAAAC,EAAA,GAAA,GAAAC,EAAAG,cAAA,CAAA,CAAA,CAAA,EAE1ET,EAAA,CAAA,EAAAQ,EAAA,IAAAH,EAAA,GAAA,GAAAC,EAAAG,cAAA,EAAA,GAAA,EAQkBT,EAAA,CAAA,EAAAC,EAAA,QAAAC,EAAA,0BAAA,CAAA,EAAuC,YAAA,EAAA,EAAoB,QAAAA,EAAA,6BAAAC,EAAA,GAAAC,EAAAC,EAAA,GAAA,GAAAC,EAAAI,gBAAA,CAAA,CAAA,CAAA,EAE7EV,EAAA,CAAA,EAAAQ,EAAA,IAAAH,EAAA,GAAA,GAAAC,EAAAI,gBAAA,EAAA,GAAA,EAQkBV,EAAA,CAAA,EAAAC,EAAA,QAAAC,EAAA,4BAAA,CAAA,EAAyC,YAAA,EAAA,EAC3DF,EAAA,EAAAQ,EAAA,IAAAH,EAAA,GAAA,GAAAC,EAAAK,2BAAA,EAAA,GAAA,EAQkBX,EAAA,CAAA,EAAAC,EAAA,QAAAC,EAAA,qBAAA,CAAA,EAAkC,YAAA,EAAA,EAAoB,QAAAA,EAAA,wBAAAC,EAAA,GAAAC,EAAAC,EAAA,GAAA,GAAAC,EAAAM,YAAA,CAAA,CAAA,CAAA,EAExEZ,EAAA,CAAA,EAAAQ,EAAA,IAAAN,EAAA,WAAAC,EAAA,GAAAC,EAAAC,EAAA,GAAA,GAAAC,EAAAM,YAAA,CAAA,CAAA,EAAA,GAAA,EAQkBZ,EAAA,CAAA,EAAAC,EAAA,QAAAC,EAAA,mBAAA,CAAA,EAAgC,YAAA,EAAA,EAClDF,EAAA,EAAAQ,EAAA,IAAAH,EAAA,GAAA,GAAAC,EAAAO,UAAA,EAAA,GAAA,GDlCV,IAAaC,IAA2B,IAAA,CAAlC,IAAOA,EAAP,MAAOA,CAA2B,CAStCC,YAAoBC,EAAyCC,EAAgCC,EAA8B,CAAvG,KAAAF,aAAAA,EAAyC,KAAAC,aAAAA,EAAgC,KAAAC,eAAAA,EAPpF,KAAAX,eAAyB,EACzB,KAAAE,eAAyB,EACzB,KAAAC,iBAA2B,EAC3B,KAAAE,aAAuB,EACvB,KAAAC,WAAqB,GACrB,KAAAF,4BAAsC,CAEgF,CAE/HlB,oBAAkB,CAChB,IAAM0B,EAAa,IAAIC,EACvB,KAAKJ,aAAaK,gBAAe,EAAGC,UAAUC,GAAa,CACzD,IAAMC,EAAM,KAAKP,aAAaQ,KAAKC,EAA2B,CAAEC,WAAY,EAAI,CAAE,EAClFH,EAAII,kBAAkBC,MAAQN,EAAWO,IAAIC,GAAK,GAAGA,EAAEC,IAAI,KAAKb,EAAWc,UAAUF,EAAEG,KAAK,CAAC,QAAQ,EACrGV,EAAII,kBAAkBO,MAAQ,oBAChC,CAAC,CACH,CAEApC,oBAAkB,CAChB,IAAMoB,EAAa,IAAIC,EACvB,KAAKJ,aAAaoB,gBAAe,EAAGd,UAAUC,GAAa,CACzD,IAAMC,EAAM,KAAKP,aAAaQ,KAAKC,EAA2B,CAAEC,WAAY,EAAI,CAAE,EAClFH,EAAII,kBAAkBC,MAAQN,EAAWO,IAAIC,GAAK,GAAGA,EAAEC,IAAI,KAAKb,EAAWc,UAAUF,EAAEG,KAAK,CAAC,QAAQ,EACrGV,EAAII,kBAAkBO,MAAQ,oBAChC,CAAC,CACH,yCA3BWrB,GAA2BuB,EAAAC,CAAA,EAAAD,EAAAE,CAAA,EAAAF,EAAAG,CAAA,CAAA,CAAA,sBAA3B1B,EAA2B2B,UAAA,CAAA,CAAA,2BAAA,CAAA,EAAAC,OAAA,CAAAnC,eAAA,iBAAAE,eAAA,iBAAAC,iBAAA,mBAAAE,aAAA,eAAAC,WAAA,aAAAF,4BAAA,6BAAA,EAAAgC,WAAA,GAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,YAAA,eAAA,EAAA,CAAA,EAAA,MAAA,MAAA,OAAA,OAAA,SAAA,wBAAA,EAAA,CAAA,EAAA,WAAA,MAAA,EAAA,CAAA,cAAA,2BAAA,EAAA,QAAA,QAAA,YAAA,OAAA,EAAA,CAAA,EAAA,KAAA,SAAA,aAAA,KAAA,EAAA,CAAA,cAAA,aAAA,EAAA,QAAA,YAAA,OAAA,EAAA,CAAA,cAAA,aAAA,EAAA,QAAA,WAAA,EAAA,CAAA,cAAA,2BAAA,EAAA,QAAA,YAAA,OAAA,EAAA,CAAA,cAAA,yBAAA,EAAA,QAAA,WAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCpBxCE,EAAA,EAAAC,GAAA,GAAA,GAAA,eAAA,CAAA,OAAiCpD,EAAA,gBAAA,uBAAA,iBDkBnBqD,GAAuBC,EAAanC,EAAmBoC,EAAkBC,EAAaC,CAAkB,EAAAC,OAAA,CAAA,0EAAA,EAAAC,gBAAA,CAAA,CAAA,EAEhH,IAAO9C,EAAP+C,SAAO/C,CAA2B,GAAA,4BGhBlCgD,EAAA,CAAA,EACEC,EAAA,EAAA,4BAAA,EAAA,yBAA2BC,EAAA,EAAAC,EAAA,iBAAAC,EAAAC,cAAA,EAA2C,iBAAAD,EAAAE,cAAA,EAA4C,mBAAAF,EAAAG,gBAAA,EAAgD,eAAAH,EAAAI,YAAA,EAChG,aAAAJ,EAAAK,UAAA,EAAoC,8BAAAL,EAAAM,2BAAA,6BAL5GC,EAAA,EAAA,MAAA,CAAA,EAAyC,EAAA,MAAA,CAAA,EAGrCC,EAAA,EAAAC,GAAA,EAAA,EAAA,eAAA,CAAA,eAIFC,EAAA,EAEAH,EAAA,EAAA,MAAA,CAAA,EAA+B,EAAA,MAAA,CAAA,EAE3BV,EAAA,EAAA,uBAAA,CAAA,eACFa,EAAA,EAAM,EAGRH,EAAA,EAAA,MAAA,CAAA,EAA+B,EAAA,MAAA,CAAA,EAE3BV,EAAA,GAAA,oBAAA,CAAA,EACFa,EAAA,EACAH,EAAA,GAAA,MAAA,EAAA,EACEV,EAAA,GAAA,gBAAA,EAAA,EACFa,EAAA,EAAM,EAEF,kCApBWZ,EAAA,CAAA,EAAAC,EAAA,OAAAY,EAAA,EAAA,EAAAC,EAAAC,UAAA,CAAA,EAQSf,EAAA,CAAA,EAAAC,EAAA,SAAAa,EAAAE,MAAA,EAAiB,UAAAH,EAAA,EAAA,GAAAC,EAAAG,QAAA,GAAA,EAAA,EAAwC,qBAAA,EAAA,EAM5DjB,EAAA,CAAA,EAAAC,EAAA,SAAAa,EAAAE,MAAA,EAGJhB,EAAA,CAAA,EAAAC,EAAA,QAAAa,EAAAI,eAAA,EAAyB,QAAAC,EAAA,iBAAA,CAAA,EAA+B,QAAAA,EAAA,6BAAA,CAAA,6BArB/ErB,EAAA,CAAA,EACEY,EAAA,EAAAU,GAAA,GAAA,GAAA,MAAA,CAAA,sBAA2BpB,EAAA,EAAAC,EAAA,OAAAa,EAAAE,MAAA,GDgC7B,IAAaK,IAAkB,IAAA,CAAzB,IAAOA,EAAP,MAAOA,CAAkB,CAS7BC,YAA6BC,EAAkCC,EACrDC,EAAwCC,EACxCC,EAA8B,CAFX,KAAAJ,MAAAA,EAAkC,KAAAC,YAAAA,EACrD,KAAAC,eAAAA,EAAwC,KAAAC,cAAAA,EACxC,KAAAC,eAAAA,EATV,KAAAX,OAA6BY,OAKZ,KAAAC,WAAaC,EAAOC,CAAU,EAK3C,KAAKd,SAAW,KAAKQ,eAAeO,aAAaC,KAAKC,EAAmB,KAAKL,UAAU,EAAGM,EAAIC,GACxFA,EACE,KAAKX,eAAeY,aAAaD,CAAC,EAD1B,EAEhB,CAAC,CAEJ,CAEFE,UAAQ,CACN,KAAKZ,cAAca,UAAS,EAAGC,UAAUC,GAAK,CAC5C,KAAKzB,OAASyB,EAAGC,GACjB,KAAKnB,MAAMoB,aAAY,EAEvB,KAAK5B,WAAa,KAAKS,YAAYoB,kBAAkB,KAAK5B,MAAM,EAAEiB,KAAKC,EAAmB,KAAKL,UAAU,EAAGgB,EAAW,CAAE,EACzH,KAAKC,YAAc,KAAKtB,YAAYuB,kBAAkB,KAAK/B,MAAM,EAAEiB,KACjEC,EAAmB,KAAKL,UAAU,CAAC,EAGrC,IAAMI,EAAO,IAAIe,EAAY,OAAO,EACpC,KAAKrB,eAAesB,gBAAe,EAAGT,UAAUU,GAAQ,CACtD,KAAKhC,gBAAkB,KAAKH,WAAWkB,KAAKC,EAAmB,KAAKL,UAAU,EAAGM,EAAIgB,GAAKA,EAAEC,sBAAsBjB,IAAIkB,IAC7G,CAACC,KAAMJ,EAAMG,EAAEE,KAAK,EAAGC,MAAOC,YAAYxB,EAAKyB,UAAUL,EAAEG,MAAO,OAAO,GAAK,KAAKG,QAAQ,IAAK,EAAE,CAAC,CAAC,EAC5G,EAAEC,KAAK,CAACC,EAAgBC,IAAmBA,EAAEN,MAAQK,EAAEL,KAAK,CAAC,CAAC,CACjE,CAAC,CAEH,CAAC,CACH,yCArCWnC,GAAkB0C,EAAAC,CAAA,EAAAD,EAAAE,CAAA,EAAAF,EAAAG,CAAA,EAAAH,EAAAI,CAAA,EAAAJ,EAAAK,CAAA,CAAA,CAAA,sBAAlB/C,EAAkBgD,UAAA,CAAA,CAAA,gBAAA,CAAA,EAAAC,WAAA,GAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,YAAA,eAAA,EAAA,CAAA,QAAA,eAAA,EAAA,MAAA,EAAA,CAAA,EAAA,SAAA,OAAA,EAAA,CAAA,EAAA,MAAA,MAAA,SAAA,wBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,MAAA,MAAA,WAAA,EAAA,CAAA,EAAA,YAAA,YAAA,OAAA,MAAA,EAAA,CAAA,EAAA,SAAA,UAAA,oBAAA,EAAA,CAAA,EAAA,WAAA,YAAA,SAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,WAAA,WAAA,EAAA,CAAA,EAAA,QAAA,QAAA,OAAA,EAAA,CAAA,EAAA,iBAAA,iBAAA,mBAAA,eAAA,aAAA,6BAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCjC/BnE,EAAA,EAAAqE,GAAA,EAAA,EAAA,eAAA,CAAA,OAAiC9E,EAAA,gBAAA,YAAA,iBDwBzB+E,EACAC,GACAC,EACAC,GACAC,EACAC,EAAeC,EACfC,CAAqB,EAAAC,OAAA,CAAA;8DAAA,EAAAC,gBAAA,CAAA,CAAA,EAGvB,IAAOpE,EAAPqE,SAAOrE,CAAkB,GAAA",
  "names": ["\u0275\u0275elementContainerStart", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "openPageByYearList", "\u0275\u0275resetView", "stopPropagation", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "openWordByYearList", "\u0275\u0275advance", "\u0275\u0275property", "t_r3", "\u0275\u0275pureFunction1", "_c0", "\u0275\u0275pipeBind1", "ctx_r1", "totalPagesRead", "\u0275\u0275textInterpolate1", "totalWordsRead", "timeSpentReading", "avgHoursPerWeekSpentReading", "chaptersRead", "lastActive", "UserStatsInfoCardsComponent", "constructor", "statsService", "modalService", "accountService", "numberPipe", "CompactNumberPipe", "getPagesPerYear", "subscribe", "yearCounts", "ref", "open", "GenericListModalComponent", "scrollable", "componentInstance", "items", "map", "t", "name", "transform", "value", "title", "getWordsPerYear", "\u0275\u0275directiveInject", "StatisticsService", "NgbModal", "AccountService", "selectors", "inputs", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "UserStatsInfoCardsComponent_ng_container_0_Template", "IconAndTitleComponent", "DecimalPipe", "TimeDurationPipe", "TimeAgoPipe", "TranslocoDirective", "styles", "changeDetection", "_UserStatsInfoCardsComponent", "\u0275\u0275elementContainerStart", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "userStats_r1", "totalPagesRead", "totalWordsRead", "timeSpentReading", "chaptersRead", "lastActive", "avgHoursPerWeekSpentReading", "\u0275\u0275elementStart", "\u0275\u0275template", "UserStatsComponent_ng_container_0_div_1_ng_container_2_Template", "\u0275\u0275elementEnd", "\u0275\u0275pipeBind1", "ctx_r2", "userStats$", "userId", "isAdmin$", "percentageRead$", "t_r2", "UserStatsComponent_ng_container_0_div_1_Template", "UserStatsComponent", "constructor", "cdRef", "statService", "accountService", "memberService", "libraryService", "undefined", "destroyRef", "inject", "DestroyRef", "currentUser$", "pipe", "takeUntilDestroyed", "map", "u", "hasAdminRole", "ngOnInit", "getMember", "subscribe", "me", "id", "markForCheck", "getUserStatistics", "shareReplay", "readSeries$", "getReadingHistory", "PercentPipe", "getLibraryNames", "names", "d", "percentReadPerLibrary", "l", "name", "count", "value", "parseFloat", "transform", "replace", "sort", "a", "b", "\u0275\u0275directiveInject", "ChangeDetectorRef", "StatisticsService", "AccountService", "MemberService", "LibraryService", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "UserStatsComponent_ng_container_0_Template", "NgIf", "UserStatsInfoCardsComponent", "ReadingActivityComponent", "StatListComponent", "AsyncPipe", "TranslocoModule", "TranslocoDirective", "DayBreakdownComponent", "styles", "changeDetection", "_UserStatsComponent"]
}
