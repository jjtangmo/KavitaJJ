{
  "version": 3,
  "sources": ["src/app/user-settings/change-email/change-email.component.ts", "src/app/user-settings/change-email/change-email.component.html"],
  "sourcesContent": ["import {ChangeDetectionStrategy, ChangeDetectorRef, Component, DestroyRef, inject, OnInit} from '@angular/core';\nimport { FormControl, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\nimport {shareReplay, take} from 'rxjs';\nimport {User} from 'src/app/_models/user';\nimport {AccountService} from 'src/app/_services/account.service';\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport { ApiKeyComponent } from '../api-key/api-key.component';\nimport { NgbTooltip, NgbCollapse } from '@ng-bootstrap/ng-bootstrap';\nimport {NgIf, NgFor, JsonPipe} from '@angular/common';\nimport {translate, TranslocoDirective} from \"@ngneat/transloco\";\n\n@Component({\n    selector: 'app-change-email',\n    templateUrl: './change-email.component.html',\n    styleUrls: ['./change-email.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n  imports: [NgIf, NgbTooltip, NgbCollapse, NgFor, ReactiveFormsModule, ApiKeyComponent, TranslocoDirective, JsonPipe]\n})\nexport class ChangeEmailComponent implements OnInit {\n\n  private readonly destroyRef = inject(DestroyRef);\n\n  form: FormGroup = new FormGroup({});\n  user: User | undefined = undefined;\n  errors: string[] = [];\n  isViewMode: boolean = true;\n  emailLink: string = '';\n  emailConfirmed: boolean = true;\n  hasValidEmail: boolean = true;\n  canEdit: boolean = false;\n\n\n  public get email() { return this.form.get('email'); }\n\n  makeLink: (val: string) => string = (val: string) => {return this.emailLink};\n\n  constructor(public accountService: AccountService, private toastr: ToastrService, private readonly cdRef: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.accountService.currentUser$.pipe(takeUntilDestroyed(this.destroyRef), shareReplay()).subscribe(user => {\n      this.user = user;\n      this.canEdit = !this.accountService.hasReadOnlyRole(user!);\n      this.form.addControl('email', new FormControl(user?.email, [Validators.required, Validators.email]));\n      this.form.addControl('password', new FormControl('', [Validators.required]));\n      this.cdRef.markForCheck();\n      this.accountService.isEmailConfirmed().subscribe((confirmed) => {\n        this.emailConfirmed = confirmed;\n        this.cdRef.markForCheck();\n      });\n      this.accountService.isEmailValid().subscribe(isValid => {\n        this.hasValidEmail = isValid;\n        this.cdRef.markForCheck();\n      });\n    });\n  }\n\n  resetForm() {\n    this.form.get('email')?.setValue(this.user?.email);\n    this.errors = [];\n    this.cdRef.markForCheck();\n  }\n\n  saveForm() {\n    if (this.user === undefined) { return; }\n\n    const model = this.form.value;\n    this.errors = [];\n    this.accountService.updateEmail(model.email, model.password).subscribe(updateEmailResponse => {\n      if (updateEmailResponse.invalidEmail) {\n        this.toastr.success(translate('toasts.email-sent-to-no-existing', {email: model.email}));\n      }\n\n      if (updateEmailResponse.emailSent) {\n        this.toastr.success(translate('toasts.email-sent-to'));\n      } else {\n        this.toastr.success(translate('toasts.change-email-no-email'));\n        this.accountService.refreshAccount().subscribe(user => {\n          this.user = user;\n          this.form.get('email')?.setValue(this.user?.email);\n          this.cdRef.markForCheck();\n        });\n\n      }\n\n      this.isViewMode = true;\n      this.resetForm();\n    }, err => {\n      this.errors = err;\n    })\n  }\n\n  toggleViewMode() {\n    this.isViewMode = !this.isViewMode;\n    this.resetForm();\n  }\n\n}\n", "<ng-container *transloco=\"let t; read:'change-email'\">\n  <div class=\"card mt-2\">\n    <div class=\"card-body\">\n      <div class=\"card-title\">\n        <div class=\"container-fluid row mb-2\">\n          <div class=\"col-10 col-sm-11\">\n            <h4 id=\"email-card\">{{t('email-title')}}\n              @if(emailConfirmed) {\n                <i class=\"fa-solid fa-circle-check ms-1 confirm-icon\" aria-hidden=\"true\" [ngbTooltip]=\"t('email-confirmed')\"></i>\n                <span class=\"visually-hidden\">{{t('email-confirmed')}}</span>\n              } @else {\n                <i class=\"fa-solid fa-circle ms-1 confirm-icon error\" aria-hidden=\"true\" [ngbTooltip]=\"t('email-not-confirmed')\"></i>\n                <span class=\"visually-hidden\">{{t('email-not-confirmed')}}</span>\n              }\n            </h4>\n          </div>\n          <div class=\"col-1 text-end\">\n            <button class=\"btn btn-primary btn-sm\" (click)=\"toggleViewMode()\" [disabled]=\"!canEdit\">{{isViewMode ? t('edit') : t('cancel')}}</button>\n          </div>\n        </div>\n      </div>\n\n      <ng-container *ngIf=\"isViewMode\">\n        <div class=\"container-fluid row\">\n          <span class=\"col-12\">{{user?.email}}</span>\n        </div>\n      </ng-container>\n\n      <div #collapse=\"ngbCollapse\" [(ngbCollapse)]=\"isViewMode\">\n        <ng-container>\n          <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errors.length > 0\">\n            <div *ngFor=\"let error of errors\">{{error}}</div>\n          </div>\n          <form [formGroup]=\"form\">\n            @if(!hasValidEmail) {\n              <div class=\"alert alert-warning\" role=\"alert\">\n                {{t('has-invalid-email')}}\n              </div>\n            }\n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">{{t('email-label')}}</label>\n              <input class=\"form-control custom-input\" type=\"email\" id=\"email\" formControlName=\"email\"\n                     [class.is-invalid]=\"form.get('email')?.invalid && form.get('email')?.touched\">\n              <div id=\"email-validations\" class=\"invalid-feedback\" *ngIf=\"form.get('email')?.errors\">\n                <div *ngIf=\"form.get('email')?.errors?.required\">\n                  {{t('required-field')}}\n                </div>\n                <div *ngIf=\"form.get('email')?.errors?.email\">\n                  {{t('valid-email')}}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"password\" class=\"form-label\">{{t('current-password-label')}}</label>\n              <input class=\"form-control custom-input\" type=\"password\" id=\"password\" formControlName=\"password\"\n                     [class.is-invalid]=\"form.get('password')?.invalid && form.get('password')?.touched\">\n              <div id=\"password-validations\" class=\"invalid-feedback\" *ngIf=\"form.dirty || form.touched\">\n                <div *ngIf=\"form.get('password')?.errors?.required\">\n                  {{t('required-field')}}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col-auto d-flex d-md-block justify-content-sm-center text-md-end mb-3\">\n              <button type=\"button\" class=\"flex-fill btn btn-secondary me-2\" aria-describedby=\"email-card\" (click)=\"resetForm()\">{{t('reset')}}</button>\n              <button type=\"submit\" class=\"flex-fill btn btn-primary\" aria-describedby=\"email-card\" (click)=\"saveForm()\" [disabled]=\"!form.valid || !(form.dirty || form.touched)\">{{t('save')}}</button>\n            </div>\n          </form>\n        </ng-container>\n\n        <ng-container *ngIf=\"emailLink !== ''\">\n          <h4>{{t('email-updated-title')}}</h4>\n          <p>{{t('email-updated-description')}}</p>\n          <a class=\"email-link\" href=\"{{emailLink}}\" target=\"_blank\" rel=\"noopener noreferrer\">{{t('setup-user-account')}}</a>\n          <app-api-key [title]=\"t('invite-url-label')\" [tooltipText]=\"t('invite-url-tooltip')\" [hideData]=\"false\" [showRefresh]=\"false\" [transform]=\"makeLink\"></app-api-key>\n        </ng-container>\n\n        <ng-template #noPermission>\n          <p>{{t('permission-error')}}</p>\n        </ng-template>\n      </div>\n\n\n    </div>\n\n\n  </div>\n\n\n</ng-container>\n"],
  "mappings": "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",
  "names": ["\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "t_r2", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "\u0275\u0275elementContainerStart", "ctx_r2", "user", "email", "error_r4", "\u0275\u0275template", "ChangeEmailComponent_ng_container_0_div_17_div_1_Template", "errors", "\u0275\u0275textInterpolate1", "ChangeEmailComponent_ng_container_0_div_24_div_1_Template", "ChangeEmailComponent_ng_container_0_div_24_div_2_Template", "tmp_5_0", "form", "get", "required", "tmp_6_0", "ChangeEmailComponent_ng_container_0_div_29_div_1_Template", "\u0275\u0275propertyInterpolate", "emailLink", "\u0275\u0275sanitizeUrl", "makeLink", "ChangeEmailComponent_ng_container_0_Conditional_8_Template", "ChangeEmailComponent_ng_container_0_Conditional_9_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleViewMode", "ChangeEmailComponent_ng_container_0_ng_container_13_Template", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "isViewMode", "ChangeEmailComponent_ng_container_0_div_17_Template", "ChangeEmailComponent_ng_container_0_Conditional_19_Template", "ChangeEmailComponent_ng_container_0_div_24_Template", "ChangeEmailComponent_ng_container_0_div_29_Template", "resetForm", "saveForm", "ChangeEmailComponent_ng_container_0_ng_container_35_Template", "ChangeEmailComponent_ng_container_0_ng_template_36_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275conditional", "emailConfirmed", "canEdit", "\u0275\u0275twoWayProperty", "length", "hasValidEmail", "\u0275\u0275classProp", "tmp_14_0", "invalid", "touched", "tmp_15_0", "tmp_17_0", "dirty", "valid", "ChangeEmailComponent", "constructor", "accountService", "toastr", "cdRef", "destroyRef", "inject", "DestroyRef", "FormGroup", "undefined", "val", "ngOnInit", "currentUser$", "pipe", "takeUntilDestroyed", "shareReplay", "subscribe", "hasReadOnlyRole", "addControl", "FormControl", "Validators", "markForCheck", "isEmailConfirmed", "confirmed", "isEmailValid", "isValid", "setValue", "model", "value", "updateEmail", "password", "updateEmailResponse", "invalidEmail", "success", "translate", "emailSent", "refreshAccount", "err", "\u0275\u0275directiveInject", "AccountService", "ToastrService", "ChangeDetectorRef", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ChangeEmailComponent_ng_container_0_Template", "NgIf", "NgbTooltip", "NgbCollapse", "NgFor", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "ApiKeyComponent", "TranslocoDirective", "styles", "changeDetection", "_ChangeEmailComponent"]
}
