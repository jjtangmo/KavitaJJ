{
  "version": 3,
  "sources": ["src/app/manga-reader/_models/layout-mode.ts", "src/app/_models/preferences/page-split-option.ts", "src/app/_models/preferences/reader-mode.ts", "src/app/_models/preferences/scaling-option.ts", "src/app/_models/preferences/preferences.ts"],
  "sourcesContent": ["/**\n * How to layout pages for reading\n */\nexport enum LayoutMode {\n    /**\n     * Renders a single page on the renderer. Cover images will follow splitting logic.\n     */\n    Single = 1,\n    /**\n     * Renders 2 pages side by side on the renderer. Cover images will not split and take up both panes.\n     */\n    Double = 2, \n    /**\n     * Renders 2 pages side by side on the renderer. Cover images will not split and take up both panes. This version reverses the order and is used for Manga only\n     */\n    DoubleReversed = 3,\n    /**\n     * Renders 2 pages side by side on the renderer. Cover images will split.\n     */\n    DoubleNoCover = 4,\n\n}", "export enum PageSplitOption {\n    /**\n     * Renders the left side of the image then the right side\n     */\n    SplitLeftToRight = 0,\n    /**\n     * Renders the right side of the image then the left side\n     */\n    SplitRightToLeft = 1,\n    /**\n     * Don't split and show the image in original size\n     */\n    NoSplit = 2,\n    /**\n     * Don't split and scale the image to fit screen space\n     */\n    FitSplit = 3\n}\n", "/**\n * The pagination method used by the reader\n */\nexport enum ReaderMode {\n    /**\n     * Manga default left/right to page\n     */\n    LeftRight = 0,\n    /**\n     * Manga up and down to page\n     */\n    UpDown = 1,\n    /**\n     * Webtoon reading (scroll) with optional areas to tap\n     */\n    Webtoon = 2\n}", "/**\n * How the image should scale to the screen size\n */\nexport enum ScalingOption {\n    /**\n     * Fit the image into the height of screen\n     */\n    FitToHeight = 0,\n    /**\n     * Fit the image into the width of screen\n     */\n    FitToWidth = 1,\n    /**\n     * Apply no logic and render the image as is\n     */\n    Original = 2,\n    /**\n     * Ask the reader to attempt to choose the best ScalingOption for the user\n     */\n    Automatic = 3\n}\n", "\nimport { LayoutMode } from 'src/app/manga-reader/_models/layout-mode';\nimport { BookPageLayoutMode } from '../readers/book-page-layout-mode';\nimport { PageLayoutMode } from '../page-layout-mode';\nimport { PageSplitOption } from './page-split-option';\nimport { ReaderMode } from './reader-mode';\nimport { ReadingDirection } from './reading-direction';\nimport { ScalingOption } from './scaling-option';\nimport { SiteTheme } from './site-theme';\nimport {WritingStyle} from \"./writing-style\";\nimport {PdfTheme} from \"./pdf-theme\";\nimport {PdfScrollMode} from \"./pdf-scroll-mode\";\nimport {PdfLayoutMode} from \"./pdf-layout-mode\";\nimport {PdfSpreadMode} from \"./pdf-spread-mode\";\n\nexport interface Preferences {\n    // Manga Reader\n    readingDirection: ReadingDirection;\n    scalingOption: ScalingOption;\n    pageSplitOption: PageSplitOption;\n    readerMode: ReaderMode;\n    autoCloseMenu: boolean;\n    layoutMode: LayoutMode;\n    backgroundColor: string;\n    showScreenHints: boolean;\n    emulateBook: boolean;\n    swipeToPaginate: boolean;\n\n    // Book Reader\n    bookReaderMargin: number;\n    bookReaderLineSpacing: number;\n    bookReaderFontSize: number;\n    bookReaderFontFamily: string;\n    bookReaderTapToPaginate: boolean;\n    bookReaderReadingDirection: ReadingDirection;\n    bookReaderWritingStyle: WritingStyle;\n    bookReaderThemeName: string;\n    bookReaderLayoutMode: BookPageLayoutMode;\n    bookReaderImmersiveMode: boolean;\n\n    // PDF Reader\n    pdfTheme: PdfTheme;\n    pdfScrollMode: PdfScrollMode;\n    pdfSpreadMode: PdfSpreadMode;\n\n    // Global\n    theme: SiteTheme;\n    globalPageLayoutMode: PageLayoutMode;\n    blurUnreadSummaries: boolean;\n    promptForDownloadSize: boolean;\n    noTransitions: boolean;\n    collapseSeriesRelationships: boolean;\n    shareReviews: boolean;\n    locale: string;\n}\n\nexport const readingDirections = [{text: 'left-to-right', value: ReadingDirection.LeftToRight}, {text: 'right-to-left', value: ReadingDirection.RightToLeft}];\nexport const bookWritingStyles = [{text: 'horizontal', value: WritingStyle.Horizontal}, {text: 'vertical', value: WritingStyle.Vertical}];\nexport const scalingOptions = [{text: 'automatic', value: ScalingOption.Automatic}, {text: 'fit-to-height', value: ScalingOption.FitToHeight}, {text: 'fit-to-width', value: ScalingOption.FitToWidth}, {text: 'original', value: ScalingOption.Original}];\nexport const pageSplitOptions = [{text: 'fit-to-screen', value: PageSplitOption.FitSplit}, {text: 'right-to-left', value: PageSplitOption.SplitRightToLeft}, {text: 'left-to-right', value: PageSplitOption.SplitLeftToRight}, {text: 'no-split', value: PageSplitOption.NoSplit}];\nexport const readingModes = [{text: 'left-to-right', value: ReaderMode.LeftRight}, {text: 'up-to-down', value: ReaderMode.UpDown}, {text: 'webtoon', value: ReaderMode.Webtoon}];\nexport const layoutModes = [{text: 'single', value: LayoutMode.Single}, {text: 'double', value: LayoutMode.Double}, {text: 'double-manga', value: LayoutMode.DoubleReversed}]; // TODO: Build this, {text: 'Double (No Cover)', value: LayoutMode.DoubleNoCover}\nexport const bookLayoutModes = [{text: 'scroll', value: BookPageLayoutMode.Default}, {text: '1-column', value: BookPageLayoutMode.Column1}, {text: '2-column', value: BookPageLayoutMode.Column2}];\nexport const pageLayoutModes = [{text: 'cards', value: PageLayoutMode.Cards}, {text: 'list', value: PageLayoutMode.List}];\nexport const pdfLayoutModes = [{text: 'pdf-multiple', value: PdfLayoutMode.Multiple},  {text: 'pdf-book', value: PdfLayoutMode.Book}];\nexport const pdfScrollModes = [{text: 'pdf-vertical', value: PdfScrollMode.Vertical}, {text: 'pdf-horizontal', value: PdfScrollMode.Horizontal}, {text: 'pdf-page', value: PdfScrollMode.Page}];\nexport const pdfSpreadModes = [{text: 'pdf-none', value: PdfSpreadMode.None}, {text: 'pdf-odd', value: PdfSpreadMode.Odd}, {text: 'pdf-even', value: PdfSpreadMode.Even}];\nexport const pdfThemes = [{text: 'pdf-light', value: PdfTheme.Light}, {text: 'pdf-dark', value: PdfTheme.Dark}];\n"],
  "mappings": "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",
  "names": ["LayoutMode", "PageSplitOption", "ReaderMode", "ScalingOption", "readingDirections", "text", "value", "ReadingDirection", "LeftToRight", "RightToLeft", "bookWritingStyles", "WritingStyle", "Horizontal", "Vertical", "scalingOptions", "ScalingOption", "Automatic", "FitToHeight", "FitToWidth", "Original", "pageSplitOptions", "PageSplitOption", "FitSplit", "SplitRightToLeft", "SplitLeftToRight", "NoSplit", "readingModes", "ReaderMode", "LeftRight", "UpDown", "Webtoon", "layoutModes", "LayoutMode", "Single", "Double", "DoubleReversed", "bookLayoutModes", "BookPageLayoutMode", "Default", "Column1", "Column2", "pageLayoutModes", "PageLayoutMode", "Cards", "List", "pdfLayoutModes", "PdfLayoutMode", "Multiple", "Book", "pdfScrollModes", "PdfScrollMode", "Page", "pdfSpreadModes", "PdfSpreadMode", "None", "Odd", "Even", "pdfThemes", "PdfTheme", "Light", "Dark"]
}
